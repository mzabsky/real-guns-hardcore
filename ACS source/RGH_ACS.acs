// Max script ID: 665

#define MINIMUM_TID 1000000
#define MAX_PLAYER_COUNT 32

#define NULL 0

# define COOPERATIVE (GameType() == GAME_NET_COOPERATIVE || GameType() == GAME_SINGLE_PLAYER)
# define COMPETITIVE (GameType() == GAME_NET_DEATHMATCH)


int KillersID;
int KillersHealth;
int KillersMaxHealth;
int KillersClass;
str KillersGun;
str ExperienceNeed[MAX_PLAYER_COUNT];
str CurrentVoice[MAX_PLAYER_COUNT];

str KillersIdArray[MAX_PLAYER_COUNT];

bool TacticalInsertion[MAX_PLAYER_COUNT];

bool arcade = false;

bool InvisibilityRunning[MAX_PLAYER_COUNT];

bool Entered[MAX_PLAYER_COUNT][8];

int nextTid = MINIMUM_TID;
// assign next free tid to the thing 
script 651 (void) {		
	Thing_ChangeTID(0,nextTid);	
	nextTid = nextTid + 1;
}

#include "math.acs"
#include "screen.acs"
#include "menus.acs"
#include "weapons.acs"
#include "monsters.acs"
 
#ifdef SKULLTAG
script 505 OPEN
{
	//if(GetCVAR("alwaysapplydmflags"))
                                       
	//if(GetCVAR("alwaysapplydmflags") == 0)
	//	ConsoleCommand("alwaysapplydmflags 1");
	
	if(GetCVAR("sv_nodrop") == 0)
		ConsoleCommand("sv_nodrop 1");

	if(GetCVAR("sv_doubleammo") == 0)
		ConsoleCommand("sv_doubleammo 1");

    ConsoleCommand("fov 90");

	if(GetCVAR("sv_respawnsuper") == 0)
		ConsoleCommand("sv_respawnsuper 1");
		
	if(GetCVAR("compat_soundslots") == 1)
		ConsoleCommand("compat_soundslots 0");
		
	if(GetCVAR("compat_instantrespawn") == 1) 
		ConsoleCommand("compat_instantrespawn 0");
		
	if(GetCVAR("sv_nocrouch") == 1)
		ConsoleCommand("sv_nocrouch 0");
		
	//if(GetCVAR("sv_weapondrop") == 1){
	//	log(s:"\"Drop weapons upon death\" must be disabled");
	//	ConsoleCommand("sv_weapondrop 0");
	//}

	if(GetCVAR("compat_nocrosshair") == 0)
		ConsoleCommand("compat_nocrosshair 1");

	if(GameType() == GAME_SINGLE_PLAYER){
		ConsoleCommand("archivecvar rgh_hitsound");
		ConsoleCommand("archivecvar rgh_xprate");
		ConsoleCommand("archivecvar rgh_vanillamonstersonly");
	}	
	
	delay(35*5);
	restart;
}
#endif

//KILL CAM script source.
//Function: It changes view to killer's view, and displays killer's health.
//------------------------------------------
//------- Set ID, this will most likely break some wads.
//------- Also change Special.
script 500 ENTER 
{	
	Thing_ChangeTID(0,MINIMUM_TID - MAX_PLAYER_COUNT + PlayerNumber());
        SetThingSpecial(0,226,502,0,0,0,0);
}

script 501 RESPAWN
{
#ifdef SKULLTAG   
	if(Entered[PlayerNumber()][PlayerTeam()] == 0){
		ACS_ExecuteAlways(597,0,0,0,0); // call the ENTER script if it was not called yet, for TDM where ENTER is not automatically called
		terminate;
	}
#endif

	if(CheckInventory("Spawned") == 0){
		ACS_ExecuteAlways(657,0,0,0,0); // Go to menu
	}

	if(CheckInventory("Classic") > 0){
		GiveInventory("ClassicDamage", 1);
		GiveInventory("ClassicDurability", 1);
		GiveInventory("Crosshair", 1);
	}
	
	if(CheckInventory("Arcade") > 0){
		arcade = true;
	}
	
	ACS_ExecuteAlways(500,0,0,0,0); // setup killcam and tid

    if(COOPERATIVE)
	{	
		if(CheckInventory("Perk2_StoppingPower") == 1)
			GiveInventory("Perk2_StoppingPowerEffect",1);
		if(CheckInventory("Perk2_DangerClose") == 1)
			GiveInventory("Perk2_DangerCloseEffect",1);
		if(CheckInventory("Perk2_Juggernaut") == 1)
			GiveInventory("Perk2_JuggernautEffect",1);
		if(CheckInventory("Perk3_Commando") == 1)
			GiveInventory("Perk3_CommandoEffect",1);
		if(CheckInventory("Perk3_SitRep") == 1){
			GiveInventory("Perk3_SitRepItem",1);
			GiveInventory("Perk3_SitRepEffect",1);
		}
		
		if(CheckInventory("Perk3_LastStand") == 1)
			GiveInventory("LastStandUrn",10000);
			
		if(CheckInventory("Perk1_OneManArmy") == 1)
			ACS_ExecuteAlways(629,0,0,0,0); // set ammo capacities
		SetActorProperty(0,APROP_Invulnerable,0);
		ACS_ExecuteAlways(631,0,0,0,0); // unmorph from last stand
		
	}
	else {
		if(KillersIdArray[PlayerNumber()] == 0){
			ChangeCamera(9999, 0, 1);
		}
		else {
		    ChangeCamera(KillersIdArray[PlayerNumber()], 0, 1);
		}
	}

	int MaxGunCount = GameSkill();

	If(CheckInventory("Perk1_OneManArmy_Pro") == 1){
		MaxGunCount++;
	}			
	SetAmmoCapacity("MaxWeaponsFilled",MaxGunCount);
	
	TakeInventory("InCombat", 5);
	ACS_ExecuteAlways(602,0,0,0,0); // adjust movement speed		
}

//------------------------------------------
//------- Set KillerID/KillerHealth to display/killcam --- RGA2: Play tango down sound
script 502 (void)
{	
	KillersID = ActivatorTID();
	KillersHealth = GetActorProperty(ActivatorTID(),APROP_Health);
	KillersMaxHealth = GetActorProperty(ActivatorTID(),APROP_SpawnHealth);
    KillersClass = GetActorTag(ActivatorTid());
    
	// GetActorProperty always returns 0 for players
	if(KillersMaxHealth == 0) KillersMaxHealth = 100;

	KillersGun = GetWeapon();
	
	Delay(20);
	
	ACS_Execute(504,0,0,0,0);
}



//------------------------------------------
//------- Player's death, shows killer health and cam after 1 second. Might not work properly.
script 503 DEATH
{		
	closeAwardMenu();
	
	//Preserve information just for this script; don't want it to view someone else's killer.
	Delay(1);
	int KillersHealths = KillersHealth;
	int KillersMaxHealths = KillersMaxHealth;
	int KillersIDs = KillersID;
	str KillersClasss = KillersClass;
	str KillersGuns = KillersGun;

    SetFont("CONFONT");
	
	log(i:KillersIDs);
	
	if(GetActorProperty(0,APROP_Health) < 1 && KillersIDs != 0) //Don't view if you've respawned already.
	{
		SetFont("BIGFONT");		
		ChangeCamera(KillersIDs,0,1);
		KillersIdArray[PlayerNumber()] = KillersID;
		if(ClassifyActor(KillersIDs) & ACTOR_PLAYER || ClassifyActor(KillersIDs) & ACTOR_BOT){
			if(KillersGun != ""){
				HudMessage(s:"\ccKilled by:\cg ", s:KillersGuns ;HUDMSG_FADEOUT,0,CR_Blue,0.5,0.5,10.0,2.0);
			}			
		}
		else {
			HudMessage(s:"\ccKilled by:\cg ", s:KillersClasss ;HUDMSG_FADEOUT,0,CR_Blue,0.5,0.5,10.0,2.0);
		}
		
		if(KillersHealths > 0){		
			HudMessage(s:"\ccKiller's Health left:\cg ", i:KillersHealths, s:"\cc of \cg", i:KillersMaxHealths, s:" \cc" ;HUDMSG_FADEOUT,0,CR_Blue,0.5,0.6,10.0,2.0);
		}
		else {
			HudMessage(s:"\ccKiller's Health left:\cg dead\cc" ;HUDMSG_FADEOUT,0,CR_Blue,0.5,0.6,10.0,2.0);
		}
	}
	KillersIDs = 0;
	KillersGun = "";
}
//------------------------------------------
//------- Addition to KILLCAM, it makes the player call out "Tango down!" or something like that, dependent on team.
script 504 (void)
{	
	if (ClassifyActor(0) & ACTOR_MONSTER){
	 	terminate;
	}

	Delay(1);
	if(GetActorProperty(0,APROP_Health) > 0 && COMPETITIVE)
	{
#ifdef SKULLTAG
		bool isRed = PlayerTeam() == TEAM_RED;		
		bool isBlue = PlayerTeam() == TEAM_BLUE;
		bool isThree = PlayerTeam() == 2;
		bool isFour = PlayerTeam() == 3;
#else
		bool isRed = false;
		bool isBlue = false;
		bool isThree = false;
		bool isFour = false;
#endif
		bool noTeam = (!(isRed || isBlue || isThree || isFour) || COOPERATIVE);

		if((!noTeam && isRed) || (noTeam && CheckInventory("Voice") == 1))
			ActivatorSound("russian/kill",127);
		else if((!noTeam && isBlue) || (noTeam && CheckInventory("Voice") == 0))
			ActivatorSound("us/kill",127);	
		else if((!noTeam && isThree) || (noTeam && CheckInventory("Voice") == 2))
			ActivatorSound("brazil/kill",127);
		else if((!noTeam && isFour) || (noTeam && CheckInventory("Voice") == 3))
			ActivatorSound("opfor/kill",127);
		else if(noTeam && CheckInventory("Voice") == 4)
			ActivatorSound("seal/kill",127);
		else if(noTeam && CheckInventory("Voice") == 5)
			ActivatorSound("tf141/kill",127);	
	}
}

//------------------------------------------
//------- Give stuff, fix minor bugs, and so on
script 597 ENTER
{
#ifdef SKULLTAG
	Entered[PlayerNumber()][PlayerTeam()] = true;
#endif
   
	// players go to the game mode menu first in single player
	if(GameType() == GAME_SINGLE_PLAYER){
		GiveInventory("MenuPlace", 9);
	}

	if(CheckInventory("Spawned") == 0){
		ACS_ExecuteAlways(657,0,0,0,0); // Go to menu
	}
	
	if(CheckInventory("Classic") > 0){
		GiveInventory("ClassicDamage", 1);
		GiveInventory("ClassicDurability", 1);
		GiveInventory("Crosshair", 1);
	}
	
	if(CheckInventory("Arcade") > 0){
		arcade = true;
	}
	
	if(CheckInventory("RewardsToPick") > 0){
		drawChooseAward();
	}
	
	TakeInventory("Speaking",1);
	
	TakeInventory("ReadyRegen",1);
    ACS_ExecuteAlways(606,0,0,0,0);

	if(COOPERATIVE)
	{	
		//if(GetActorProperty(0,APROP_HEALTH) < 100)
			
		//if(GetActorProperty(0, APROP_Speed) != 1.15)
		//	SetActorProperty(0, APROP_Speed, 1.15);
		if(CheckInventory("Perk2_StoppingPower") == 1)
			GiveInventory("Perk2_StoppingPowerEffect",1);
		if(CheckInventory("Perk2_DangerClose") == 1)
			GiveInventory("Perk2_DangerCloseEffect",1);
		if(CheckInventory("Perk2_Juggernaut") == 1)
			GiveInventory("Perk2_JuggernautEffect",1);
		if(CheckInventory("Perk3_Commando") == 1)
			GiveInventory("Perk3_CommandoEffect",1);
		if(CheckInventory("Perk3_SitRep") == 1){
			GiveInventory("Perk3_SitRepItem",1);
			GiveInventory("Perk3_SitRepEffect",1);			
		}
		
		if(CheckInventory("Perk1_OneManArmy") == 1)
			ACS_ExecuteAlways(629,0,0,0,0);
		
		if(CheckInventory("Perk3_LastStand") == 1)
			GiveInventory("LastStandUrn",10000);		
		
		SetActorProperty(0,APROP_Invulnerable,0);		
		ACS_ExecuteAlways(631,0,0,0,0);  // unmorph from last stand
		ACS_ExecuteAlways(634,0,0,0,0);
		
	}
	ACS_ExecuteAlways(640,0,0,0,0);
	
	int MaxGunCount = GameSkill();
	if(COMPETITIVE){
		MaxGunCount = 2;
	}
	If(CheckInventory("Perk1_OneManArmy_Pro") == 1){
		MaxGunCount++;
	}
	SetAmmoCapacity("MaxWeaponsFilled",MaxGunCount);
	
	TakeInventory("InCombat", 5);
	
	ACS_ExecuteAlways(650,0,0,0,0); // crosshair
	
	ACS_ExecuteAlways(602,0,0,0,0); // adjust movement speed

	SetFont("BIGFONT");
	HudMessage(s:"\ch== \cqReal Guns Hardcore 1.12 Beta 2 "
#ifdef SKULLTAG
		,s:"SKULLTAG"
#else
		,s:"ZDOOM"
#endif
#ifdef DEBUG
      	,s:" DEBUG"
#endif
		,s:" \ch=="; HUDMSG_FADEOUT,0,CR_BLUE,0.5,0.6,2.0,0.5);
	SetFont("DOOMFONT");
	HudMessage(s:"\ccBy \cvCommanderZ\cj and \cvVoltlocK"; HUDMSG_FADEOUT,0,CR_YELLOW,0.5,0.7,2.0,0.5);
}





//------------------------------------------
//------- Sets player speed, affected by "ExtremeConditioning pro" perk.
script 602 (void)
{
	int moveSpeed = NULL;

	if(CheckInventory("Aiming") == 1)
		moveSpeed = GetWeaponCustomProperty("aimingmovementspeed");
	else
		moveSpeed = GetWeaponCustomProperty("movementspeed");
	
	if(moveSpeed == NULL){
		moveSpeed = 1.5;
	}
	
	
	if(CheckInventory("Perk1_ExtremeConditioning") == 1)
	{
		moveSpeed = FixedMul(moveSpeed, 1.15);
	}
	
	SetActorProperty(0,APROP_Speed,moveSpeed);
}



//Draw XHairs since some weapons won't have an aim alt-fire
script 605 (void) CLIENTSIDE
{
	if(CheckWeapon("FAMAS M203"))
	{
		//SetFont("TUBEXHAR");
		//SetHudSize(800,600,1);
		//HudMessage(s:"a"; HUDMSG_PLAIN, CR_UNTRANSLATED, 0, 400.0, 314.0, 0.1);
		//delay(1);
		//restart;
	}
}

//Regeneration
script 606 (void)
{
	int regenRate = 16;
	if(GetCVAR("rgh_regenrate") > 0){
		regenRate = GetCVAR("rgh_regenrate");
	}
	
	int regenDelayMultiplier = 1;
	if(GetCVAR("rgh_regendelaymultiplier") > 0){
		regenDelayMultiplier = GetCVAR("rgh_regendelaymultiplier");
	}	
	
	int disableRegenDelay = 0;
	if(GetCVAR("rgh_disableregendelay") > 0){
		disableRegenDelay = 1;
	}	
	
	
	int i = 0;	
	int regenDelayCounter = 0;
	
	if(CheckInventory("ReadyRegen") == 0)
	{
		GiveInventory("ReadyRegen",1);
		while(true){
			i++;

			While(GetActorProperty(0,APROP_Health) < 100 && GetActorProperty(0,APROP_Health) > 0)
			{
				if(GetActorProperty(0,APROP_Health) == 1 && CheckInventory("InLastStand") == 0 && CheckInventory("Perk3_LastStand") == 1){
					ACS_ExecuteAlways(625,0,0,0,0);	
				}
			
				if(disableRegenDelay == 0 && (CheckInventory("InCombatRegeneration") > 0 || CheckInventory("PowerEMP") > 0 || (CheckInventory("InLastStand") > 0 && CheckInventory("Perk3_LastStand_Pro") == 0)))
				{			
					ACS_ExecuteAlways(647,0,0,0,0);

					Delay(25);
					
					regenDelayCounter = regenDelayCounter + 1;
					if(regenDelayCounter == regenDelayMultiplier){											
						regenDelayCounter = 0;
						
						if(CheckInventory("Perk1_ExtremeConditioning_PRO") == 1 && CheckInventory("InCombatRegeneration") == 2)
						{
							TakeInventory("InCombatRegeneration",2);
						}
						
						TakeInventory("InCombatRegeneration",1);
					}
				}
				else {
					if(GetActorProperty(0,APROP_Health) < 100 && GetActorProperty(0,APROP_Health) > 0)
					{
						ACS_ExecuteAlways(647,0,0,0,0);
						
						if(CheckInventory("Perk1_ExtremeConditioning_PRO") == 1)
							GiveInventory("Health",regenRate * 2);
						else
							GiveInventory("Health",regenRate);
						
						Delay(18);
					}   
				} 
			}
			Delay(15);
		}
		TakeInventory("ReadyRegen",1);
	}
}

//Hit Indicator
script 607 (int Jugg)
{
	if(CheckInventory("PowerEMP") > 0) terminate;
	
	SetFont("HITINDIC");
	if(Jugg == 1)
		SetFont("HITINDI2");
	SetHudSize(800,600,1);
	HudMessage(s:"a"; HUDMSG_FADEOUT, CR_UNTRANSLATED, 0, 400.0, 300.0, 0.25, 0.25);
	
    ACS_ExecuteAlways(655,0,0,0,0);
}

//Place TacticalInsertion
script 608 (void)
{
	if(TacticalInsertion[PlayerNumber()+1] == False)
	{
	  // tactical insertions will have TIDs in range [MINIMUM_TID - MAX_PLAYER_COUNT - MAX_PLAYER_COUNT, MINIMUM_TID - MAX_PLAYER_COUNT], 
	  // [MINIMUM_TID - MAX_PLAYER_COUNT, MINIMUM_TID] is reserved for players
		SpawnSpotFacing("TacticalInsertionPlaced", MINIMUM_TID - MAX_PLAYER_COUNT + PlayerNumber(),MINIMUM_TID - MAX_PLAYER_COUNT - MAX_PLAYER_COUNT + PlayerNumber());
		TacticalInsertion[PlayerNumber()+1] = True;
	}
}
//Spawn at TacticalInsertion
script 609 RESPAWN
{
	if(TacticalInsertion[PlayerNumber()+1] == True)
	{
		Delay(1);
		Teleport(PlayerNumber()+600);
		Delay(1);
		Thing_Remove(PlayerNumber()+600);
		SetFont("BIGFONT");
		if(COOPERATIVE)
			HudMessageBold(n:0,s:" \cdTactical Insertion!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		TacticalInsertion[PlayerNumber()+1] = False;
	}
}

script 610 (void)
{
	SetResultValue(TacticalInsertion[PlayerNumber()+1]);
}
script 611 (void)
{
	SetFont("BIGFONT");
	HudMessage(s:"\cfYou've already placed one!";HUDMSG_FADEOUT,0,CR_Blue,0.5,0.6,3.0,2.0);
}

//------------------------------------------
//------- This is for the monsters wad, refer to MAPINFO
script 612 (int Which)
{
  // Doom2 Map07
	if(Which == 0 && (ThingCountName("Arachnotron_2", 0) == 0 && ThingCountName("SpectreArachnotron", 0) == 0 && ThingCountName("Arachnobaron", 0) == 0))
	{
		Floor_RaiseByValue(667,16, 16);
	}
	else if(Which == 1 && (ThingCountName("Cyberdemon_2", 0) == 0 && ThingCountName("Annihilator", 0) == 0 && ThingCountName("Thamuz", 0) == 0 && ThingCountName("Cardinal", 0) == 0 && ThingCountName("Overlord", 0) == 0))
	{
#ifdef SKULLTAG
		ConsoleCommand("nextmap");		
#else		
		Exit_Normal(0);
#endif
	}
	else if(Which == 2 && (ThingCountName("SpiderMastermind_2", 0) == 0 && ThingCountName("CyberMastermind", 0) == 0 && ThingCountName("Demolisher", 0) == 0 && ThingCountName("Arachnophyte", 0) == 0 && ThingCountName("Overlord", 0) == 0))
	{
#ifdef SKULLTAG
		ConsoleCommand("nextmap");		
#else		
		Exit_Normal(0);
#endif
	}
	// Doom2 Map07
	else if(Which == 3 && (ThingCountName("Fatso_2", 0) == 0 && ThingCountName("Hectebus_2", 0) == 0 && ThingCountName("Acubus", 0) == 0 && ThingCountName("Juggernaut", 0) == 0))
	{
		Floor_LowerToNearest(666,16);
	}
	// Doom1 E1M8
	else if(Which == 4 && (ThingCountName("BaronOfHell_2", 0) == 0 && ThingCountName("Cybruiser", 0) == 0 && ThingCountName("Belphegor_2", 0) == 0 && ThingCountName("StoneKnight", 0) == 0 && ThingCountName("BruiserDemon", 0) == 0 && ThingCountName("HellsFury", 0) == 0 && ThingCountName("Afrit", 0) == 0 && ThingCountName("Hierophant", 0) == 0))
	{
		Floor_LowerToNearest(666,16);
	}
  // Ultimate Doom E4M6
  else if(Which == 5 && (ThingCountName("Cyberdemon_2", 0) == 0 && ThingCountName("Annihilator", 0) == 0 && ThingCountName("Thamuz", 0) == 0 && ThingCountName("Cardinal", 0) == 0 && ThingCountName("Overlord", 0) == 0))
	{
    Door_Open(666,16, 0);
  }
}

//------------------------------------------
//------- Calls out Tango down, this is for killing monsters.
script 613 (int XpAmount)
{   
	// monster's don't level up nor they call tango down
	if (!(ClassifyActor(0) & ACTOR_MONSTER)){		
		drawKillIndicator();
		
		int exp = XpAmount;
	 
	  if(GetCVAR("rgh_xprate") > 0){
      exp = exp * GetCVAR("rgh_xprate");
    }
    else if(GetCVAR("rgh_xprate") < 0){
      exp = exp / GetCVAR("rgh_xprate");
    }
		
		exp = exp / 7;
		
		if(CheckInventory("Arcade") == 0){
			// Don't give XP at max level and in last stand
			// This is handled by the experience token item in arcade mode
			if(CheckInventory("Rank") < 15 && CheckInventory("InLastStand") == 0){ 
				GiveInventory("Experience", exp);
				ACS_ExecuteAlways(616,0,0,0,0);
			}
		}
		else { // arcade mode
			// this is handled in actor death script
		}
	
		if(GetActorProperty(0,APROP_Health) > 0 && CheckInventory("Speaking") == 0)
		{
			GiveInventory("Speaking",1);
			
			delay(20);
			
#ifdef SKULLTAG
			bool isRed = PlayerTeam() == TEAM_RED;		
			bool isBlue = PlayerTeam() == TEAM_BLUE;
			bool isThree = PlayerTeam() == 2;
			bool isFour = PlayerTeam() == 3;
#else
			bool isRed = false;
			bool isBlue = false;
			bool isThree = false;
			bool isFour = false;
#endif
			bool noTeam = (!(isRed || isBlue || isThree || isFour) || COOPERATIVE);
			
			if((!noTeam && isRed) || (noTeam && CheckInventory("Voice") == 1))
				ActivatorSound("russian/kill",127);
			else if((!noTeam && isBlue) || (noTeam && CheckInventory("Voice") == 0))
				ActivatorSound("us/kill",127);	
			else if((!noTeam && isThree) || (noTeam && CheckInventory("Voice") == 2))
				ActivatorSound("brazil/kill",127);
			else if((!noTeam && isFour) || (noTeam && CheckInventory("Voice") == 3))
				ActivatorSound("opfor/kill",127);
			else if(noTeam && CheckInventory("Voice") == 4)
				ActivatorSound("seal/kill",127);
			else if(noTeam && CheckInventory("Voice") == 5)
				ActivatorSound("tf141/kill",127);
			
			
			Delay(5*35);
			TakeInventory("Speaking",1);
		}
	}
}

//Display Experience
Script 614 RESPAWN
{
	if(COOPERATIVE)
	{    
		while(CheckInventory("Health") > 0)
		{
			SETFONT("CONFONT");
			if(CheckInventory("Rank") < 15) //Only display the "XP need" when rank is not max
				HudMessage(s:"\cdExperience: \cf",d:CheckInventory("Experience"),s:"\cc/\cf",d:ExperienceNeed[PlayerNumber()+1], 
				s:" XP     ", s:"\cdRank: \cf",d:CheckInventory("Rank"); 
				HUDMSG_PLAIN, 2000+PlayerNumber(), CR_Green, 0.99, 0, 1.6);	
			else //Instead we draw "Current XP/XXX"
				HudMessage(s:"\cdRank: \cf",d:CheckInventory("Rank"); 
				HUDMSG_PLAIN, 2000+PlayerNumber(), CR_Green, 0.99, 0, 1.6);	
			Delay(25);
		}
	}
}

Script 615 ENTER
{
	if(ExperienceNeed[PlayerNumber()+1] < 500 && COOPERATIVE)
	{
		ExperienceNeed[PlayerNumber()+1] = 500;
		ACS_ExecuteAlways(614,0,0,0,0);			
		ACS_ExecuteAlways(616,0,0,0,0);			
		ACS_ExecuteAlways(617,0,0,0,0);			
	}
}

//------------------------------------------
//------- Check if leveled up
script 616 RESPAWN
{
	bool RankedUp;

	if(COMPETITIVE){
		terminate;
	}

	if(CheckInventory("Experience") >= 500 && CheckInventory("Rank") == 0)
	{
		ExperienceNeed[PlayerNumber()+1] = 1000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 1!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 1!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 1000 && CheckInventory("Rank") == 1)
	{
		ExperienceNeed[PlayerNumber()+1] = 1500;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 2!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 2!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 1500 && CheckInventory("Rank") == 2)
	{
		ExperienceNeed[PlayerNumber()+1] = 2500;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 3!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 3!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);

		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 2500 && CheckInventory("Rank") == 3)
	{
		ExperienceNeed[PlayerNumber()+1] = 3500;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 4!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 4!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 3500 && CheckInventory("Rank") == 4)
	{
		ExperienceNeed[PlayerNumber()+1] = 5000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 5!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 5!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);

		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 5000 && CheckInventory("Rank") == 5)
	{
		ExperienceNeed[PlayerNumber()+1] = 6500;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 6!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 6!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 6500 && CheckInventory("Rank") == 6)
	{
		ExperienceNeed[PlayerNumber()+1] = 8500;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 7!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 7!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);

		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 8500 && CheckInventory("Rank") == 7)
	{
		ExperienceNeed[PlayerNumber()+1] = 11000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 8!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 8!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 11000 && CheckInventory("Rank") == 8)
	{
		ExperienceNeed[PlayerNumber()+1] = 14000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 9!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 9!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);

		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 14000 && CheckInventory("Rank") == 9)
	{
		ExperienceNeed[PlayerNumber()+1] = 18000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 10!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 10!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 18000 && CheckInventory("Rank") == 10)
	{
		ExperienceNeed[PlayerNumber()+1] = 22000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 11!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 11!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 22000 && CheckInventory("Rank") == 11)
	{
		ExperienceNeed[PlayerNumber()+1] = 26000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 12!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 12!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 26000 && CheckInventory("Rank") == 12)
	{
		ExperienceNeed[PlayerNumber()+1] = 31000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 13!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 13!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 31000 && CheckInventory("Rank") == 13)
	{
		ExperienceNeed[PlayerNumber()+1] = 36000;
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 14!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 14!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
	if(CheckInventory("Experience") >= 36000 && CheckInventory("Rank") == 14)
	{
		ExperienceNeed[PlayerNumber()+1] = "xxx";
		LocalAmbientSound("game/rank",255);
		SetFont("BIGFONT");
		HudMessage(s:"You have ranked up to level 15!"; HUDMSG_TYPEON, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 0.1, 1.0);
		HudMessageBold(n:0,s:" \cdranked up to level 15!";HUDMSG_FADEOUT,0,CR_Blue,0.2,0.3,3.0,2.0);
		HudMessage(s:"Awards available!"; HUDMSG_TYPEON, 440+PlayerNumber(), CR_Green, 0.5, 0.65, 2.0, 0.1, 1.0);
		RankedUp = True;
		GiveInventory("Rank",1);
		GiveInventory("RewardsToPick",1);
		
		//ACS_ExecuteAlways(623,0,0,0,0);
	}
				
	//Check for RANK to give awards
	if(RankedUp == True)
		drawChooseAward();
}

//------------------------------------------
//------- Level up
script 617 RESPAWN 
{
	if(CheckInventory("Rank") == 0)
	{
		//SetActorProperty(0,APROP_Health,100);
		//SetActorProperty(0,APROP_SpawnHealth,100);
		ExperienceNeed[PlayerNumber()+1] = 500;		
	}
	if(CheckInventory("Rank") == 1)
	{
		//SetActorProperty(0,APROP_Health,108);
		//SetActorProperty(0,APROP_SpawnHealth,108);
		ExperienceNeed[PlayerNumber()+1] = 1000;		
	}
	if(CheckInventory("Rank") == 2)
	{
		//SetActorProperty(0,APROP_Health,116);
		//SetActorProperty(0,APROP_SpawnHealth,116);
		ExperienceNeed[PlayerNumber()+1] = 1500;		
	}
	if(CheckInventory("Rank") == 3)
	{
		//SetActorProperty(0,APROP_Health,124);
		//SetActorProperty(0,APROP_SpawnHealth,124);
		ExperienceNeed[PlayerNumber()+1] = 2500;		
	}
	if(CheckInventory("Rank") == 4)
	{
		//SetActorProperty(0,APROP_Health,132);
		//SetActorProperty(0,APROP_SpawnHealth,132);
		ExperienceNeed[PlayerNumber()+1] = 3500;		
	}
	if(CheckInventory("Rank") == 5)
	{
		//SetActorProperty(0,APROP_Health,140);
		//SetActorProperty(0,APROP_SpawnHealth,140);
		ExperienceNeed[PlayerNumber()+1] = 5000;		
	}
	if(CheckInventory("Rank") == 6)
	{
		//SetActorProperty(0,APROP_Health,148);
		//SetActorProperty(0,APROP_SpawnHealth,148);
		ExperienceNeed[PlayerNumber()+1] = 6500;		
	}
	if(CheckInventory("Rank") == 7)
	{
		//SetActorProperty(0,APROP_Health,156);
		//SetActorProperty(0,APROP_SpawnHealth,156);
		ExperienceNeed[PlayerNumber()+1] = 8500;		
	}
	if(CheckInventory("Rank") == 8)
	{
		//SetActorProperty(0,APROP_Health,164);
		//SetActorProperty(0,APROP_SpawnHealth,164);
		ExperienceNeed[PlayerNumber()+1] = 11000;		
	}
	if(CheckInventory("Rank") == 9)
	{
		//SetActorProperty(0,APROP_Health,172);
		//SetActorProperty(0,APROP_SpawnHealth,172);
		ExperienceNeed[PlayerNumber()+1] = 14000;		
	}
	if(CheckInventory("Rank") == 10)
	{
		//SetActorProperty(0,APROP_Health,180);
		//SetActorProperty(0,APROP_SpawnHealth,180);
		ExperienceNeed[PlayerNumber()+1] = 18000;		
	}
	if(CheckInventory("Rank") == 11)
	{
		//SetActorProperty(0,APROP_Health,188);
		//SetActorProperty(0,APROP_SpawnHealth,188);
		ExperienceNeed[PlayerNumber()+1] = 22000;		
	}
	if(CheckInventory("Rank") == 12)
	{
		//SetActorProperty(0,APROP_Health,196);
		//SetActorProperty(0,APROP_SpawnHealth,196);
		ExperienceNeed[PlayerNumber()+1] = 26000;		
	}
	if(CheckInventory("Rank") == 13)
	{
		//SetActorProperty(0,APROP_Health,204);
		//SetActorProperty(0,APROP_SpawnHealth,204);
		ExperienceNeed[PlayerNumber()+1] = 31000;		
	}
	if(CheckInventory("Rank") == 14)
	{
		//SetActorProperty(0,APROP_Health,212);
		//SetActorProperty(0,APROP_SpawnHealth,212);
		ExperienceNeed[PlayerNumber()+1] = 36000;		
	}
	if(CheckInventory("Rank") == 15)
	{
		//SetActorProperty(0,APROP_Health,220);
		//SetActorProperty(0,APROP_SpawnHealth,220);
		ExperienceNeed[PlayerNumber()+1] = "xxx";		
	}
}

//------------------------------------------
//------- This is for handling weapon pickups, refer to DECORATE. Usually "weaponnamePICKUP" at the bottom of the lump.
script 618 (int Which)
{
	int Count = 0;

	if((Which == 1) && CheckInventory("Intervention") == 0 && CheckInventory("Intervention Thermal") == 0 && CheckInventory("Intervention Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("InterventionThermal") == 1)
			GiveInventory("Intervention Thermal",1);
		else if(CheckInventory("InterventionExMags") == 1)
			GiveInventory("Intervention Ex Mags",1);
		else
			GiveInventory("Intervention",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 2) && CheckInventory("Barrett 50cal") == 0 && CheckInventory("Barrett 50cal Thermal") == 0 && CheckInventory("Barrett 50cal Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("BarrettThermal") == 1)
			GiveInventory("Barrett 50cal Thermal",1);
		else if(CheckInventory("BarrettExMags") == 1)
			GiveInventory("Barrett 50cal Ex Mags",1);
		else
			GiveInventory("Barrett 50cal",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 3) && CheckInventory("USP .45") == 0 && CheckInventory("USP .45 Ex Mags") == 0 && CheckInventory("USP .45 Akimbo") == 0 && CheckInventory("USP .45 Tac Knife") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("USP45ExMags") == 1)
			GiveInventory("USP .45 Ex Mags",1);
		else if(CheckInventory("USP45Akimbo") == 1)
			GiveInventory("USP .45 Akimbo",1);
		else if(CheckInventory("USP45Knife") == 1)
			GiveInventory("USP .45 Tac Knife",1);
		else
			GiveInventory("USP .45",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 4) && CheckInventory(".44 Magnum") == 0 && CheckInventory(".44 Magnum Akimbo") == 0 && CheckInventory(".44 Magnum Tac Knife") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("MagnumAkimbo") == 1)
			GiveInventory(".44 Magnum Akimbo",1);
		else if(CheckInventory("MagnumKnife") == 1)
			GiveInventory(".44 Magnum Tac Knife",1);
		else
			GiveInventory(".44 Magnum",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 5) && CheckInventory("FAMAS") == 0 && CheckInventory("FAMAS Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("FamasExMags") == 1)
			GiveInventory("FAMAS Ex Mags",1);
		else
			GiveInventory("FAMAS",1);
		GiveInventory("FAMAS M203",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 6) && CheckInventory("FAL") == 0 && CheckInventory("FAL Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("FALExMags") == 1)
			GiveInventory("FAL Ex Mags",1);
		else
			GiveInventory("FAL",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 7) && CheckInventory("SPAS-12") == 0 && CheckInventory("SPAS-12 Grip") == 0 && CheckInventory("SPAS-12 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("SPASGrip") == 1)
			GiveInventory("SPAS-12 Grip",1);
		else if(CheckInventory("SPASExMags") == 1)
			GiveInventory("SPAS-12 Ex Mags",1);
		else
			GiveInventory("SPAS-12",1);

		GiveInventory("MaxWeaponsFilled_Shotgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 8) && CheckInventory("AA-12") == 0 && CheckInventory("AA-12 Grip") == 0 && CheckInventory("AA-12 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("AA12Grip") == 1)
			GiveInventory("AA-12 Grip",1);
		else if(CheckInventory("AA12ExMags") == 1)
			GiveInventory("AA-12 Ex Mags",1);
		else
			GiveInventory("AA-12",1);

		GiveInventory("MaxWeaponsFilled_Shotgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 9) && CheckInventory("UMP45") == 0 && CheckInventory("UMP45 Rapid Fire") == 0 && CheckInventory("UMP45 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("UMP45RapidFire") == 1)
			GiveInventory("UMP45 Rapid Fire",1);
		else if(CheckInventory("UMP45ExMags") == 1)
			GiveInventory("UMP45 Ex Mags",1);
		else
			GiveInventory("UMP45",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 10) && CheckInventory("TDI Vector") == 0 && CheckInventory("TDI Vector Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("VectorExMags") == 1)
			GiveInventory("TDI Vector Ex Mags",1);
		else
			GiveInventory("TDI Vector",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 11) && CheckInventory("Mini-UZI") == 0 && CheckInventory("Mini-UZI Ex Mags") == 0 && CheckInventory("Mini-UZI Akimbo") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("MiniUziExMags") == 1)
			GiveInventory("Mini-UZI Ex Mags",1);
		else if(CheckInventory("MiniUziAkimbo") == 1)
			GiveInventory("Mini-UZI Akimbo",1);
		else
			GiveInventory("Mini-UZI",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 12) && CheckInventory("FN P90") == 0 && CheckInventory("FN P90 Rapid Fire") == 0 && CheckInventory("FN P90 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("P90RapidFire") == 1)
			GiveInventory("FN P90 Rapid Fire",1);
		else if(CheckInventory("P90ExMags") == 1)
			GiveInventory("FN P90 Ex Mags",1);
		else
			GiveInventory("FN P90",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 13) && CheckInventory("ACR") == 0 && CheckInventory("ACR Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("ACRExMags") == 1)
			GiveInventory("ACR Ex Mags",1);
		else
			GiveInventory("ACR",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 14) && CheckInventory("MG4") == 0 && CheckInventory("MG4 Grip") == 0 && CheckInventory("MG4 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("MG4Grip") == 1)
			GiveInventory("MG4 Grip",1);
		else if(CheckInventory("MG4ExMags") == 1)
			GiveInventory("MG4 Ex Mags",1);
		else
			GiveInventory("MG4",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 15) && CheckInventory("G18") == 0 && CheckInventory("G18 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("G18ExMags") == 1)
			GiveInventory("G18 Ex Mags",1);
		if(CheckInventory("G18Akimbo") == 1)
			GiveInventory("G18 Akimbo",1);
		else
			GiveInventory("G18",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 16) && CheckInventory("PP2000") == 0 && CheckInventory("PP2000 Ex Mags") == 0 && CheckInventory("PP2000 Akimbo") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("PP2000ExMags") == 1)
			GiveInventory("PP2000 Ex Mags",1);
		else if(CheckInventory("PP2000Akimbo") == 1)
			GiveInventory("PP2000 Akimbo",1);
		else
			GiveInventory("PP2000",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 17) && CheckInventory("SCAR-H") == 0 && CheckInventory("SCAR-H Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("SCARHExMags") == 1)
			GiveInventory("SCAR-H Ex Mags",1);
		else
			GiveInventory("SCAR-H",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 18) && CheckInventory("M4A1") == 0 && CheckInventory("M4A1 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M4A1ExMags") == 1)
			GiveInventory("M4A1 Ex Mags",1);
		else
			GiveInventory("M4A1",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 19) && CheckInventory("Ranger") == 0)
	{
		SetResultValue(1);
		GiveInventory("Ranger",1);

		GiveInventory("MaxWeaponsFilled_Shotgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 20) && CheckInventory("F2000") == 0 && CheckInventory("F2000 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("F2000ExMags") == 1)
			GiveInventory("F2000 Ex Mags",1);
		else
			GiveInventory("F2000",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 21) && CheckInventory("MP5K") == 0 && CheckInventory("MP5K Rapid Fire") == 0 && CheckInventory("MP5K Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("MP5RapidFire") == 1)
			GiveInventory("MP5K Rapid Fire",1);
		else if(CheckInventory("MP5ExMags") == 1)
			GiveInventory("MP5K Ex Mags",1);
		else
			GiveInventory("MP5K",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 22) && CheckInventory("M93 Raffica") == 0 && CheckInventory("M93 Raffica Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M93RExMags") == 1)
			GiveInventory("M93 Raffica Ex Mags",1);
		else
			GiveInventory("M93 Raffica",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 23) && CheckInventory("Thumper") == 0)
	{
		SetResultValue(1);
		GiveInventory("Thumper",1);

		GiveInventory("MaxWeaponsFilled_Explosive",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 24) && CheckInventory("AT4-HS") == 0)
	{
		SetResultValue(1);
		GiveInventory("AT4-HS",1);

		GiveInventory("MaxWeaponsFilled_Explosive",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 25) && CheckInventory("M16A4") == 0 && CheckInventory("M16A4 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M16ExMags") == 1)
			GiveInventory("M16A4 Ex Mags",1);
		else
			GiveInventory("M16A4",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 26) && CheckInventory("AK-47") == 0 && CheckInventory("AK-47 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("AK47ExMags") == 1)
			GiveInventory("AK-47 Ex Mags",1);
		else
			GiveInventory("AK-47",1);

		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 27) && CheckInventory("Striker") == 0 && CheckInventory("Striker Grip") == 0 && CheckInventory("Striker Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("StrikerGrip") == 1)
			GiveInventory("Striker Grip",1);
		else if(CheckInventory("StrikerExMags") == 1)
			GiveInventory("Striker Ex Mags",1);
		else
			GiveInventory("Striker",1);

		GiveInventory("MaxWeaponsFilled_Shotgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 28) && CheckInventory("AUG HBAR") == 0 && CheckInventory("AUG HBAR Grip") == 0 && CheckInventory("AUG HBAR Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("AUGHBARGrip") == 1)
			GiveInventory("AUG HBAR Grip",1);
		else if(CheckInventory("AUGHBARExMags") == 1)
			GiveInventory("AUG HBAR Ex Mags",1);
		else
			GiveInventory("AUG HBAR",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 29) && CheckInventory("WA2000") == 0 && CheckInventory("WA2000 Thermal") == 0 && CheckInventory("WA2000 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("WA2000Thermal") == 1)
			GiveInventory("WA2000 Thermal",1);
		else if(CheckInventory("WA2000ExMags") == 1)
			GiveInventory("WA2000 Ex Mags",1);
		else
			GiveInventory("WA2000",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 30) && CheckInventory("Desert Eagle") == 0 && CheckInventory("Deagle Special") == 0 && CheckInventory("Desert Eagle Akimbo") == 0 && CheckInventory("Desert Eagle Tac Knife") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("DeagleExMags") == 1)
			GiveInventory("Deagle Special",1);
		else if(CheckInventory("DeagleAkimbo") == 1)
			GiveInventory("Desert Eagle Akimbo",1);
		else if(CheckInventory("DeagleKnife") == 1)
			GiveInventory("Desert Eagle Tac Knife",1);
		else
			GiveInventory("Desert Eagle",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 31) && CheckInventory("M9") == 0 && CheckInventory("M9 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M9ExMags") == 1)
			GiveInventory("M9 Ex Mags",1);
		else if(CheckInventory("M9Akimbo") == 1)
			GiveInventory("M9 Akimbo",1);
		else if(CheckInventory("M9Knife") == 1)
			GiveInventory("M9 Tac Knife",1);
		else
			GiveInventory("M9",1);

		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 32) && CheckInventory("M1014") == 0 && CheckInventory("M1014 Grip") == 0 && CheckInventory("M1014 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M1014Grip") == 1)
			GiveInventory("M1014 Grip",1);
		else if(CheckInventory("M1014ExMags") == 1)
			GiveInventory("M1014 Ex Mags",1);
		else
			GiveInventory("M1014",1);

		GiveInventory("MaxWeaponsFilled_Shotgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 33) && CheckInventory("M240") == 0 && CheckInventory("M240 Grip") == 0 && CheckInventory("M240 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M240Grip") == 1)
			GiveInventory("M240 Grip",1);
		else if(CheckInventory("M240ExMags") == 1)
			GiveInventory("M240 Ex Mags",1);
		else
			GiveInventory("M240",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 34) && CheckInventory("L86") == 0 && CheckInventory("L86 Grip") == 0 && CheckInventory("L86 Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("L86Grip") == 1)
			GiveInventory("L86 Grip",1);
		else if(CheckInventory("L86ExMags") == 1)
			GiveInventory("L86 Ex Mags",1);
		else
			GiveInventory("L86",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 35) && CheckInventory("RPG-7") == 0)
	{
		SetResultValue(1);
		GiveInventory("RPG-7",1);

		GiveInventory("MaxWeaponsFilled_Explosive",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 36) && CheckInventory("Model 1887") == 0)
	{
		SetResultValue(1);
		GiveInventory("Model 1887",1);

		GiveInventory("MaxWeaponsFilled_Shotgun",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else if((Which == 37) && CheckInventory("M14 EBR") == 0 && CheckInventory("M14 EBR Thermal") == 0 && CheckInventory("M14 EBR Ex Mags") == 0)
	{
		SetResultValue(1);
		if(CheckInventory("M14Thermal") == 1)
			GiveInventory("M14 EBR Thermal",1);
		else if(CheckInventory("M14ExMags") == 1)
			GiveInventory("M14 EBR Ex Mags",1);
		else
			GiveInventory("M14 EBR",1);

		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",1);
	}
	else
		SetResultValue(0);
		
	ACS_ExecuteAlways(602,0,0,0,0);
}

//------------------------------------------
//------- Attachments, refer to the decorate.
script 619 (int Which)
{
	if(CheckInventory("RewardsToPick") == 0){
		terminate;
	}
	
	TakeInventory("RewardsToPick",1);

	if(Which == 0) //Grip
	{
		if(CheckWeapon("AA-12") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("AA-12",1);
			GiveInventory("AA-12 Grip",1);
			GiveInventory("AA12Grip",1);
			SetWeapon("AA-12 Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to AA-12!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("SPAS-12") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("SPAS-12",1);
			GiveInventory("SPAS-12 Grip",1);
			GiveInventory("SPASGrip",1);
			SetWeapon("SPAS-12 Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to SPAS-12!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("MG4") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("MG4",1);
			GiveInventory("MG4 Grip",1);
			GiveInventory("MG4Grip",1);
			SetWeapon("MG4 Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to MG4!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Striker") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Striker",1);
			GiveInventory("Striker Grip",1);
			GiveInventory("StrikerGrip",1);
			SetWeapon("Striker Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to Striker!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("AUG HBAR") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("AUG HBAR",1);
			GiveInventory("AUG HBAR Grip",1);
			GiveInventory("AUGHBARGrip",1);
			SetWeapon("AUG HBAR Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to AUG HBAR!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M1014") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M1014",1);
			GiveInventory("M1014 Grip",1);
			GiveInventory("M1014Grip",1);
			SetWeapon("M1014 Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to M1014!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M240") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M240",1);
			GiveInventory("M240 Grip",1);
			GiveInventory("M240Grip",1);
			SetWeapon("M240 Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to M240!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("L86") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("L86",1);
			GiveInventory("L86 Grip",1);
			GiveInventory("L86Grip",1);
			SetWeapon("L86 Grip");

			SetFont("BIGFONT");
			HudMessage(s:"Grip attached to L86!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else
		{
			SetFont("BIGFONT");
			HudMessage(s:"You can't attach Grip on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			GiveInventory("GripAttachment",1);
			
			GiveInventory("RewardsToPick",1);
		}
	}
	else if(Which == 1) //Rapid Fire
	{
		if(CheckWeapon("UMP45") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("UMP45",1);
			GiveInventory("UMP45 Rapid Fire",1);
			GiveInventory("UMP45RapidFire",1);
			SetWeapon("UMP45 Rapid Fire");

			SetFont("BIGFONT");
			HudMessage(s:"Rapid Fire attached to UMP45!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("FN P90") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("FN P90",1);
			GiveInventory("FN P90 Rapid Fire",1);
			GiveInventory("P90RapidFire",1);
			SetWeapon("FN P90 Rapid Fire");

			SetFont("BIGFONT");
			HudMessage(s:"Rapid Fire attached to P90!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("MP5K") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("MP5K",1);
			GiveInventory("MP5K Rapid Fire",1);
			GiveInventory("MP5RapidFire",1);
			SetWeapon("MP5K Rapid Fire");

			SetFont("BIGFONT");
			HudMessage(s:"Rapid Fire attached to MP5K!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else
		{
			SetFont("BIGFONT");
			HudMessage(s:"You can't attach Rapid Fire on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			GiveInventory("RapidFireAttachment",1);
			
			GiveInventory("RewardsToPick",1);
		}
	}
	else if(Which == 2) //Extended Mags
	{
		if(CheckWeapon("USP .45") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("USP .45",1);
			GiveInventory("USP .45 Ex Mags",1);
			GiveInventory("USP45ExMags",1);
			SetWeapon("USP45 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to USP .45!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("PP2000") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("PP2000",1);
			GiveInventory("PP2000 Ex Mags",1);
			GiveInventory("PP2000ExMags",1);
			SetWeapon("PP2000 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to PP2000!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("G18") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("G18",1);
			GiveInventory("G18 Ex Mags",1);
			GiveInventory("G18ExMags",1);
			SetWeapon("G18 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to G18!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("SPAS-12") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("SPAS-12",1);
			GiveInventory("SPAS-12 Ex Mags",1);
			GiveInventory("SPASExMags",1);
			SetWeapon("SPAS-12 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to SPAS-12!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("AA-12") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("AA-12",1);
			GiveInventory("AA-12 Ex Mags",1);
			GiveInventory("AA12ExMags",1);
			SetWeapon("AA-12 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to AA-12!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("UMP45") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("UMP45",1);
			GiveInventory("UMP45 Ex Mags",1);
			GiveInventory("UMP45ExMags",1);
			SetWeapon("UMP45 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to UMP45!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("TDI Vector") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("TDI Vector",1);
			GiveInventory("TDI Vector Ex Mags",1);
			GiveInventory("VectorExMags",1);
			SetWeapon("TDI Vector Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to TDI Vector!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Mini-UZI") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Mini-UZI",1);
			GiveInventory("Mini-UZI Ex Mags",1);
			GiveInventory("MiniUziExMags",1);
			SetWeapon("Mini-UZI Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to Mini-UZI!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("FN P90") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("FN P90",1);
			GiveInventory("FN P90 Ex Mags",1);
			GiveInventory("P90ExMags",1);
			SetWeapon("FN P90 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to FN P90!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M4A1") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M4A1",1);
			GiveInventory("M4A1 Ex Mags",1);
			GiveInventory("M4A1ExMags",1);
			SetWeapon("M4A1 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M4A1!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("FAMAS") == 1 || CheckWeapon("FAMAS M203") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("FAMAS",1);
			GiveInventory("FAMAS Ex Mags",1);
			GiveInventory("FamasExMags",1);
			SetWeapon("FAMAS Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to FAMAS!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("SCAR-H") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("SCAR-H",1);
			GiveInventory("SCAR-H Ex Mags",1);
			GiveInventory("SCARHExMags",1);
			SetWeapon("SCAR-H Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to SCAR-H!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("FAL") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("FAL",1);
			GiveInventory("FAL Ex Mags",1);
			GiveInventory("FALExMags",1);
			SetWeapon("FAL Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to FAL!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("ACR") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("ACR",1);
			GiveInventory("ACR Ex Mags",1);
			GiveInventory("ACRExMags",1);
			SetWeapon("ACR Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to ACR!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("F2000") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("F2000",1);
			GiveInventory("F2000 Ex Mags",1);
			GiveInventory("F2000ExMags",1);
			SetWeapon("F2000 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to F2000!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Intervention") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Intervention",1);
			GiveInventory("Intervention Ex Mags",1);
			GiveInventory("InterventionExMags",1);
			SetWeapon("Intervention Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to Intervention!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Barrett 50cal") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Barrett 50cal",1);
			GiveInventory("Barrett 50cal Ex Mags",1);
			GiveInventory("BarrettExMags",1);
			SetWeapon("Barrett 50cal Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to Barrett 50cal!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("MG4") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("MG4",1);
			GiveInventory("MG4 Ex Mags",1);
			GiveInventory("MG4ExMags",1);
			SetWeapon("MG4 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to MG4!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("MP5K") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("MP5K",1);
			GiveInventory("MP5K Ex Mags",1);
			GiveInventory("MP5ExMags",1);
			SetWeapon("MP5K Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to MP5K!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M93 Raffica") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M93 Raffica",1);
			GiveInventory("M93 Raffica Ex Mags",1);
			GiveInventory("M93RExMags",1);
			SetWeapon("M93 Raffica Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M93 Raffica!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M16A4") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M16A4",1);
			GiveInventory("M16A4 Ex Mags",1);
			GiveInventory("M16ExMags",1);
			SetWeapon("M16A4 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M16A4!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("AK-47") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("AK-47",1);
			GiveInventory("AK-47 Ex Mags",1);
			GiveInventory("AK47ExMags",1);
			SetWeapon("AK-47 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to AK-47!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Striker") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Striker",1);
			GiveInventory("Striker Ex Mags",1);
			GiveInventory("StrikerExMags",1);
			SetWeapon("Striker Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to Striker!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("AUG HBAR") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("AUG HBAR",1);
			GiveInventory("AUG HBAR Ex Mags",1);
			GiveInventory("AUGHBARExMags",1);
			SetWeapon("AUG HBAR Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to AUG HBAR!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("WA2000") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("WA2000",1);
			GiveInventory("WA2000 Ex Mags",1);
			GiveInventory("WA2000ExMags",1);
			SetWeapon("WA2000 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to WA2000!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M9") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M9",1);
			GiveInventory("M9 Ex Mags",1);
			GiveInventory("M9ExMags",1);
			SetWeapon("M9 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M9!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M1014") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M1014",1);
			GiveInventory("M1014 Ex Mags",1);
			GiveInventory("M1014ExMags",1);
			SetWeapon("M1014 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M1014!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M240") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M240",1);
			GiveInventory("M240 Ex Mags",1);
			GiveInventory("M240ExMags",1);
			SetWeapon("M240 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M240!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Desert Eagle") == 1)
		{
			if(CheckInventory("Combo") == 6)
			{
				ACS_ExecuteAlways(622,0,0,0,0);
			
				TakeInventory("Desert Eagle",1);
				GiveInventory("Deagle Special",1);
				GiveInventory("DeagleExMags",1);
				SetWeapon("Deagle Special");

				SetFont("BIGFONT");
				HudMessage(s:"Hidden Desert Eagle Special unlocked!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			}
			else
			{
				GiveInventory("Combo",1);
				SetFont("BIGFONT");
				HudMessage(s:"You can't attach Extended Mags on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
				GiveInventory("ExtendedMagsAttachment",1);
			}
		}
		else if(CheckWeapon("L86") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("L86",1);
			GiveInventory("L86 Ex Mags",1);
			GiveInventory("L86ExMags",1);
			SetWeapon("L86 Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to L86!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M14 EBR") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M14 EBR",1);
			GiveInventory("M14 EBR Ex Mags",1);
			GiveInventory("M14ExMags",1);
			SetWeapon("M14 EBR Ex Mags");

			SetFont("BIGFONT");
			HudMessage(s:"Extended Mags attached to M14 EBR!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else
		{
			SetFont("BIGFONT");
			HudMessage(s:"You can't attach Extended Mags on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			GiveInventory("ExtendedMagsAttachment",1);
			
			GiveInventory("RewardsToPick",1);
		}
	}
	else if(Which == 3) //Thermal 
	{
		if(CheckWeapon("Intervention") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Intervention",1);
			GiveInventory("Intervention Thermal",1);
			GiveInventory("InterventionThermal",1);
			SetWeapon("Intervention Thermal");

			SetFont("BIGFONT");
			HudMessage(s:"Thermal Scope attached to Intervention!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Barrett 50cal") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Barrett 50cal",1);
			GiveInventory("Barrett 50cal Thermal",1);
			GiveInventory("BarrettThermal",1);
			SetWeapon("Barrett 50cal Thermal");

			SetFont("BIGFONT");
			HudMessage(s:"Thermal Scope attached to Barrett 50cal!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("WA2000") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("WA2000",1);
			GiveInventory("WA2000 Thermal",1);
			GiveInventory("WA2000Thermal",1);
			SetWeapon("WA2000 Thermal");

			SetFont("BIGFONT");
			HudMessage(s:"Thermal Scope attached to WA2000!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M14 EBR") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M14 EBR",1);
			GiveInventory("M14 EBR Thermal",1);
			GiveInventory("M14Thermal",1);
			SetWeapon("M14 EBR Thermal");

			SetFont("BIGFONT");
			HudMessage(s:"Thermal Scope attached to M14 EBR!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else
		{
			SetFont("BIGFONT");
			HudMessage(s:"You can't attach a Thermal Scope on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			GiveInventory("ThermalAttachment",1);
			
			GiveInventory("RewardsToPick",1);
		}
	}
	else if(Which == 4) //Akimbo 
	{
		if(CheckWeapon("USP .45") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("USP .45",1);
			GiveInventory("USP .45 Akimbo",1);
			GiveInventory("USP45Akimbo",1);
			SetWeapon("USP .45 Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to USP .45!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Desert Eagle") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Desert Eagle",1);
			GiveInventory("Desert Eagle Akimbo",1);
			GiveInventory("DeagleAkimbo",1);
			SetWeapon("Desert Eagle Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to Desert Eagle!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon(".44 Magnum") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory(".44 Magnum",1);
			GiveInventory(".44 Magnum Akimbo",1);
			GiveInventory("MagnumAkimbo",1);
			SetWeapon(".44 Magnum Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to .44 Magnum!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("G18") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("G18",1);
			GiveInventory("G18 Akimbo",1);
			GiveInventory("G18Akimbo",1);
			SetWeapon("G18 Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to G18!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("PP2000") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("PP2000",1);
			GiveInventory("PP2000 Akimbo",1);
			GiveInventory("PP2000Akimbo",1);
			SetWeapon("PP2000 Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to PP2000!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M9") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M9",1);
			GiveInventory("M9 Akimbo",1);
			GiveInventory("M9Akimbo",1);
			SetWeapon("M9 Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to M9!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Mini-UZI") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Mini-UZI",1);
			GiveInventory("Mini-UZI Akimbo",1);
			GiveInventory("MiniUziAkimbo",1);
			SetWeapon("Mini-UZI Akimbo");

			SetFont("BIGFONT");
			HudMessage(s:"Akimbo attached to Mini-UZI!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else
		{
			SetFont("BIGFONT");
			HudMessage(s:"You can't attach Akimbo on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			GiveInventory("AkimboAttachment",1);
			
			GiveInventory("RewardsToPick",1);
		}
	}
	else if(Which == 5) //Tac Knife 
	{
		if(CheckWeapon("USP .45") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("USP .45",1);
			GiveInventory("USP .45 Tac Knife",1);
			GiveInventory("USP45Knife",1);
			SetWeapon("USP .45 Tac Knife");

			SetFont("BIGFONT");
			HudMessage(s:"Tactical Knife attached to USP .45!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("Desert Eagle") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("Desert Eagle",1);
			GiveInventory("Desert Eagle Tac Knife",1);
			GiveInventory("DeagleKnife",1);
			SetWeapon("Desert Eagle Tac Knife");

			SetFont("BIGFONT");
			HudMessage(s:"Tactical Knife attached to Desert Eagle!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon(".44 Magnum") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory(".44 Magnum",1);
			GiveInventory(".44 Magnum Tac Knife",1);
			GiveInventory("MagnumKnife",1);
			SetWeapon(".44 Magnum Tac Knife");

			SetFont("BIGFONT");
			HudMessage(s:"Tactical Knife attached to .44 Magnum!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else if(CheckWeapon("M9") == 1)
		{
			ACS_ExecuteAlways(622,0,0,0,0);
			
			TakeInventory("M9",1);
			GiveInventory("M9 Tac Knife",1);
			GiveInventory("M9Knife",1);
			SetWeapon("M9 Tac Knife");

			SetFont("BIGFONT");
			HudMessage(s:"Tactical Knife attached to M9!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
		}
		else
		{
			SetFont("BIGFONT");
			HudMessage(s:"You can't attach a Tactical Knife on that!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.75, 2.0, 1.0);
			GiveInventory("KnifeAttachment",1);
			
			GiveInventory("RewardsToPick",1);
		}
	}
	
	ACS_ExecuteAlways(602,0,0,0,0);
}

//------------------------------------------
//------- Just tells the player that they can't pick up another of this type of weapon.
script 620 (int Which) CLIENTSIDE
{
	SetFont("CONFONT");
	HudMessage(s:"All weapon slots are full!\n\n"; HUDMSG_FADEOUT, 200+PlayerNumber(), CR_Green, 0.5, 0.7, 0.5, 1.0);
	HudMessage(s:"\ccPress \cf", k:"dropcurrent", s:"\cc to drop current weapon"; HUDMSG_FADEOUT, 100+PlayerNumber(), CR_Green, 0.5, 0.75, 0.5, 1.0);
}

//Drops (not destroys) current weapon.
script 621 (void) NET
{
  if(GetActorProperty(0,APROP_Health) <= 0){
    terminate;
  }

	TakeInventory("PowerLightAmp", 1);

	if(CheckWeapon("USP .45") == 1 || CheckWeapon("USP .45 Ex Mags") == 1 || CheckWeapon("USP .45 Akimbo") == 1 || CheckWeapon("USP .45 Tac Knife") == 1)
	{
		TakeInventory("USP .45",1);
		TakeInventory("USP .45 Ex Mags",1);
		TakeInventory("USP .45 Akimbo",1);
		TakeInventory("USP .45 Tac Knife",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("USP45PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon(".44 Magnum") == 1 || CheckWeapon(".44 Magnum Akimbo") == 1 || CheckWeapon(".44 Magnum Tac Knife") == 1)
	{
		TakeInventory(".44 Magnum",1);
		TakeInventory(".44 Magnum Akimbo",1);
		TakeInventory(".44 Magnum Tac Knife",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("44MagnumPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("FAMAS") == 1 || CheckWeapon("FAMAS M203") == 1 || CheckWeapon("FAMAS Ex Mags") == 1)
	{
		TakeInventory("FAMAS",1);
		TakeInventory("FAMAS M203",1);
		TakeInventory("FAMAS Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("FAMASPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("FAL") == 1 || CheckWeapon("FAL Ex Mags") == 1)
	{
		TakeInventory("FAL",1);
		TakeInventory("FAL Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("FALPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("SPAS-12") == 1 || CheckWeapon("SPAS-12 Ex Mags") == 1 || CheckWeapon("SPAS-12 Grip") == 1)
	{
		TakeInventory("SPAS-12",1);
		TakeInventory("SPAS-12 Ex Mags",1);
		TakeInventory("SPAS-12 Grip",1);
		TakeInventory("MaxWeaponsFilled_Shotgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("SPASPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("AA-12") == 1 || CheckWeapon("AA-12 Ex Mags") == 1 || CheckWeapon("AA-12 Grip") == 1)
	{
		TakeInventory("AA-12",1);
		TakeInventory("AA-12 Ex Mags",1);
		TakeInventory("AA-12 Grip",1);
		TakeInventory("MaxWeaponsFilled_Shotgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("AA12PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("UMP45") == 1 || CheckWeapon("UMP45 Ex Mags") == 1 || CheckWeapon("UMP45 Rapid Fire") == 1)
	{
		TakeInventory("UMP45",1);
		TakeInventory("UMP45 Ex Mags",1);
		TakeInventory("UMP45 Rapid Fire",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("UMP45PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("TDI Vector") == 1 || CheckWeapon("TDI Vector Ex Mags") == 1)
	{
		TakeInventory("TDI Vector",1);
		TakeInventory("TDI Vector Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("VectorPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Mini-UZI") == 1 || CheckWeapon("Mini-UZI Ex Mags") == 1 || CheckWeapon("Mini-UZI Akimbo") == 1)
	{
		TakeInventory("Mini-UZI",1);
		TakeInventory("Mini-UZI Akimbo",1);
		TakeInventory("Mini-UZI Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("MiniUziPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("FN P90") == 1 || CheckWeapon("FN P90 Ex Mags") == 1 || CheckWeapon("FN P90 Rapid Fire") == 1)
	{
		TakeInventory("FN P90",1);
		TakeInventory("FN P90 Ex Mags",1);
		TakeInventory("FN P90 Rapid Fire",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("P90PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Thumper") == 1)
	{
		TakeInventory("Thumper",1);
		TakeInventory("MaxWeaponsFilled_Explosive",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("ThumperPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("ACR") == 1 || CheckWeapon("ACR Ex Mags") == 1)
	{
		TakeInventory("ACR",1);
		TakeInventory("ACR Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("ACRPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("AT4-HS") == 1)
	{
		TakeInventory("AT4-HS",1);
		TakeInventory("MaxWeaponsFilled_Explosive",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("AT4PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Intervention") == 1 || CheckWeapon("Intervention Thermal") == 1 || CheckWeapon("Intervention Ex Mags") == 1)
	{
		TakeInventory("Intervention Thermal",1);
		TakeInventory("Intervention Ex Mags",1);
		TakeInventory("Intervention",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("InterventionPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Barrett 50cal") == 1 || CheckWeapon("Barrett 50cal Thermal") == 1 || CheckWeapon("Barrett 50cal Ex Mags") == 1)
	{
		TakeInventory("Barrett 50cal Thermal",1);
		TakeInventory("Barrett 50cal Ex Mags",1);
		TakeInventory("Barrett 50cal",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("BarrettPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("MG4") == 1 || CheckWeapon("MG4 Ex Mags") == 1 || CheckWeapon("MG4 Grip") == 1)
	{
		TakeInventory("MG4",1);
		TakeInventory("MG4 Ex Mags",1);
		TakeInventory("MG4 Grip",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("MG4PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("G18") == 1 || CheckWeapon("G18 Ex Mags") == 1 || CheckWeapon("G18 Akimbo") == 1)
	{
		TakeInventory("G18",1);
		TakeInventory("G18 Ex Mags",1);
		TakeInventory("G18 Akimbo",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("G18PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("PP2000") == 1 || CheckWeapon("PP2000 Ex Mags") == 1 || CheckWeapon("PP2000 Akimbo") == 1)
	{
		TakeInventory("PP2000",1);
		TakeInventory("PP2000 Ex Mags",1);
		TakeInventory("PP2000 Akimbo",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("PP2000PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("SCAR-H") == 1 || CheckWeapon("SCAR-H Ex Mags") == 1)
	{
		TakeInventory("SCAR-H",1);
		TakeInventory("SCAR-H Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("SCARHPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M4A1") == 1 || CheckWeapon("M4A1 Ex Mags") == 1)
	{
		TakeInventory("M4A1",1);
		TakeInventory("M4A1 Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M4A1PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Ranger") == 1)
	{
		TakeInventory("Ranger",1);
		TakeInventory("MaxWeaponsFilled_Shotgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("RangerPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("F2000") == 1 || CheckWeapon("F2000 Ex Mags") == 1)
	{
		TakeInventory("F2000",1);
		TakeInventory("F2000 Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("F2000PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("MP5K") == 1 || CheckWeapon("MP5K Ex Mags") == 1 || CheckWeapon("MP5K Rapid Fire") == 1)
	{
		TakeInventory("MP5K",1);
		TakeInventory("MP5K Ex Mags",1);
		TakeInventory("MP5K Rapid Fire",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("MP5PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M93 Raffica") == 1 || CheckWeapon("M93 Raffica Ex Mags") == 1)
	{
		TakeInventory("M93 Raffica",1);
		TakeInventory("M93 Raffica Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M93RPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M16A4") == 1 || CheckWeapon("M16A4 Ex Mags") == 1)
	{
		TakeInventory("M16A4",1);
		TakeInventory("M16A4 Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M16PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("AK-47") == 1 || CheckWeapon("AK-47 Ex Mags") == 1)
	{
		TakeInventory("AK-47",1);
		TakeInventory("AK-47 Ex Mags",1);
		TakeInventory("MaxWeaponsFilled_ARSMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("AK47PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Striker") == 1 || CheckWeapon("Striker Ex Mags") == 1 || CheckWeapon("Striker Grip") == 1)
	{
		TakeInventory("Striker",1);
		TakeInventory("Striker Ex Mags",1);
		TakeInventory("Striker Grip",1);
		TakeInventory("MaxWeaponsFilled_Shotgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("StrikerPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("AUG HBAR") == 1 || CheckWeapon("AUG HBAR Ex Mags") == 1 || CheckWeapon("AUG HBAR Grip") == 1)
	{
		TakeInventory("AUG HBAR",1);
		TakeInventory("AUG HBAR Ex Mags",1);
		TakeInventory("AUG HBAR Grip",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("AUGHBARPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("WA2000") == 1 || CheckWeapon("WA2000 Thermal") == 1 || CheckWeapon("WA2000 Ex Mags") == 1)
	{
		TakeInventory("WA2000 Thermal",1);
		TakeInventory("WA2000 Ex Mags",1);
		TakeInventory("WA2000",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("WA2000PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Desert Eagle") == 1 || CheckWeapon("Deagle Special") == 1 || CheckWeapon("Desert Eagle Akimbo") == 1 || CheckWeapon("Desert Eagle Tac Knife") == 1)
	{
		TakeInventory("Desert Eagle",1);
		TakeInventory("Desert Eagle Akimbo",1);
		TakeInventory("Desert Eagle Tac Knife",1);
		TakeInventory("Deagle Special",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("DeaglePickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M9") == 1 || CheckWeapon("M9 Ex Mags") == 1 || CheckWeapon("M9 Tac Knife") == 1 || CheckWeapon("M9 Akimbo") == 1)
	{
		TakeInventory("M9",1);
		TakeInventory("M9 Ex Mags",1);
		TakeInventory("M9 Akimbo",1);
		TakeInventory("M9 Tac Knife",1);
		TakeInventory("MaxWeaponsFilled_Handgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M9PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M1014") == 1 || CheckWeapon("M1014 Ex Mags") == 1 || CheckWeapon("M1014 Grip") == 1)
	{
		TakeInventory("M1014",1);
		TakeInventory("M1014 Ex Mags",1);
		TakeInventory("M1014 Grip",1);
		TakeInventory("MaxWeaponsFilled_Shotgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M1014PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M240") == 1 || CheckWeapon("M240 Ex Mags") == 1 || CheckWeapon("M240 Grip") == 1)
	{
		TakeInventory("M240",1);
		TakeInventory("M240 Ex Mags",1);
		TakeInventory("M240 Grip",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M240PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("L86") == 1 || CheckWeapon("L86 Ex Mags") == 1 || CheckWeapon("L86 Grip") == 1)
	{
		TakeInventory("L86",1);
		TakeInventory("L86 Ex Mags",1);
		TakeInventory("L86 Grip",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("L86PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("RPG-7") == 1)
	{
		TakeInventory("RPG-7",1);
		TakeInventory("MaxWeaponsFilled_Explosive",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("RPGPickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("Model 1887") == 1)
	{
		TakeInventory("Model 1887",1);
		TakeInventory("MaxWeaponsFilled_Shotgun",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M1887PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
	else if(CheckWeapon("M14 EBR") == 1 || CheckWeapon("M14 EBR Thermal") == 1 || CheckWeapon("M14 EBR Ex Mags") == 1)
	{
		TakeInventory("M14 EBR Thermal",1);
		TakeInventory("M14 EBR Ex Mags",1);
		TakeInventory("M14 EBR",1);
		TakeInventory("MaxWeaponsFilled_LMG",1);
		TakeInventory("MaxWeaponsFilled",1);
		SpawnSpotFacing("M14PickupSpawn",PlayerNumber()+MINIMUM_TID - MAX_PLAYER_COUNT,0);
	}
}

//------------------------------------------
//------- Is triggered when selecting an attachment or perk.
//Removes awarded items, just makes it easier instead of C&P the same thing all the time.
script 622 (void)
{
	TakeInventory("GripAttachment",1);
	TakeInventory("RapidFireAttachment",1);
	TakeInventory("ExtendedMagsAttachment",1);
	TakeInventory("ThermalAttachment",1);
	TakeInventory("AkimboAttachment",1);
	TakeInventory("KnifeAttachment",1);
	
  TakeInventory("Perk1_SOHAward",1);
	TakeInventory("Perk1_SOH_ProAward",1);
	
  TakeInventory("Perk1_ExtremeConditioningAward",1);
	TakeInventory("Perk1_ExtremeConditioning_ProAward",1);
	
  TakeInventory("Perk1_OMAAward",1);
	TakeInventory("Perk1_OMA_ProAward",1);
	
	TakeInventory("Perk1_ScavengerAward",1);
  TakeInventory("Perk1_Scavenger_ProAward",1);
	
  TakeInventory("Perk2_StoppingPowerAward",1);
	TakeInventory("Perk2_StoppingPower_ProAward",1);
	
	TakeInventory("Perk2_DangerCloseAward",1);
	TakeInventory("Perk2_DangerClose_ProAward",1);
	
	TakeInventory("Perk2_ColdBloodedAward",1);
	TakeInventory("Perk2_ColdBlooded_ProAward",1);
	
	TakeInventory("Perk2_JuggernautAward",1);
	TakeInventory("Perk2_Juggernaut_ProAward",1);
	
	TakeInventory("Perk3_SteadyAimAward",1);
	TakeInventory("Perk3_SteadyAim_ProAward",1);
	
	TakeInventory("Perk3_CommandoAward",1);
	TakeInventory("Perk3_Commando_ProAward",1);
	
	TakeInventory("Perk3_LastStandAward",1);
	TakeInventory("Perk3_LastStand_ProAward",1);
	
	TakeInventory("Perk3_SitRepAward",1);
	TakeInventory("Perk3_SitRep_ProAward",1);
	
	TakeInventory("Combo",25);
	LocalAmbientSound("game/challenge",90);		
	
	//if(CheckInventory("RewardsToPick") > 0){
	//	ACS_ExecuteAlways(623,0,0,0,0); // Fill the rewards menu once more
	//}
}

//------------------------------------------
//------- Is triggered by rank up script.
//Gives awarded items
script 623 (void)
{
	GiveInventory("GripAttachment",1);
	GiveInventory("RapidFireAttachment",1);
	GiveInventory("ExtendedMagsAttachment",1);
	GiveInventory("ThermalAttachment",1);
	GiveInventory("AkimboAttachment",1);
	GiveInventory("KnifeAttachment",1);	
		
	// Yellow perks
  if(
    CheckInventory("Perk3_SteadyAim") == 0 &&
    CheckInventory("Perk3_Commando") == 0 &&
    CheckInventory("Perk3_LastStand") == 0 &&
    CheckInventory("Perk3_SitRep") == 0
  ){
  		GiveInventory("Perk3_SitRepAward",1);
		GiveInventory("Perk3_LastStandAward",1);
    	GiveInventory("Perk3_CommandoAward",1);
		GiveInventory("Perk3_SteadyAimAward",1);
	}
	
  // Yellow perks PRO	
	if(CheckInventory("Perk3_SteadyAim") == 1 && CheckInventory("Perk3_SteadyAim_Pro") == 0)
		GiveInventory("Perk3_SteadyAim_ProAward",1);
	
	if(CheckInventory("Perk3_Commando") == 1 && CheckInventory("Perk3_Commando_Pro") == 0)
		GiveInventory("Perk3_Commando_ProAward",1);
	
	if(CheckInventory("Perk3_LastStand") == 1 && CheckInventory("Perk3_LastStand_Pro") == 0)
		GiveInventory("Perk3_LastStand_ProAward",1);
		
	if(CheckInventory("Perk3_SitRep") == 1 && CheckInventory("Perk3_SitRep_Pro") == 0)
		GiveInventory("Perk3_SitRep_ProAward",1);
	
	// Red perks	
	if(
    CheckInventory("Perk2_StoppingPower") == 0 &&
    CheckInventory("Perk2_DangerClose") == 0 &&
    CheckInventory("Perk2_Juggernaut") == 0 &&
    CheckInventory("Perk2_ColdBlooded") == 0
  ) {
		GiveInventory("Perk2_ColdBloodedAward",1);
		GiveInventory("Perk2_DangerCloseAward",1);
		GiveInventory("Perk2_JuggernautAward",1);
		GiveInventory("Perk2_StoppingPowerAward",1);
		
	}
	
	// Red perks PRO
	if(CheckInventory("Perk2_StoppingPower") == 1 && CheckInventory("Perk2_StoppingPower_Pro") == 0)
		GiveInventory("Perk2_StoppingPower_ProAward",1);
	
	if(CheckInventory("Perk2_Juggernaut") == 1 && CheckInventory("Perk2_Juggernaut_Pro") == 0)
		GiveInventory("Perk2_Juggernaut_ProAward",1);
		
	if(CheckInventory("Perk2_DangerClose") == 1 && CheckInventory("Perk2_DangerClose_Pro") == 0)
		GiveInventory("Perk2_DangerClose_ProAward",1);
	
	if(CheckInventory("Perk2_ColdBlooded") == 1 && CheckInventory("Perk2_ColdBlooded_Pro") == 0)
		GiveInventory("Perk2_ColdBlooded_ProAward",1);
		
	// Blue perks
	if(
    CheckInventory("Perk1_SOH") == 0 && 
    CheckInventory("Perk1_ExtremeConditioning") == 0 &&
    CheckInventory("Perk1_OneManArmy") == 0 &&
    CheckInventory("Perk1_Scavenger") == 0
  ){
		GiveInventory("Perk1_SOHAward",1);
		GiveInventory("Perk1_ExtremeConditioningAward",1);
		GiveInventory("Perk1_OMAAward",1);
		GiveInventory("Perk1_ScavengerAward",1);
	}
	
  // Blue perks PRO	
	if(CheckInventory("Perk1_SOH") == 1 && CheckInventory("Perk1_SOH_Pro") == 0)
		GiveInventory("Perk1_SOH_ProAward",1);
		
	if(CheckInventory("Perk1_ExtremeConditioning") == 1 && CheckInventory("Perk1_ExtremeConditioning_Pro") == 0)
		GiveInventory("Perk1_ExtremeConditioning_ProAward",1);
		
	if(CheckInventory("Perk1_OneManArmy") == 1 && CheckInventory("Perk1_OneManArmy_Pro") == 0)
		GiveInventory("Perk1_OMA_ProAward",1);
		
	if(CheckInventory("Perk1_Scavenger") == 1 && CheckInventory("Perk1_Scavenger_Pro") == 0)
		GiveInventory("Perk1_Scavenger_ProAward",1);
}

//------------------------------------------
//------- Select and give perk and it's abilities.
//Apply a Perk
script 624 (int Which)
{
	if(CheckInventory("RewardsToPick") == 0){
		terminate;
	}
	
	TakeInventory("RewardsToPick",1);

	if(Which == 0) // SLEIGHT OF HAND
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_SOH",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cvSLEIGHT OF HAND"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Faster reloading!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 1) // EXTREME CONDITIONING
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_ExtremeConditioning",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cvEXTREME CONDITIONING"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+15% movement speed!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 2) // ONE MAN ARMY
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_OneManArmy",1);
		//GiveInventory("Backpack",5);
		SetFont("BIGFONT");
		HudMessage(s:"\cvONE MAN ARMY"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Carry extra ammo!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
		ACS_ExecuteAlways(629,0,0,0,0); // set ammo capacities
	}
	if(Which == 3) // STOPPING POWER
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_StoppingPower",1);
		GiveInventory("Perk2_StoppingPowerEffect",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgSTOPPING POWER"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+25% bullet damage!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 4) // DANGER CLOSE
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_DangerClose",1);
		GiveInventory("Perk2_DangerCloseEffect",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgDANGER CLOSE"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+100% explosive damage!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 5) // JUGGERNAUT
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_Juggernaut",1);
		GiveInventory("Perk2_JuggernautEffect",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgJUGGERNAUT"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"40% damage resistance!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 6) // STEADY AIM
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_SteadyAim",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cdSTEADY AIM"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+33% hip-fire accuracy!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 7) // COMMANDO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_Commando",1);
		GiveInventory("Perk3_CommandoEffect",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cdCOMMANDO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+100% melee damage and range!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 8) // LAST STAND
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_LastStand",1);
		GiveInventory("LastStandUrn",10000);
		SetFont("BIGFONT");
		HudMessage(s:"\cdLAST STAND"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Pull out your handgun before dying!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 9) // SLEIGHT OF HAND PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_SOH_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cvSLEIGHT OF HAND PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Faster grenade throwing and knife recovery!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 10) // EXTREME CONDITIONING PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_ExtremeConditioning_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cvEXTREME CONDITIONING PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Regenerate 100% faster and 40% sooner!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
		ACS_ExecuteAlways(501,0,0,0,0);
	}
	if(Which == 11) // ONE MAN ARMY PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_OneManArmy_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cvONE MAN ARMY PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Carry extra weapon!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
		ACS_ExecuteAlways(501,0,0,0,0);
	}
	if(Which == 12) // STOPPING POWER PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_StoppingPower_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgSTOPPING POWER PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Sniper bullets penetrate enemies!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 13) // DANGER CLOSE PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_DangerClose_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgDANGER CLOSE PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+40% explosive blast radius!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 14) // JUGGERNAUT PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_Juggernaut_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgJUGGERNAUT PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+100% health and armor from pickups!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 15) // STEADY AIM PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_SteadyAim_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cdSTEADY AIM PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"No sniper accuracy penalty while moving!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 17) // COMMANDO PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_Commando_Pro",1);		
		SetFont("BIGFONT");
		HudMessage(s:"\cdCOMMANDO PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Attacking doesn't block regeneration!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 16) // LAST STAND PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_LastStand_Pro",1);		
		SetFont("BIGFONT");
		HudMessage(s:"\cdLAST STAND PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Get 30 health in last stand!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 18) // COLD BLOODED PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_ColdBlooded_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgCOLD BLOODED PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Partial invisibility while out of combat!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 20) // SCAVENGER PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_Scavenger_Pro",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgSCAVENGER PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+100% powerup duration!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	
	if(Which == 21) // SCAVENGER
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk1_Scavenger",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgSCAVENGER"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"+100% ammo in pickups!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 22) // COLD BLOODED
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk2_ColdBlooded",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cgCOLD BLOODED"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Invisibility to seeker missiles!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 23) // SITREP
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_SitRep",1);
		GiveInventory("Perk3_SitRepItem",1);
		GiveInventory("Perk3_SitRepEffect",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cdSIT-REP"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"Full automap with monsters' positions!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	if(Which == 24) // SITREP PRO
	{
		ACS_ExecuteAlways(622,0,0,0,0); //Remove other options
		GiveInventory("Perk3_SitRep_PRO",1);
		SetFont("BIGFONT");
		HudMessage(s:"\cdSIT-REP PRO"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		HudMessage(s:"See enemies through walls!"; HUDMSG_TYPEON, 2250+PlayerNumber(), CR_Green, 0.5, 0.66, 2.0, 0.07, 1.0);
	}
	
}
//------------------------------------------
//------- Last stand, for handling the last stand perk.
//Last stand
script 625 (void)
{
	int Survival = random(1,6);

	Survival = 6;	

	LocalAmbientSound("game/laststand",254);
	LocalAmbientSound("game/laststand",254);
	SetFont("BIGFONT");
	HudMessage(s:"\cdLAST STAND"; HUDMSG_FADEOUT, 150+PlayerNumber(), CR_Green, 0.5, 0.3, 2.0, 1.0);
	TakeInventory("Aiming", 1);
	ACS_ExecuteAlways(630,0,0,0,0);	
	delay(1);
	SetActorProperty(0,APROP_Invulnerable,1);
	delay(10);
	ACS_ExecuteAlways(500,0,0,0,0); // reset TID and and death special
	SetActorProperty(0,APROP_Invulnerable,0);
	delay(35*2);
	ACS_ExecuteAlways(633,0,0,0,0);	
	delay(35*4);
	ACS_ExecuteAlways(633,0,0,0,0);
	delay(35*4);
	/*if(GetActorProperty(0,APROP_Health) < 31 && GameType() == GAME_NET_DEATHMATCH && GetActorProperty(0,APROP_Health) > 0)
		Thing_Damage(0,75,18); //Bleed out
	else */if(GetActorProperty(0,APROP_Health) < 31 && Survival == 6 && GetActorProperty(0,APROP_Health) > 0)  //Survival rate: 1 in 6
	{
		TakeInventory("Aiming", 1);
		ACS_ExecuteAlways(631,0,0,0,0);  // unmorph from last stand
		ACS_ExecuteAlways(500,0,0,0,0); // reset TID and and death special
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou survived!"; HUDMSG_FADEOUT, 150+PlayerNumber(), CR_Green, 0.5, 0.3, 2.0, 1.0);
		LocalAmbientSound("game/challenge",90);
		Delay(1);
		SetActorProperty(0,APROP_Health,100);		
	}
}

//------------------------------------------
//------- Change player's voice
script 626 (void) NET
{
	if(CheckInventory("Voice") == 0)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to Russian [Spetsnaz]"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		GiveInventory("Voice",1);
	}
	else if(CheckInventory("Voice") == 1)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to Brazilian [Militia]"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		GiveInventory("Voice",1);
	}
	else if(CheckInventory("Voice") == 2)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to Arabic [OpFor]"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		GiveInventory("Voice",1);
	}
	else if(CheckInventory("Voice") == 3)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to American [Navy Seals]"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		GiveInventory("Voice",1);
	}
	else if(CheckInventory("Voice") == 4)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to British English [TF141]"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		GiveInventory("Voice",1);
	}
	else if(CheckInventory("Voice") == 5)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to NONE"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		GiveInventory("Voice",1);
	}
	else if(CheckInventory("Voice") == 6)
	{
		SetFont("BIGFONT");
		HudMessage(s:"\cdVoice changed to American [US Rangers]"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.59, 2.0, 1.0);
		TakeInventory("Voice",10);
	}
	
	
	CurrentVoice[PlayerNumber()] = CheckInventory("Voice");
}


//------------------------------------------
//------- I think this is for Cyberdemon/Spider, they give XP when put in the pain state.
script 627 (int Amount)
{
	if (!(ClassifyActor(0) & ACTOR_MONSTER)){
    int realAmount = Amount;
	 
	  if(GetCVAR("rgh_xprate") > 0){
      realAmount = realAmount * GetCVAR("rgh_xprate");
    }
    else if(GetCVAR("rgh_xprate") < 0){
      realAmount = realAmount / GetCVAR("rgh_xprate");
    }
	
		GiveInventory("Experience",realAmount);
		ACS_ExecuteAlways(616,0,0,0,0);
	}
}

//Remove TacticalInsertion
script 628 (void)
{
	if(TacticalInsertion[PlayerNumber()+1] == True)
	{
		Thing_Remove(PlayerNumber()+600);
		TacticalInsertion[PlayerNumber()+1] = False;
		SetFont("BIGFONT");
		HudMessage(s:"\cfTactical Insertion Removed";HUDMSG_FADEOUT,0,CR_Blue,0.5,0.6,3.0,2.0);
	}
}

//Set max ammo
script 629 (void)
{
	SetAmmoCapacity("FamasAmmo",300);
	SetAmmoCapacity("FALAmmo",200);
	SetAmmoCapacity("ACRAmmo",300);
	SetAmmoCapacity("P90Ammo",500);
	SetAmmoCapacity("UMP45Ammo",320);
	SetAmmoCapacity("MiniUziAmmo",320);
	SetAmmoCapacity("VectorAmmo",300);
	SetAmmoCapacity("InterventionAmmo",50);
	SetAmmoCapacity("BarrettAmmo",80);
	SetAmmoCapacity("M14Ammo",80);
	SetAmmoCapacity("USP45Ammo",120);
	SetAmmoCapacity("44MagnumAmmo",60);
	SetAmmoCapacity("SPAS12Ammo",56);
	SetAmmoCapacity("AA12Ammo",80);
	SetAmmoCapacity("RangerAmmo",60);
	SetAmmoCapacity("MG4Ammo",600);
	SetAmmoCapacity("G18Ammo",231);
	SetAmmoCapacity("PP2000Ammo",140);
	SetAmmoCapacity("M93RAmmo",140);
	SetAmmoCapacity("SCARHAmmo",200);
	SetAmmoCapacity("M4A1Ammo",300);
	SetAmmoCapacity("F2000Ammo",300);
	SetAmmoCapacity("MP5Ammo",300);
	SetAmmoCapacity("M16Ammo",300);
	SetAmmoCapacity("AK47Ammo",300);
	SetAmmoCapacity("M203Ammo",8);
	SetAmmoCapacity("ThumperAmmo",8);
	SetAmmoCapacity("AT4Ammo",3);
	SetAmmoCapacity("StrikerAmmo",80);
	SetAmmoCapacity("AUGHBARAmmo",420);
	SetAmmoCapacity("WA2000Ammo",60);
	SetAmmoCapacity("DeagleAmmo",70);
	SetAmmoCapacity("M9Ammo",150);
	SetAmmoCapacity("M1014Ammo",60);
	SetAmmoCapacity("M240Ammo",600);
	SetAmmoCapacity("L86Ammo",600);
	SetAmmoCapacity("RPGAmmo",6);
	SetAmmoCapacity("M1887Ammo",56);
}

//------------------------------------------
//------- Since we have tons of different handguns, every one needs it's own last stand morph class.
script 630 (void)
{
	if(CheckInventory("USP .45") == 1)
	{
		//GiveInventory("USP45Ammo",12);
		//GiveInventory("USP45Clip2",18);
		MorphActor(0,"RGULastStandPlayer_USP","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("USP .45 Ex Mags") == 1)
	{
		//GiveInventory("USP45Ammo",12);
		//GiveInventory("USP45Clip2",18);
		MorphActor(0,"RGULastStandPlayer_USPEx","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("USP .45 Akimbo") == 1)
	{
		//GiveInventory("USP45Ammo",24);
		//GiveInventory("USP45Clip3",24);
		MorphActor(0,"RGULastStandPlayer_USPAkimbo","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("USP .45 Tac Knife") == 1)
	{
		//GiveInventory("USP45Ammo",12);
		//GiveInventory("USP45Clip",12);
		MorphActor(0,"RGULastStandPlayer_USPKnife","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory(".44 Magnum Akimbo") == 1)
	{
		//GiveInventory("44MagnumAmmo",6);
		//GiveInventory("44MagnumClip",12);
		MorphActor(0,"RGULastStandPlayer_44MagnumAkimbo","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory(".44 Magnum") == 1)
	{
		//GiveInventory("44MagnumAmmo",6);
		//GiveInventory("44MagnumClip",6);
		MorphActor(0,"RGULastStandPlayer_44Magnum","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory(".44 Magnum Tac Knife") == 1)
	{
		//GiveInventory("44MagnumAmmo",6);
		//GiveInventory("44MagnumClip",6);
		MorphActor(0,"RGULastStandPlayer_44MagnumKnife","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("M9") == 1)
	{
		//GiveInventory("M9Ammo",15);
		//GiveInventory("M9Clip",15);
		MorphActor(0,"RGULastStandPlayer_M9","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("M9 Ex Mags") == 1)
	{
		//GiveInventory("M9Ammo",15);
		//GiveInventory("M9Clip2",25);
		MorphActor(0,"RGULastStandPlayer_M9Ex","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("M9 Tac Knife") == 1)
	{
		//GiveInventory("M9Ammo",15);
		//GiveInventory("M9Clip",25);
		MorphActor(0,"RGULastStandPlayer_M9Knife","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("M9 Akimbo") == 1)
	{
		//GiveInventory("M9Ammo",15);
		//GiveInventory("M9Clip3",30);
		MorphActor(0,"RGULastStandPlayer_M9Akimbo","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("Desert Eagle Akimbo") == 1)
	{
		//GiveInventory("DeagleAmmo",7);
		//GiveInventory("DeagleClip2",14);
		MorphActor(0,"RGULastStandPlayer_DeagleAkimbo","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("Desert Eagle") == 1)
	{
		//GiveInventory("DeagleAmmo",7);
		//GiveInventory("DeagleClip",7);
		MorphActor(0,"RGULastStandPlayer_Deagle","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("Deagle Special") == 1)
	{
		//GiveInventory("DeagleAmmo",7);
		//GiveInventory("DeagleClip2",14);
		MorphActor(0,"RGULastStandPlayer_DeagleEx","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("Desert Eagle Tac Knife") == 1)
	{
		//GiveInventory("DeagleAmmo",7);
		//GiveInventory("DeagleClip2",14);
		MorphActor(0,"RGULastStandPlayer_DeagleKnife","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("G18 Akimbo") == 1)
	{
		//GiveInventory("G18Ammo",33);
		//GiveInventory("G18Clip3",66);
		MorphActor(0,"RGULastStandPlayer_G18Akimbo","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("G18") == 1)
	{
		//GiveInventory("G18Ammo",33);
		//GiveInventory("G18Clip",33);
		MorphActor(0,"RGULastStandPlayer_G18","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("G18 Ex Mags") == 1)
	{
		//GiveInventory("G18Ammo",33);
		//GiveInventory("G18Clip2",50);
		MorphActor(0,"RGULastStandPlayer_G18Ex","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("PP2000 Akimbo") == 1)
	{
		//GiveInventory("PP2000Ammo",20);
		//GiveInventory("PP2200Clip",30);
		MorphActor(0,"RGULastStandPlayer_PP2000Ak","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("PP2000") == 1)
	{
		//GiveInventory("PP2000Ammo",20);
		//GiveInventory("PP2000Clip",20);
		MorphActor(0,"RGULastStandPlayer_PP2000","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("PP2000 Ex Mags") == 1)
	{
		//GiveInventory("PP2000Ammo",20);
		//GiveInventory("PP2000Clip2",30);
		MorphActor(0,"RGULastStandPlayer_PP2000Ex","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("M93 Raffica") == 1)
	{
		//GiveInventory("M93RAmmo",20);
		//GiveInventory("M93RClip",20);
		MorphActor(0,"RGULastStandPlayer_M93R","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else if(CheckInventory("M93 Raffica Ex Mags") == 1)
	{
		//GiveInventory("M93RAmmo",20);
		//GiveInventory("M93RClip2",30);
		MorphActor(0,"RGULastStandPlayer_M93REx","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	else
	{
		GiveInventory("USP45Ammo",12);
		GiveInventory("USP45Clip",12);
		MorphActor(0,"RGULastStandPlayer_Unspecified","",99999,MRF_NEWTIDBEHAVIOUR | MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash");
	}
	
	If(CheckInventory("Perk3_LastStand_Pro") == 1){
		//GiveInventory("Health",30);
	}
	else {
		// set health to 1
		//DamageThing(GetActorProperty(0,APROP_Health) - 1, "LastStandModifier");
		SetActorProperty(0, APROP_Health, 1);
	}
	
	GiveInventory("InLastStand",1);
}

//------------------------------------------
//------- Unmorph actor and give back the handgun they lose while in Last stand.
script 631 ENTER
{
	delay(5);
	if(CheckInventory("Menu") == 1 || CheckInventory("RandomThing") == 1)
		terminate;
	if(CheckInventory("USP .45") == 1)
	{
		UnMorphActor(0);
		GiveInventory("USP .45",1);
	}
	if(CheckInventory("USP .45 Ex Mags") == 1)
	{
		UnMorphActor(0);
		GiveInventory("USP .45 Ex Mags",1);
	}
	else if(CheckInventory("USP .45 Akimbo") == 1)
	{
		UnMorphActor(0);
		GiveInventory("USP .45 Akimbo",1);
	}
	else if(CheckInventory("USP .45 Tac Knife") == 1)
	{
		UnMorphActor(0);
		GiveInventory("USP .45 Tac Knife",1);
	}
	else if(CheckInventory(".44 Magnum") == 1)
	{
		UnMorphActor(0);
		GiveInventory(".44 Magnum",1);
	}
	else if(CheckInventory(".44 Magnum Akimbo") == 1)
	{
		UnMorphActor(0);
		GiveInventory(".44 Magnum Akimbo",1);
	}
	else if(CheckInventory(".44 Magnum Tac Knife") == 1)
	{
		UnMorphActor(0);
		GiveInventory(".44 Magnum Tac Knife",1);
	}
	else if(CheckInventory("M9") == 1)
	{
		UnMorphActor(0);
		GiveInventory("M9",1);
	}
	else if(CheckInventory("M9 Akimbo") == 1)
	{
		UnMorphActor(0);
		GiveInventory("M9 Akimbo",1);
	}
	else if(CheckInventory("M9 Tac Knife") == 1)
	{
		UnMorphActor(0);
		GiveInventory("M9 Tac Knife",1);
	}
	else if(CheckInventory("M9 Ex Mags") == 1)
	{
		UnMorphActor(0);
		GiveInventory("M9 Ex Mags",1);
	}
	else if(CheckInventory("Desert Eagle") == 1)
	{
		UnMorphActor(0);
		GiveInventory("Desert Eagle",1);
	}
	else if(CheckInventory("Deagle Special") == 1)
	{
		UnMorphActor(0);
		GiveInventory("Deagle Special",1);
	}
	else if(CheckInventory("Desert Eagle Akimbo") == 1)
	{
		UnMorphActor(0);
		GiveInventory("Desert Eagle Akimbo",1);
	}
	else if(CheckInventory("Desert Eagle Tac Knife") == 1)
	{
		UnMorphActor(0);
		GiveInventory("Desert Eagle Tac Knife",1);
	}
	else if(CheckInventory("G18") == 1)
	{
		UnMorphActor(0);
		GiveInventory("G18",1);
	}
	else if(CheckInventory("G18 Ex Mags") == 1)
	{
		UnMorphActor(0);
		GiveInventory("G18 Ex Mags",1);
	}
	else if(CheckInventory("G18 Akimbo") == 1)
	{
		UnMorphActor(0);
		GiveInventory("G18 Akimbo",1);
	}
	else if(CheckInventory("PP2000") == 1)
	{
		UnMorphActor(0);
		GiveInventory("PP2000",1);
	}
	else if(CheckInventory("PP2000 Ex Mags") == 1)
	{
		UnMorphActor(0);
		GiveInventory("PP2000 Ex Mags",1);
	}
	else if(CheckInventory("PP2000 Akimbo") == 1)
	{
		UnMorphActor(0);
		GiveInventory("PP2000 Akimbo",1);
	}
	else if(CheckInventory("M93 Raffica") == 1)
	{
		UnMorphActor(0);
		GiveInventory("M93 Raffica",1);
	}
	else if(CheckInventory("M93 Raffica Ex Mags") == 1)
	{
		UnMorphActor(0);
		GiveInventory("M93 Raffica Ex Mags",1);
	}
	else //Just give a USP if none of the above are found.
	{
		UnMorphActor(0);
		TakeInventory("USP .45 LastStand", 1);
	}
	TakeInventory("InLastStand", 1);
	
	if(CheckInventory("Perk3_LastStand") == 1)
		GiveInventory("LastStandUrn",10000);
		
	SetActorState (0, "SpawnUnInvis");
}

//------------------------------------------
//------- Revival kit
script 632 (void)
{
	int Survival = random(1,6);

	SetFont("BIGFONT");
	HudMessage(s:"\cdYou're being revived!"; HUDMSG_FADEOUT, 150+PlayerNumber(), CR_Green, 0.5, 0.3, 2.0, 1.0);
	delay(35*3);
	if(GetActorProperty(0,APROP_Health) < 26 && Survival == 6 && GetActorProperty(0,APROP_Health) > 0) //Bleed out, it's a 1 in 6 chance that you won't survive a revival
		Thing_Damage(0,75,20); 
	else if(GetActorProperty(0,APROP_Health) < 26 && Survival != 6 && GetActorProperty(0,APROP_Health) > 0)
	{
		ACS_ExecuteAlways(631,0,0,0,0);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou've been revived!"; HUDMSG_FADEOUT, 150+PlayerNumber(), CR_Green, 0.5, 0.3, 2.0, 1.0);
		LocalAmbientSound("game/challenge",90);
		Delay(1);
		SetActorProperty(0,APROP_Health,100);
	}
}

//------------------------------------------
//------- Call out "I'm down!" when in last stand.
script 633 (void)
{
	if(GetActorProperty(0,APROP_Health) < 26 && GetActorProperty(0,APROP_Health) > 0)
	{
#ifdef SKULLTAG
		bool isRed = PlayerTeam() == TEAM_RED;		
		bool isBlue = PlayerTeam() == TEAM_BLUE;
		bool isThree = PlayerTeam() == 2;
		bool isFour = PlayerTeam() == 3;
#else
		bool isRed = false;
		bool isBlue = false;
		bool isThree = false;
		bool isFour = false;
#endif
		bool noTeam = (!(isRed || isBlue || isThree || isFour) || COOPERATIVE);

		if((!noTeam && isRed) || (noTeam && CheckInventory("Voice") == 1))
			ActivatorSound("russian/down",127);
		else if((!noTeam && isBlue) || (noTeam && CheckInventory("Voice") == 0))
			ActivatorSound("us/down",127);	
		else if((!noTeam && isThree) || (noTeam && CheckInventory("Voice") == 2))
			ActivatorSound("brazil/down",127);
		else if((!noTeam && isFour) || (noTeam && CheckInventory("Voice") == 3))
			ActivatorSound("opfor/down",127);
		else if(noTeam && CheckInventory("Voice") == 4)
			ActivatorSound("seal/down",127);
		else if(noTeam && CheckInventory("Voice") == 5)
			ActivatorSound("tf141/down",127);
	}
}

//------------------------------------------
//------- Shows current perks
script 634 RESPAWN NET
{
	//Delay(15);
	
	if(CheckInventory("Menu") == 1){
		terminate; // terminate the script if we are in menu (to prevent erasing the menu)
	}
	
	if(COMPETITIVE){
		TakeInventory("Voice", 9);
		GiveInventory("Voice", CurrentVoice[PlayerNumber()]);
	}
	
	eraseMenu(PlayerNumber());
	
	SetHudSize(320,200,1);
	if(CheckInventory("Perk1_SOH") == 1)
	{
		if(CheckInventory("Perk1_SOH_PRO") == 1)	SetFont("P_SOHP");
		else SetFont("P_SOH");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 180.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk1_ExtremeConditioning") == 1)
	{
		if(CheckInventory("Perk1_ExtremeConditioning_PRO") == 1)	SetFont("P_EXCONP");
		else SetFont("P_EXCOND");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 180.0, 215.0, 3.0, 1.0);		
	}
	if(
		CheckInventory("Perk1_OneManArmy") == 1 ||
		(COMPETITIVE && CheckInventory("Perk1_OneManArmy_PRO") == 1)
	)
	{
		if(CheckInventory("Perk1_OneManArmy_PRO") == 1 && COOPERATIVE)	SetFont("P_OMAP");
		else SetFont("P_OMA");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 180.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk1_Scavenger") == 1 || CheckInventory("Perk1_Scavenger_DM") == 1)
	{
		if(CheckInventory("Perk1_Scavenger_PRO") == 1)	SetFont("P_SCAP");
		else SetFont("P_SCA");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 180.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk2_Juggernaut") == 1)
	{
		if(CheckInventory("Perk2_Juggernaut_PRO") == 1)	SetFont("P_JUGGEP");
		else SetFont("P_JUGGER");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 215.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk2_StoppingPower") == 1)
	{
		if(CheckInventory("Perk2_StoppingPower_PRO") == 1)	SetFont("P_POWERP");
		else SetFont("P_POWER");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 215.0, 215.0, 3.0, 1.0);		
	}
	if(
		CheckInventory("Perk2_DangerClose") == 1 ||
		(COMPETITIVE && CheckInventory("Perk2_DangerClose_PRO") == 1)
	)
	{
		if(CheckInventory("Perk2_DangerClose_PRO") == 1 && COOPERATIVE)	SetFont("P_DANGEP");
		else SetFont("P_DANGER");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 215.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk2_ColdBlooded") == 1 || CheckInventory("Perk2_ColdBlooded_DM") == 1 || CheckInventory("Perk2_ColdBlooded_PRO") == 1)
	{
		if(CheckInventory("Perk2_ColdBlooded_PRO") == 1 && COOPERATIVE)	SetFont("P_COLDP");
		else SetFont("P_COLD");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 215.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk3_SteadyAim") == 1)
	{
		if(CheckInventory("Perk3_SteadyAim_PRO") == 1)	SetFont("P_STEADP");
		else SetFont("P_STEADY");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 250.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk3_Commando") == 1)
	{
		if(CheckInventory("Perk3_Commando_PRO") == 1)	SetFont("P_COMMP");
		else SetFont("P_COMM");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 250.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk3_LastStand") == 1)
	{
		if(CheckInventory("Perk3_LastStand_PRO") == 1)	SetFont("P_LASTAP");
		else SetFont("P_LASTAN");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 250.0, 215.0, 3.0, 1.0);		
	}
	if(CheckInventory("Perk3_SitRep") == 1 || CheckInventory("Perk3_SitRep_PRO") == 1)
	{
		if(CheckInventory("Perk3_SitRep_PRO") == 1 && COOPERATIVE)	SetFont("P_SITRP");
		else SetFont("P_SITR");
		HudMessage(s:"a"; HUDMSG_FADEOUT, 0, CR_Green, 250.0, 215.0, 3.0, 1.0);		
	}
}




//Create a load out!
script 635 (void)
{
	while(CheckWeapon("Menu") == 1)
	{
		TakeInventory("USP .45",1);
		//SetHudSize(800,600,1);
		//SetFont("CONFONT");
		SetActorProperty(0,APROP_Invulnerable,1);
		SetPlayerProperty(0,1,PROP_FROZEN);
		delay(35);
	}
	SetPlayerProperty(0,0,PROP_FROZEN);
	SetActorProperty(0,APROP_Invulnerable,0);
}

str Class[MAX_PLAYER_COUNT];
str Handgun[MAX_PLAYER_COUNT];
str HandgunAmmo[MAX_PLAYER_COUNT];
int HandgunAmmoAmount[MAX_PLAYER_COUNT];
str Primary[MAX_PLAYER_COUNT];
str Primary2[MAX_PLAYER_COUNT];
str PrimaryAmmo[MAX_PLAYER_COUNT];
str PrimaryAmmo2[MAX_PLAYER_COUNT];
str PrimaryType[MAX_PLAYER_COUNT];
int PrimaryAmmoAmount[MAX_PLAYER_COUNT];
str Perk1[MAX_PLAYER_COUNT];
str Perk2[MAX_PLAYER_COUNT];
str Perk3[MAX_PLAYER_COUNT];
str Attachment[MAX_PLAYER_COUNT];
bool GotClass[MAX_PLAYER_COUNT];

//Show menu
script 636 (int firstTimeAfterDeath)
{
	// Bot? -> Random loadout
	if(ClassifyActor(0) & ACTOR_BOT){
		ACS_ExecuteAlways(639,0,0,0,0);
		terminate;
	}
	
	// do not give more weapons after respawning in coop
	if(CheckInventory("Spawned") > 0)
	{
		SetActorState (0, "SpawnExplode");		
		TakeInventory("PowerMenu",1);
		GiveInventory("ResetVisibility",1);		
		terminate;
	}	
	
	// skip class menu if respawining in DM and RUN is not pressed                                       
	int buttons = GetPlayerInput(-1, INPUT_BUTTONS);
	if(
		COMPETITIVE && 
		GotClass[PlayerNumber()+1] == TRUE &&
		!(buttons & BT_ALTATTACK) &&
		firstTimeAfterDeath == 1
	) {		
	    ChangeCamera(0, 0, 0);
		ACS_ExecuteAlways(638,0,Class[PlayerNumber()+1],0,0);
		terminate;
	}

	eraseMenu(PlayerNumber());
	
	SetHudSize(800,600,1);
	SetFont("CONFONT");
	if(CheckInventory("MenuPlace") == 0){ // add the randomize option on class menu screen
		HudMessage(s:"Press \cffire \ccto scroll      Press \cfalt-fire \ccto select      Press \cfreload \ccto randomize"; HUDMSG_PLAIN, 2050+PlayerNumber(), CR_WHITE, 400.0, 60.0, 0.0);
	}
	else {
		HudMessage(s:"Press \cffire \ccto scroll      Press \cfalt-fire \ccto select"; HUDMSG_PLAIN, 2050+PlayerNumber(), CR_WHITE, 400.0, 60.0, 0.0);
	}				
	
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 9)
	{
		if(GameType() == GAME_SINGLE_PLAYER){
			SetHudSize(800,600,1);
			SetFont("BIGFONT");
			HudMessage(s:"Choose game mode"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);
			
			
	  		//List menu
	  		HudMessage(s:"1)    Classic"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
	  		HudMessage(s:"2)    Hardcore"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
	  		HudMessage(s:"3)    Arcade"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);
	  		
	  		SetFont("CONFONT");	
	  		HudMessage(s:"                       \cjDoom-like gameplay"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 103.0, 0.0);
			HudMessage(s:"                       \cjGreatly increased weapon and monster damage, no crosshair"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_WHITE, 60.1, 143.0, 0.0);
			HudMessage(s:"                       \cjMonsters drop experience on the ground"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_WHITE, 60.1, 183.0, 0.0);	
	  		
	  		SetFont("BIGFONT");
	  		if(CheckInventory("MenuCursor") == 0){
	  			HudMessage(s:"1)  > Classic"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
	  		}
	  		else if(CheckInventory("MenuCursor") == 1){
	  			HudMessage(s:"2)  > Hardcore"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);		  			
	  		}
	  		else if(CheckInventory("MenuCursor") == 2){
	  			HudMessage(s:"3)  > Arcade"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);
	  		}
	  
	  		if(CheckInventory("MenuCursor") >= 3){
	  			TakeInventory("MenuCursor",10);
	  			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
	  		}
		}
		else log(s:"ERROR: Game mode selection is single player only");
	}
	//Choose to create your own or select a preset.       Menu
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 0)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose class"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);
	
		
		SetFont("CONFONT");
		//HudMessage(s:"Create your loadout"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 100.1, 100.0, 0.0);	
		//HudMessage(s:"Presets or make your own"; HUDMSG_PLAIN, 350+PlayerNumber(), CR_WHITE, 100.1, 180.0, 0.0);	

	    if(COOPERATIVE){
	  		//List menu
	  		HudMessage(s:"1)    Make your own!"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
	  		HudMessage(s:"2)    Assault:       M4A1 (+Extended Mags) and USP .45\n\n                + \cvScavenger, \cgStopping Power, \cdCommando PRO"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
	  		HudMessage(s:"3)    Juggernaut:    L86 (+Grip) and Desert Eagle\n\n                + \cvSleight of Hand, \cgJuggernaut PRO, \cdLast Stand"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
	  		HudMessage(s:"4)    Sniper:        Barrett .50 cal (+Thermal Scope) and M93 Raffica\n\n                + \cvOne Man Army, \cgStopping Power PRO, \cdSteady Aim"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);	
	  		HudMessage(s:"5)    Recon:         FAL and PP2000 (+Extended Mags)\n\n                + \cvExtreme Conditioning, \cgCold Blooded, \cdSit-Rep PRO"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);		
	  		HudMessage(s:"6)    Demolitions:   RPG-7 and SPAS-12\n\n                + \cvScavenger, \cgDanger Close PRO, \cdSit-Rep"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_WHITE, 60.1, 300.0, 0.0);		
	  		HudMessage(s:"7)    Grenadier:     FAMAS (+M203) and G18\n\n                + \cvExtreme Conditioning PRO, \cgDanger Close, \cdLast Stand"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_WHITE, 60.1, 340.0, 0.0);
	  	    HudMessage(s:"8)    Ninja:         FN P90 and M9 (+Tac Knife)\n\n                + \cvSleight of Hand, \cgCold Blooded PRO, \cdCommando"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_WHITE, 60.1, 380.0, 0.0);
			HudMessage(s:"9)    Daredevil:     USP .45\n\n                \cjNone (all perks and attachments have to be unlocked in-game)"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_WHITE, 60.1, 420.0, 0.0);
	  	    
	  		if(GameType() == GAME_SINGLE_PLAYER){
				HudMessage(s:"0)    Back"; HUDMSG_PLAIN, 900+PlayerNumber(), CR_WHITE, 60.1, 460.0, 0.0);
			}
	  	
	  		if(CheckInventory("MenuCursor") == 0){
	  			HudMessage(s:"1)  > Make your own!"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
	  		}
	  		else if(CheckInventory("MenuCursor") == 1){
	  			HudMessage(s:"2)  > Assault:       M4A1 (+Extended Mags) and USP .45\n\n                + \cvScavenger, \cgStopping Power, \cdCommando PRO"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
	  			HudMessage(s:"\cvScavenger: +100% ammo in pickups\n\n         \cjPRO\cv: +100% powerup duration\n\n\cgStopping Power: +25% bullet damage\n\n         \cjPRO\cg: Sniper bullets penetrate multiple enemies\n\n\cdCommando: +100% knife damage and range\n\n         \cjPRO\cd: Attacking doesn't block regeneration"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 2){
	  			HudMessage(s:"3)  > Juggernaut:    L86 (+Grip) and Desert Eagle\n\n                + \cvSleight of Hand, \cgJuggernaut PRO, \cdLast Stand"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
	  			HudMessage(s:"\cvSleight of Hand: Faster reloading\n\n         \cjPRO\cv: Faster knifing and grenade throwing\n\n\cgJuggernaut: +40% damage resistance\n\n         \cjPRO\cg: double bonuses from health/armor pickups\n\n\cdLast Stand: Pull out your handgun before dying\n\n         \cjPRO\cd: Get 30 health in last stand"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 3){
	  			HudMessage(s:"4)  > Sniper:        Barrett .50 cal (+Thermal Scope) and M93 Raffica\n\n                + \cvOne Man Army, \cgStopping Power PRO, \cdSteady Aim"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);	
	  			HudMessage(s:"\cvOne Man Army: Carry extra ammo\n\n         \cjPRO\cv: Carry extra weapon\n\n\cgStopping Power: +25% bullet damage\n\n         \cjPRO\cg: Sniper bullets penetrate multiple enemies\n\n\cdSteady Aim: +33% hip-fire accuracy\n\n         \cjPRO\cd: No sniper rifle accuracy penalty while moving"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 4){
	  			HudMessage(s:"5)  > Recon:         FAL and PP2000 (+Extended Mags)\n\n                + \cvExtreme Conditioning, \cgCold Blooded, \cdSit-Rep PRO"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);	
	  			HudMessage(s:"\cvExtreme Conditioning: +15% running speed\n\n         \cjPRO\cv: Regenerate 100% faster and 40% sooner\n\n\cgCold Blooded: Invisible to seeker missiles\n\n         \cjPRO\cg: Partial invisibility while out of combat\n\n\cdSit-Rep: Full automap with monsters' positions\n\n         \cjPRO\cd: See enemies through walls"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 5){
	  			HudMessage(s:"6)  > Demolitions:   RPG-7 and SPAS-12\n\n                + \cvScavenger, \cgDanger Close PRO, \cdSit-Rep"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_YELLOW, 60.1, 300.0, 0.0);
	  			HudMessage(s:"\cvScavenger: +100% ammo in pickups\n\n         \cjPRO\cv: +100% powerup duration\n\n\cgDanger Close: +100% explosive damage\n\n         \cjPRO\cg: +50% explosive blast radius\n\n\cdSit-Rep: Full automap with monsters' positions\n\n         \cjPRO\cd: See enemies through walls"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 6){
	  			HudMessage(s:"7)  > Grenadier:     FAMAS (+M203) and G18\n\n                + \cvExtreme Conditioning PRO, \cgDanger Close, \cdLast Stand"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_YELLOW, 60.1, 340.0, 0.0);
	  			HudMessage(s:"\cvExtreme Conditioning: +15% running speed\n\n         \cjPRO\cv: Regenerate 100% faster and 40% sooner\n\n\cgDanger Close: +100% explosive damage\n\n         \cjPRO\cg: +50% explosive blast radius\n\n\cdLast Stand: Pull out your handgun before dying\n\n         \cjPRO\cd: Get 30 health in last stand"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 7){
	  			HudMessage(s:"8)  > Ninja:         FN P90 and M9 (+Tac Knife)\n\n                + \cvSleight of Hand, \cgCold Blooded PRO, \cdCommando"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_YELLOW, 60.1, 380.0, 0.0);	
	  			HudMessage(s:"\cvExtreme Conditioning: Faster reloading\n\n         \cjPRO\cv: Faster knifing and grenade throwing\n\n\cgCold Blooded: Invisible to seeker missiles\n\n         \cjPRO\cg: Partial invisibility while out of combat\n\n\cdCommando: +100% knife damage and range\n\n         \cjPRO\cd: Attacking doesn't block regeneration"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 8){
	  			HudMessage(s:"9)  > Daredevil:     USP .45\n\n                \cjNone (all perks and attachments have to be unlocked in-game)"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_YELLOW, 60.1, 420.0, 0.0);
	  			HudMessage(s:""; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 160.1, 500.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 9 && GameType() == GAME_SINGLE_PLAYER){
			    HudMessage(s:"0)  > Back"; HUDMSG_PLAIN, 900+PlayerNumber(), CR_YELLOW, 60.1, 460.0, 0.0);
			}
	  
	  		if((CheckInventory("MenuCursor") >= 10 && GameType() == GAME_SINGLE_PLAYER) ||
				(CheckInventory("MenuCursor") >= 9 && GameType() != GAME_SINGLE_PLAYER))
			{
	  			TakeInventory("MenuCursor",15);
	  			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
	  		}
			}
			// Deathmatch
	    else {
	      //List menu
	  		HudMessage(s:"1)    Make your own!"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
	  		HudMessage(s:"2)    Assault:       M4A1 (+Extended Mags) and USP .45\n\n                + \cvScavenger, \cgStopping Power, \cdCommando"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
	  		HudMessage(s:"3)    Juggernaut:    L86 (+Grip) and Desert Eagle\n\n                + \cvSleight of Hand, \cgJuggernaut, \cdLast Stand"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
	  		HudMessage(s:"4)    Sniper:        Barrett .50 cal (+Thermal Scope) and M93 Raffica\n\n                + \cvOne Man Army, \cgStopping Power, \cdSteady Aim"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);	
	  		HudMessage(s:"5)    Recon:         FAL and PP2000 (+Extended Mags)\n\n                + \cvExtreme Conditioning, \cgCold Blooded, \cdSit-Rep"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);		
	  		HudMessage(s:"6)    Demolitions:   RPG-7 and SPAS-12\n\n                + \cvScavenger, \cgDanger Close, \cdSit-Rep "; HUDMSG_PLAIN, 650+PlayerNumber(), CR_WHITE, 60.1, 300.0, 0.0);		
	  		HudMessage(s:"7)    Grenadier:     FAMAS (+M203) and G18\n\n                + \cvExtreme Conditioning, \cgDanger Close, \cdLast Stand"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_WHITE, 60.1, 340.0, 0.0);
	  		HudMessage(s:"8)    Ninja:         FN P90 and M9 (+Tac Knife)\n\n                + \cvSleight of Hand, \cgCold Blooded, \cdCommando"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_WHITE, 60.1, 380.0, 0.0);		
	  		
	  		
	  		if(CheckInventory("MenuCursor") == 0){
	  			HudMessage(s:"1)  > Make your own!"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
	  		}
	  		else if(CheckInventory("MenuCursor") == 1){
	  			HudMessage(s:"2)  > Assault:       M4A1 (+Extended Mags) and USP .45\n\n                + \cvScavenger, \cgStopping Power, \cdCommando"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
	  			HudMessage(s:"\cvScavenger: More starting ammo\n\n\cgStopping Power: +25% bullet damage\n\n\cdCommando: +100% knife damage and range"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 2){
	  			HudMessage(s:"3)  > Juggernaut:    L86 (+Grip) and Desert Eagle\n\n                + \cvSleight of Hand, \cgJuggernaut, \cdLast Stand"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
	  			HudMessage(s:"\cvSleight of Hand: faster reloading\n\n\cgJuggernaut: +40% damage resistance\n\n\cdLast Stand: Pull out your handgun before dying"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 3){
	  			HudMessage(s:"4)  > Sniper:        Barrett .50 cal (+Thermal Scope) and M93 Raffica\n\n                + \cvOne Man Army, \cgStopping Power, \cdSteady Aim"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);	
	  			HudMessage(s:"\cvOne Man Army: Carry extra gun\n\n\cgStopping Power: +25% bullet damage\n\n\cdSteady Aim: +33% hip-fire accuracy"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 4){
	  			HudMessage(s:"5)  > Recon:         FAL and PP2000 (+Extended Mags)\n\n                + \cvExtreme Conditioning, \cgCold Blooded, \cdSit-Rep"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);	
	  			HudMessage(s:"\cvExtreme Conditioning: +15% running speed\n\n\cgCold Blooded: Partial invisibility\n\n\cdSit-Rep: See enemies through walls"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 5){
	  			HudMessage(s:"6)  > Demolitions:   RPG-7 and SPAS-12\n\n                + \cvScavenger, \cgDanger Close, \cdSit-Rep"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_YELLOW, 60.1, 300.0, 0.0);
	  			HudMessage(s:"\cvScavenger: More starting ammo\n\n\cgDanger Close: +50% explosive blast radius\n\n\cdSit-Rep: See enemies through walls"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 6){
	  			HudMessage(s:"7)  > Grenadier:     FAMAS (+M203) and G18\n\n                + \cvExtreme Conditioning, \cgDanger Close, \cdLast Stand"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_YELLOW, 60.1, 340.0, 0.0);
	  			HudMessage(s:"\cvExtreme Conditioning: +15% running speed\n\n\cgDanger Close: +50% explosive blast radius\n\n\cdLast Stand: Pull out your handgun before dying"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		else if(CheckInventory("MenuCursor") == 7){
	  			HudMessage(s:"8)  > Ninja:         FN P90 and M9 (+Tac Knife)\n\n                + \cvSleight of Hand, \cgCold Blooded, \cdCommando"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_YELLOW, 60.1, 380.0, 0.0);	
	  			HudMessage(s:"\cvSleight of Hand: Faster reloading\n\n\cgCold Blooded: Partial invisibility\n\n\cdCommando: +100% knife damage and range"; HUDMSG_PLAIN, 2150+PlayerNumber(), CR_YELLOW, 430.1, 460.0, 0.0);
	  		}
	  		
	  		if(CheckInventory("MenuCursor") >= 8){
	  			TakeInventory("MenuCursor",10);
	  			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
	  		}
	    }
		//delay(1);	
		//restart;
	}

	//Choose secondary weapon
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 1)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose a secondary weapon"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);

		SetFont("CONFONT");
		//List menu
		HudMessage(s:"1)    USP .45:      handgun, 12-round mag, semi-auto"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
		HudMessage(s:"2)    M9:           handgun, 15-round mag, semi-auto, less damage"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);
		HudMessage(s:"3)    Desert Eagle: handgun, 7-round mag, semi-auto, high damage"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
		HudMessage(s:"4)    PP2000:       machine pistol, 20-round mag, full-auto"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);
		HudMessage(s:"5)    G18:          machine pistol, 33-round mag, full-auto, high recoil"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);
		HudMessage(s:"6)    M93 Raffica   machine pistol, 20-round mag, burst fire"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_WHITE, 60.1, 200.0, 0.0);				
		HudMessage(s:"7)    SPAS-12:      shotgun, 8-round mag, pump action"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);				
		HudMessage(s:"8)    M1014:        shotgun, 4-round mag, semi-auto"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_WHITE, 60.1, 240.0, 0.0);
		HudMessage(s:"9)    Thumper:      grenade launcher"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);
		HudMessage(s:"0)    Back"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_WHITE, 60.1, 280.0, 0.0);	
		
	
		if(CheckInventory("MenuCursor") == 0)
			HudMessage(s:"1)  > USP .45:      handgun, 12-round mag, semi-auto"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 1)
			HudMessage(s:"2)  > M9:           handgun, 15-round mag, semi-auto, less damage"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 120.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 2)
			HudMessage(s:"3)  > Desert Eagle: handgun, 7-round mag, semi-auto, high damage"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);
		else if(CheckInventory("MenuCursor") == 3)
			HudMessage(s:"4)  > PP2000:       machine pistol, 20-round mag, full-auto"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 160.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 4)
			HudMessage(s:"5)  > G18:          machine pistol, 33-round mag, full-auto, high recoil"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 5)
			HudMessage(s:"6)  > M93 Raffica   machine pistol, 20-round mag, burst fire"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_YELLOW, 60.1, 200.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 6)
			HudMessage(s:"7)  > SPAS-12:      shotgun, 8-round mag, pump action"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);        
		else if(CheckInventory("MenuCursor") == 7)
			HudMessage(s:"8)  > M1014:        shotgun, 4-round mag, semi-auto"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_YELLOW, 60.1, 240.0, 0.0);
		else if(CheckInventory("MenuCursor") == 8)
			HudMessage(s:"9)  > Thumper:      grenade launcher"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);
		else if(CheckInventory("MenuCursor") == 9)
			HudMessage(s:"0)  > Back"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_YELLOW, 60.1, 280.0, 0.0);	

		if(CheckInventory("MenuCursor") >= 10){
			TakeInventory("MenuCursor",10);
			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
		}
		//delay(1);	
		//restart;
	}

	//Choose primary weapon
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 2)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose a primary weapon"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);

		SetFont("CONFONT");

		//List menu
		HudMessage(s:"1)    UMP45:         SMG, 32-round mag, high damage"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
		HudMessage(s:"2)    Vector:        SMG, 30-round mag, high rate of fire"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);	
		HudMessage(s:"3)    M4A1:          assault rifle, 30-round mag, low damage, high fire rate and accuracy"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);				
		HudMessage(s:"4)    SCAR-H:        assault rifle, 20-round mag, high damage"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);
		HudMessage(s:"5)    FAMAS:         assault rifle, 30-round mag,  burst fire, low damage, M203 Grenade launcher"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
		HudMessage(s:"6)    FAL:           assault rifle, 20-round mag, semi-auto, high damage"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_WHITE, 60.1, 200.0, 0.0);
		HudMessage(s:"7)    RPG-7:         rocket launcher, unguided missiles"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);	
		HudMessage(s:"8)    Intervention:  sniper rifle, 5-round mag, bolt action"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_WHITE, 60.1, 240.0, 0.0);
		HudMessage(s:"9)    L86:           LMG, 100-round mag"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);	
		HudMessage(s:"0)    Back"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_WHITE, 60.1, 280.0, 0.0);	
	
		if(CheckInventory("MenuCursor") == 0)
			HudMessage(s:"1)  > UMP45:         SMG, 32-round mag, high damage"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 1)
			HudMessage(s:"2)  > Vector:        SMG, 30-round mag, high rate of fire"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 120.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 2)
			HudMessage(s:"3)  > M4A1:          assault rifle, 30-round mag, low damage, high fire rate and accuracy"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 3)
			HudMessage(s:"4)  > SCAR-H:        assault rifle, 20-round mag, high damage"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 160.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 4)
			HudMessage(s:"5)  > FAMAS:         assault rifle, 30-round mag,  burst fire, low damage, M203 Grenade launcher"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 5)
			HudMessage(s:"6)  > FAL:           assault rifle, 20-round mag, semi-auto, high damage"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_YELLOW, 60.1, 200.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 6)
			HudMessage(s:"7)  > RPG-7:         rocket launcher, unguided missiles"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 7)
			HudMessage(s:"8)  > Intervention:  sniper rifle, 5-round mag, bolt action"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_YELLOW, 60.1, 240.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 8)
			HudMessage(s:"9)  > L86:           LMG, 100-round mag"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 9)
			HudMessage(s:"0)  > Back"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_YELLOW, 60.1, 280.0, 0.0);	

		if(CheckInventory("MenuCursor") >= 10){
			TakeInventory("MenuCursor",15);
			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
		}
		//delay(1);	
		//restart;
	}

	//Choose perk 1
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 3)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose a blue perk"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);

		SetFont("CONFONT");	

    if(COOPERATIVE){
  		//List menu
  		HudMessage(s:"1)    \cvSleight of Hand:      Faster reloading\n\n         \cjPRO\cv: Faster knifing and grenade throwing"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
  		HudMessage(s:"2)    \cvExtreme Conditioning: +15% running speed\n\n         \cjPRO\cv: Regenerate 100% faster and 40% sooner"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
  		HudMessage(s:"3)    \cvOne Man Army:         Carry extra ammo\n\n         \cjPRO\cv: Carry extra weapon"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
  		HudMessage(s:"4)    \cvScavenger:         	  +100% ammo in pickups\n\n         \cjPRO\cv: +100% powerup duration"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);
  		HudMessage(s:"5)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);	
  
  		if(CheckInventory("MenuCursor") == 0)
  			HudMessage(s:"1)  > \ckSleight of Hand:      Faster reloading\n\n         \cjPRO\cv: Faster knifing and grenade throwing"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 1)
  			HudMessage(s:"2)  > \ckExtreme Conditioning: +15% running speed\n\n         \cjPRO\cv: Regenerate 100% faster and 40% sooner"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 2)
  			HudMessage(s:"3)  > \ckOne Man Army:         Carry extra ammo\n\n         \cjPRO\cv: Carry extra weapon"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 3)
  			HudMessage(s:"4)  > \ckScavenger:            +100% ammo in pickups\n\n         \cjPRO\cv: +100% powerup duration"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);
  		else if(CheckInventory("MenuCursor") == 4)
  			HudMessage(s:"5)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);	
	 }
	 else { // competitive
    //List menu
  		HudMessage(s:"1)    \cvSleight of Hand:      Faster reloading"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
  		HudMessage(s:"2)    \cvExtreme Conditioning: +15% running speed"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);	
  		HudMessage(s:"3)    \cvOne Man Army:         Carry extra gun"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
  		HudMessage(s:"4)    \cvScavenger:            Start with more ammo"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);
  		HudMessage(s:"5)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
  
  		if(CheckInventory("MenuCursor") == 0)
  			HudMessage(s:"1)  > \ckSleight of Hand:      Faster reloading"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 1)
  			HudMessage(s:"2)  > \ckExtreme Conditioning: +15% running speed"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 120.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 2)
  			HudMessage(s:"3)  > \ckOne Man Army:         Carry extra gun"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 3)
  			HudMessage(s:"4)  > \ckScavenger:            Start with more ammo"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 160.0, 0.0);
  		else if(CheckInventory("MenuCursor") == 4)
  			HudMessage(s:"5)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);
   }
	
		if(CheckInventory("MenuCursor") >= 5){
			TakeInventory("MenuCursor",10);
			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
		}
		//delay(1);	
		//restart;
	}

	//Choose perk 2
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 4)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose a red perk"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);

		SetFont("CONFONT");	

    if(COOPERATIVE){
  		//List menu
  		HudMessage(s:"1)    \cgStopping Power: +25% bullet damage\n\n         \cjPRO\cg: Sniper bullets penetrate multiple enemies"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
  		HudMessage(s:"2)    \cgDanger Close:   +100% explosive damage\n\n         \cjPRO\cg: +50% explosive blast radius"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
  		HudMessage(s:"3)    \cgJuggernaut:     +40% damage resistance\n\n         \cjPRO\cg: Double bonuses from health/armor pickups"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
  		HudMessage(s:"4)    \cgCold Blooded:   Invisible to seeker missiles\n\n         \cjPRO\cg: Partial invisibility while out of combat"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);
  		HudMessage(s:"5)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);	
  
  		if(CheckInventory("MenuCursor") == 0)
  			HudMessage(s:"1)  > \ckStopping Power: +25% bullet damage\n\n         \cjPRO\cg: Sniper bullets penetrate multiple enemies"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 1)
  			HudMessage(s:"2)  > \ckDanger Close:   +100% explosive damage\n\n         \cjPRO\cg: +50% explosive blast radius"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 2)
  			HudMessage(s:"3)  > \ckJuggernaut:     +40% damage resistance\n\n         \cjPRO\cg: Double bonuses from health/armor pickups"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 3)
  			HudMessage(s:"4)  > \ckCold Blooded:   Invisible to seeker missiles\n\n         \cjPRO\cg: Partial invisibility while out of combat"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);
  		else if(CheckInventory("MenuCursor") == 4) 
  			HudMessage(s:"5)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);	
	  }
    else {  // competitive
  		//List menu
  		HudMessage(s:"1)    \cgStopping Power: +25% bullet damage"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
  		HudMessage(s:"2)    \cgDanger Close:   +50% explosive blast radius"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);	
  		HudMessage(s:"3)    \cgJuggernaut:     +40% damage resistance"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
  		HudMessage(s:"4)    \cgCold Blooded:   Partial invisibility"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);
  		HudMessage(s:"5)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
  
  		if(CheckInventory("MenuCursor") == 0)
  			HudMessage(s:"1)  > \ckStopping Power: +25% bullet damage"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 1)
  			HudMessage(s:"2)  > \ckDanger Close:   +50% explosive blast radius"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 120.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 2)
  			HudMessage(s:"3)  > \ckJuggernaut:     +40% damage resistance"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 3)
  			HudMessage(s:"4)  > \ckCold Blooded:   Partial invisibility"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 160.0, 0.0);
  		else if(CheckInventory("MenuCursor") == 4) 
  			HudMessage(s:"5)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
    }
		if(CheckInventory("MenuCursor") >= 5){
			TakeInventory("MenuCursor",10);
			ACS_ExecuteAlways(636,0,0,0,0);  // redraw the menu
		}
		//delay(1);	
		//restart;
	}

	//Choose perk 3
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 5)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose a yellow perk"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);

    if(COOPERATIVE){
  		SetFont("CONFONT");	
  		//List menu
  		HudMessage(s:"1)    \cdSteady Aim: +33% hip-fire accuracy\n\n         \cjPRO\cd: No sniper rifle accuracy penalty while moving"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
  		HudMessage(s:"2)    \cdCommando:   +100% knife damage and range\n\n         \cjPRO\cd: Attacking doesn't block regeneration"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
  		HudMessage(s:"3)    \cdLast Stand: Pull out your handgun before dying\n\n         \cjPRO\cd: Get 30 health in last stand"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
  		HudMessage(s:"4)    \cdSit-Rep:    Full automap with monsters' positions\n\n         \cjPRO\cd: See enemies through walls"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);	  	
		HudMessage(s:"5)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);	
  
  		if(CheckInventory("MenuCursor") == 0)
  			HudMessage(s:"1)  > \ckSteady Aim: +33% hip-fire accuracy\n\n         \cjPRO\cd: No sniper rifle accuracy penalty while moving"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 1)
  			HudMessage(s:"2)  > \ckCommando:   +100% knife damage and range\n\n         \cjPRO\cd: Attacking doesn't block regeneration"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 2)
  			HudMessage(s:"3)  > \ckLast Stand: Pull out your handgun before dying\n\n         \cjPRO\cd: Get 30 health in last stand"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 3)
  			HudMessage(s:"4)  > \ckSit-Rep:    Full automap with monsters' positions\n\n         \cjPRO\cd: See enemies through walls"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);
		else if(CheckInventory("MenuCursor") == 4)
  			HudMessage(s:"5)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 260.0, 0.0);
    }
    else { // competitive  
  		SetFont("CONFONT");	
  		//List menu
  		HudMessage(s:"1)    \cdSteady Aim: +33% hip-fire accuracy"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
  		HudMessage(s:"2)    \cdCommando:   +100% knife damage and range"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);	
  		HudMessage(s:"3)    \cdLast Stand: Pull out your handgun before dying"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);
		HudMessage(s:"3)    \cdSit-Rep:    See enemies through walls"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);	
  		HudMessage(s:"4)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
  
  		if(CheckInventory("MenuCursor") == 0)
  			HudMessage(s:"1)  > \ckSteady Aim: +33% hip-fire accuracy"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 1)
  			HudMessage(s:"2)  > \ckCommando:   +100% knife damage and range"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 120.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 2)
  			HudMessage(s:"3)  > \ckLast Stand: Pull out your handgun before dying"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
  		else if(CheckInventory("MenuCursor") == 3)
  			HudMessage(s:"4)  > \ckSit-Rep:    See enemies through walls"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 160.0, 0.0);
		else if(CheckInventory("MenuCursor") == 4)
  			HudMessage(s:"5)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);
    }	                                      
	
		if(CheckInventory("MenuCursor") >= 5){
			TakeInventory("MenuCursor",10);
			ACS_ExecuteAlways(636,0,0,0,0); // redraw the menu
		}
		//delay(1);	
		//restart;
	}

	//Choose attachment
	if(CheckWeapon("Menu") == 1 && CheckInventory("MenuPlace") == 6)
	{
		SetHudSize(800,600,1);
		SetFont("BIGFONT");
		HudMessage(s:"Choose an attachment"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);

		SetFont("CONFONT");	
		//List menu
		HudMessage(s:"1)    Akimbo:          Dual wield weapon (handguns, G18, PP2000 and Mini-Uzi only for now)"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
		HudMessage(s:"2)    Tactical Knife:  Faster knifing for handguns"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);	
		HudMessage(s:"3)    Extended Mags:   +50% increased magazine size (not for .44 Magnum, Deagle, Ranger or 1887)"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);	
		HudMessage(s:"4)    Rapid Fire:      Increased rate of fire (MP5K, UMP45, P90 only)"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);	
		HudMessage(s:"5)    Thermal Scope:   See through scope in darkness (snipers only)"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
		HudMessage(s:"6)    Grip:            -50% vertical recoil, shotguns and LMGs only (not for Ranger or 1887)"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_WHITE, 60.1, 200.0, 0.0);	
		HudMessage(s:"7)    Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);	

	
		if(CheckInventory("MenuCursor") == 0)
			HudMessage(s:"1)  > Akimbo:          Dual wield weapon (handguns, G18, PP2000 and Mini-Uzi only for now)"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 1)
			HudMessage(s:"2)  > Tactical Knife:  Faster knifing for handguns"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_YELLOW, 60.1, 120.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 2)
			HudMessage(s:"3)  > Extended Mags:   +50% increased magazine size (not for .44 Magnum, Deagle, Ranger or 1887)"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_YELLOW, 60.1, 140.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 3)
			HudMessage(s:"4)  > Rapid Fire:      Increased rate of fire (MP5K, UMP45, P90 only)"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_YELLOW, 60.1, 160.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 4)
			HudMessage(s:"5)  > Thermal Scope:   See through scope in darkness (snipers only)"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_YELLOW, 60.1, 180.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 5)
			HudMessage(s:"6)  > Grip:            -50% vertical recoil, shotguns and LMGs only (not for Ranger or 1887)"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_YELLOW, 60.1, 200.0, 0.0);	
		else if(CheckInventory("MenuCursor") == 6)
			HudMessage(s:"7)  > Back"; HUDMSG_PLAIN, 950+PlayerNumber(), CR_YELLOW, 60.1, 220.0, 0.0);	
	
		if(CheckInventory("MenuCursor") >= 7){
			TakeInventory("MenuCursor",10);
			ACS_ExecuteAlways(636,0,0,0,0);// redraw the menu
		}
		//delay(1);	
		//restart;
	}
}

//Make selection
script 637 (void)
{
	//MenuPlace 9: We're in the game mode menu.
	if(CheckInventory("MenuPlace") == 9){
		if(CheckInventory("MenuCursor") == 0)		//Classic
		{
			GiveInventory("Classic", 1);
			TakeInventory("Arcade", 1);	
			arcade = 0;	
		}
		else if(CheckInventory("MenuCursor") == 1)		//Hardcore
		{
		    // nothing, hardcore is the default state
		    TakeInventory("Classic", 1);
		    TakeInventory("Arcade", 1);
		    arcade = 0;
		}
		else if(CheckInventory("MenuCursor") == 2)		//Softcore
		{
		    GiveInventory("Classic", 1);
		    GiveInventory("Arcade", 1);
		    arcade = 1;
		}
		TakeInventory("MenuCursor",10); 
		TakeInventory("MenuPlace",9);
		ACS_ExecuteAlways(636,0,0,0,0);// redraw the menu			
	}
	//MenuPlace 0: We're in the presets menu.
	else if(CheckInventory("MenuPlace") == 0)
	{
		if(CheckInventory("MenuCursor") == 0){		//Go to next menu
			GiveInventory("MenuPlace",1);
			ACS_ExecuteAlways(636,0,0,0,0);// redraw the menu
		}
		else if(CheckInventory("MenuCursor") == 1)	//Choose Assault class, close menu.
			ACS_ExecuteAlways(638,0,0,0,0);
		else if(CheckInventory("MenuCursor") == 2)	//Choose Juggernaut class, close menu.
			ACS_ExecuteAlways(638,0,1,0,0);
		else if(CheckInventory("MenuCursor") == 3) 	//Choose Sniper class, close menu.
			ACS_ExecuteAlways(638,0,2,0,0);
		else if(CheckInventory("MenuCursor") == 4)	//Choose Recon class, close menu.
			ACS_ExecuteAlways(638,0,3,0,0);
		else if(CheckInventory("MenuCursor") == 5)	//Choose Demolitions class, close menu.
			ACS_ExecuteAlways(638,0,4,0,0);
		else if(CheckInventory("MenuCursor") == 6)	//Choose Grenadier class, close menu.
			ACS_ExecuteAlways(638,0,5,0,0);
		else if(CheckInventory("MenuCursor") == 7)	//Choose Ninja class, close menu.
			ACS_ExecuteAlways(638,0,6,0,0);
		else if(CheckInventory("MenuCursor") == 8 && COOPERATIVE)	//Choose Daredevil class, close menu.
			ACS_ExecuteAlways(638,0,7,0,0);
		else if(CheckInventory("MenuCursor") == 9 && GameType() == GAME_SINGLE_PLAYER)	//Go back
			GiveInventory("MenuPlace",9);
	}
	//MenuPlace 1: We're in the handguns menu.
	else if(CheckInventory("MenuPlace") == 1)
	{	
		if(CheckInventory("MenuCursor") == 0)		//Set USP .45, go to next menu
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "USP .45";
			HandgunAmmo[PlayerNumber()+1] = "USP45Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 24;
		}
		else if(CheckInventory("MenuCursor") == 1)	//Set M9, go to next menu
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "M9";
			HandgunAmmo[PlayerNumber()+1] = "M9Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 30;
		}
		else if(CheckInventory("MenuCursor") == 2)	//Set Deagle, go to next menu
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "Desert Eagle";
			HandgunAmmo[PlayerNumber()+1] = "DeagleAmmo";
			HandgunAmmoAmount[PlayerNumber()+1] = 14;
		}
		else if(CheckInventory("MenuCursor") == 3)	//Set PP2000, go to next menu
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "PP2000";
			HandgunAmmo[PlayerNumber()+1] = "PP2000Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 40;
		}
		else if(CheckInventory("MenuCursor") == 4)	//Set G18, go to next menu
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "G18";
			HandgunAmmo[PlayerNumber()+1] = "G18Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 66;
		}
		else if(CheckInventory("MenuCursor") == 5)	//Set M93, go to next menu
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "M93 Raffica";
			HandgunAmmo[PlayerNumber()+1] = "M93RAmmo";
			HandgunAmmoAmount[PlayerNumber()+1] = 40;
		}
		else if(CheckInventory("MenuCursor") == 6)		//SPAS-12
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "SPAS-12";
			HandgunAmmo[PlayerNumber()+1] = "SPAS12Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 32;
		}
        else if(CheckInventory("MenuCursor") == 7)		//M1014
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "M1014";
			HandgunAmmo[PlayerNumber()+1] = "M1014Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 24;
		}
        else if(CheckInventory("MenuCursor") == 8)		//Thumper
		{
			GiveInventory("MenuPlace",1);
			Handgun[PlayerNumber()+1] = "Thumper";
			HandgunAmmo[PlayerNumber()+1] = "ThumperAmmo";
			HandgunAmmoAmount[PlayerNumber()+1] = 2;
		}
		else if(CheckInventory("MenuCursor") == 9)	//Go back
			TakeInventory("MenuPlace",1);
		TakeInventory("MenuCursor",15);
	}
	//MenuPlace 2: We're in the primary weapons menu.
	else if(CheckInventory("MenuPlace") == 2)
	{
				HudMessage(s:"1)    UMP45:         SMG, 32-round mag, high damage"; HUDMSG_PLAIN, 400+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);	
		HudMessage(s:"2)    Vector:        SMG, 30-round mag, high rate of fire"; HUDMSG_PLAIN, 450+PlayerNumber(), CR_WHITE, 60.1, 120.0, 0.0);	
		HudMessage(s:"3)    M4A1:          assault rifle, 30-round mag, low damage, high fire rate and accuracy"; HUDMSG_PLAIN, 500+PlayerNumber(), CR_WHITE, 60.1, 140.0, 0.0);				
		HudMessage(s:"4)    SCAR-H:        assault rifle, 20-round mag, high damage"; HUDMSG_PLAIN, 550+PlayerNumber(), CR_WHITE, 60.1, 160.0, 0.0);
		HudMessage(s:"5)    FAMAS:         assault rifle, 30-round mag,  burst fire, low damage, M203 Grenade launcher"; HUDMSG_PLAIN, 600+PlayerNumber(), CR_WHITE, 60.1, 180.0, 0.0);	
		HudMessage(s:"6)    FAL:           assault rifle, 20-round mag, semi-auto, high damage"; HUDMSG_PLAIN, 650+PlayerNumber(), CR_WHITE, 60.1, 200.0, 0.0);
		HudMessage(s:"7)    RPG-7:         rocket launcher, unguided missiles"; HUDMSG_PLAIN, 700+PlayerNumber(), CR_WHITE, 60.1, 220.0, 0.0);	
		HudMessage(s:"8)    Intervention:  sniper rifle, 5-round mag, bolt action"; HUDMSG_PLAIN, 750+PlayerNumber(), CR_WHITE, 60.1, 240.0, 0.0);
		HudMessage(s:"9)    L86:           LMG, 100-round mag"; HUDMSG_PLAIN, 800+PlayerNumber(), CR_WHITE, 60.1, 260.0, 0.0);	
		HudMessage(s:"0)    Back"; HUDMSG_PLAIN, 850+PlayerNumber(), CR_WHITE, 60.1, 280.0, 0.0);	
	
		if(CheckInventory("MenuCursor") == 0)		//UMP45
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "UMP45";
			PrimaryAmmo[PlayerNumber()+1] = "UMP45Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 128;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(CheckInventory("MenuCursor") == 1)		//Vector
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "TDI Vector";
			PrimaryAmmo[PlayerNumber()+1] = "VectorAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 120;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		if(CheckInventory("MenuCursor") == 2)			//M4A1
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "M4A1";
			PrimaryAmmo[PlayerNumber()+1] = "M4A1Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 120;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(CheckInventory("MenuCursor") == 3)		//SCAR-H
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "SCAR-H";
			PrimaryAmmo[PlayerNumber()+1] = "SCARHAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 100;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(CheckInventory("MenuCursor") == 4)		//FAMAS
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "FAMAS";
			Primary2[PlayerNumber()+1] = "FAMAS M203";
			PrimaryAmmo[PlayerNumber()+1] = "FAMASAmmo";
			PrimaryAmmo2[PlayerNumber()+1] = "M203Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 120;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(CheckInventory("MenuCursor") == 5)		//FAL
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "FAL";
			PrimaryAmmo[PlayerNumber()+1] = "FALAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 100;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(CheckInventory("MenuCursor") == 6)		//RPG
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "RPG-7";
			PrimaryAmmo[PlayerNumber()+1] = "RPGAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 2;
		}
		else if(CheckInventory("MenuCursor") == 7)		//Intervention
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "Intervention";
			PrimaryAmmo[PlayerNumber()+1] = "InterventionAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 20;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_LMG";
		}
		else if(CheckInventory("MenuCursor") == 8)		//L86
		{
			GiveInventory("MenuPlace",1);
			Primary[PlayerNumber()+1] = "L86";
			PrimaryAmmo[PlayerNumber()+1] = "L86Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 200;
		}
		else if(CheckInventory("MenuCursor") >= 9)	//Go back
			TakeInventory("MenuPlace",1);
		TakeInventory("MenuCursor",15);
	}
	//MenuPlace 3: We're in the Tier 1 perks menu
	else if(CheckInventory("MenuPlace") == 3)
	{
		if(CheckInventory("MenuCursor") == 0)			//Sleight of Hand
		{
			GiveInventory("MenuPlace",1);
			Perk1[PlayerNumber()+1] = "Perk1_SOH";
		}
		else if(CheckInventory("MenuCursor") == 1)		//Extreme Conditioning
		{
			GiveInventory("MenuPlace",1);
			Perk1[PlayerNumber()+1] = "Perk1_ExtremeConditioning";
		}
		else if(CheckInventory("MenuCursor") == 2)		//One Man Army
		{
			GiveInventory("MenuPlace",1);
			if(COOPERATIVE){
		    Perk1[PlayerNumber()+1] = "Perk1_OneManArmy";
			}
			else {
        Perk1[PlayerNumber()+1] = "Perk1_OneManArmy_PRO";
      }
		}
		else if(CheckInventory("MenuCursor") == 3)		//Scavenger
		{
			GiveInventory("MenuPlace",1);
			
			if(COOPERATIVE){
			  Perk1[PlayerNumber()+1] = "Perk1_Scavenger";
			}
			else {
				Perk1[PlayerNumber()+1] = "Perk1_Scavenger_DM";
			}
		}
		else if(CheckInventory("MenuCursor") == 4)	//Go back
			TakeInventory("MenuPlace",1);
		TakeInventory("MenuCursor",15);
	}
	//MenuPlace 4: We're in the Tier 2 perks menu
	else if(CheckInventory("MenuPlace") == 4)
	{
		if(CheckInventory("MenuCursor") == 0)			//Stopping Power
		{
			GiveInventory("MenuPlace",1);
			Perk2[PlayerNumber()+1] = "Perk2_StoppingPower";
		}
		else if(CheckInventory("MenuCursor") == 1)		//Danger Close
		{
			GiveInventory("MenuPlace",1);
			if(COOPERATIVE){
			  Perk2[PlayerNumber()+1] = "Perk2_DangerClose";
			}
			else {
        Perk2[PlayerNumber()+1] = "Perk2_DangerClose_PRO";
      }
		}
		else if(CheckInventory("MenuCursor") == 2)		//Juggernaut
		{
			GiveInventory("MenuPlace",1);
			Perk2[PlayerNumber()+1] = "Perk2_Juggernaut";
		}
		else if(CheckInventory("MenuCursor") == 3)		//Cold Blooded 
		{
			GiveInventory("MenuPlace",1);
			
      if(COOPERATIVE){
        Perk2[PlayerNumber()+1] = "Perk2_ColdBlooded";
      }
      else {
        Perk2[PlayerNumber()+1] = "Perk2_ColdBlooded_PRO";
      }
		}
		else if(CheckInventory("MenuCursor") == 4)	//Go back
			TakeInventory("MenuPlace",1);
		TakeInventory("MenuCursor",15);
	}
	//MenuPlace 5: We're in the Tier 3 perks menu
	else if(CheckInventory("MenuPlace") == 5)
	{
		if(CheckInventory("MenuCursor") == 0)			//Steady Aim
		{
			GiveInventory("MenuPlace",1);
			Perk3[PlayerNumber()+1] = "Perk3_SteadyAim";
		}
		else if(CheckInventory("MenuCursor") == 1)		//Commando
		{
			GiveInventory("MenuPlace",1);
			Perk3[PlayerNumber()+1] = "Perk3_Commando";
		}
		else if(CheckInventory("MenuCursor") == 2)		//Last Stand
		{
			GiveInventory("MenuPlace",1);
			Perk3[PlayerNumber()+1] = "Perk3_LastStand";
		}
		else if(CheckInventory("MenuCursor") == 3)		//SitRep
		{
			GiveInventory("MenuPlace",1);
			
			if(COOPERATIVE){
				Perk3[PlayerNumber()+1] = "Perk3_SitRep";
			}
			else {
				Perk3[PlayerNumber()+1] = "Perk3_SitRep_PRO";
			}
		}
		if(CheckInventory("MenuCursor") == 4){	//Go back
			TakeInventory("MenuPlace",1);
		}else if(COOPERATIVE){
		    ACS_ExecuteAlways(638,0,9,0,0);
		    terminate;
		}
		
		TakeInventory("MenuCursor",15);
		
	}
	//MenuPlace 6: We're in the Attachments menu
	else if(CheckInventory("MenuPlace") == 6)
	{
		if(CheckInventory("MenuCursor") == 0)			//Akimbo
			Attachment[PlayerNumber()+1] = "AkimboAttachment";
		else if(CheckInventory("MenuCursor") == 1)		//Knife
			Attachment[PlayerNumber()+1] = "KnifeAttachment";
		else if(CheckInventory("MenuCursor") == 2)		//Ex Mags
			Attachment[PlayerNumber()+1] = "ExtendedMagsAttachment";
		else if(CheckInventory("MenuCursor") == 3)		//Rapid Fire
			Attachment[PlayerNumber()+1] = "RapidFireAttachment";
		else if(CheckInventory("MenuCursor") == 4)		//Thermal
			Attachment[PlayerNumber()+1] = "ThermalAttachment";
		else if(CheckInventory("MenuCursor") == 5)		//Grip
			Attachment[PlayerNumber()+1] = "GripAttachment";
		else if(CheckInventory("MenuCursor") == 6)	//Go back
			TakeInventory("MenuPlace",1);

		if(CheckInventory("MenuCursor") != 6){
			GiveInventory("RewardsToPick",1);
			ACS_ExecuteAlways(638,0,9,0,0);
		}
	}
	
	ACS_ExecuteAlways(636,0,0,0,0);// redraw the menu
}

script 638 (int Which)
{
	SetActorState (0, "SpawnExplode");
	TakeInventory("PowerMenu",1);
	GiveInventory("ResetVisibility",1);	
	SetPlayerProperty(0,0,PROP_FROZEN);
	
	TakeInventory("MenuChoice1",1);
	TakeInventory("MenuChoice2",1);
	TakeInventory("MenuChoice3",1);
	TakeInventory("MenuChoice4",1);
	TakeInventory("MenuChoice5",1);
	TakeInventory("MenuChoice6",1);
	TakeInventory("MenuChoice7",1);
	TakeInventory("MenuChoice8",1);
	TakeInventory("MenuChoice9",1);
	TakeInventory("MenuChoice10",1);
	
	// revert the camera from  in-menu killcam
	ChangeCamera(0, 0, 0);		
	
	if(CheckInventory("Classic") > 0){
		GiveInventory("ClassicDamage", 1);
		GiveInventory("ClassicDurability", 1);
		GiveInventory("Crosshair", 1);
	}

	Class[PlayerNumber()+1] = Which;
	If(Which == 0)
	{
		TakeInventory("Menu",1);
		GiveInventory("USP .45",1);
		//GiveInventory("USP45Ammo",24);
		GiveInventory("M4A1 Ex Mags",1);
		GiveInventory("M4A1ExMags", 1);
		//GiveInventory("M4A1Ammo",60);
		//GiveInventory("M4A1Clip2",45);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",2);
		if(COOPERATIVE){
			GiveInventory("Perk1_Scavenger",1);
	      GiveInventory("Perk3_Commando_Pro",1);		
			}
			else {
	      GiveInventory("Perk1_Scavenger_DM",1);
	      GiveInventory("Backpack", 1);	
	    }
	    
	    GiveInventory("Perk2_StoppingPower",1);
		GiveInventory("Perk2_StoppingPowerEffect",1);
		GiveInventory("Perk3_Commando",1);
		GiveInventory("Perk3_CommandoEffect",1);
		
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);                                   
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Assault!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("M4A1 Ex Mags");
	}
	else If(Which == 1)
	{
		//log(s:"Take1");
		TakeInventory("Menu",1);
		GiveInventory("Desert Eagle",1);
		//GiveInventory("DeagleAmmo",14);
		GiveInventory("L86 Grip",1);
		GiveInventory("L86Grip",1);
		//GiveInventory("L86Ammo",100);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",2);
		
    GiveInventory("Perk1_SOH",1);
		GiveInventory("Perk2_Juggernaut",1);
		GiveInventory("Perk2_JuggernautEffect",1);
		if(COOPERATIVE){
      GiveInventory("Perk2_Juggernaut_Pro",1);
    }
		GiveInventory("Perk3_LastStand",1);
		GiveInventory("LastStandUrn",10000);
		
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Juggernaut!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("L86");
	}
	else If(Which == 2)
	{
		//log(s:"Take2");
		TakeInventory("Menu",1);
		GiveInventory("M93 Raffica",1);
		//GiveInventory("M93RAmmo",68);
		GiveInventory("Barrett 50cal Thermal",1);
		GiveInventory("BarrettThermal",1);
		//GiveInventory("InterventionAmmo",10);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_LMG",1);
		GiveInventory("MaxWeaponsFilled",2);
		if(COOPERATIVE){
			GiveInventory("Perk1_OneManArmy",1);
			GiveInventory("Perk2_StoppingPower_Pro",1);
		}
		else {
      GiveInventory("Perk1_OneManArmy_PRO",1);
    }
		
		GiveInventory("Perk2_StoppingPower",1);
		GiveInventory("Perk2_StoppingPowerEffect",1);		
		GiveInventory("Perk3_SteadyAim",1);

		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Sniper!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("Intervention Thermal");
		ACS_ExecuteAlways(629,0,0,0,0); // set ammo capacities (OMA)
	}
	else If(Which == 3)
	{
		//log(s:"Take3");
		TakeInventory("Menu",1);
		GiveInventory("PP2000 Ex Mags",1);
		GiveInventory("PP2000ExMags",1);
		//GiveInventory("M9Ammo",30);
		GiveInventory("FAL",1);
		//GiveInventory("FALAmmo",60);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",2);
		GiveInventory("Perk1_ExtremeConditioning",1);
		
		if(COOPERATIVE){
    		GiveInventory("Perk2_ColdBlooded",1);
			
		}
		else {
      		GiveInventory("Perk2_ColdBlooded_Pro",1);
    	}

        if(COOPERATIVE){
	  		GiveInventory("Perk3_SitRep",1);
	  		GiveInventory("Perk3_SitRepItem",1);
	  		GiveInventory("Perk3_SitRepEffect",1);
  		}
		
		GiveInventory("Perk3_SitRep_PRO",1);  		
  	
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Recon!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("FAL");
	}
	else If(Which == 4)
	{
		//log(s:"Take4");
		TakeInventory("Menu",1);
		GiveInventory("SPAS-12",1);
		//GiveInventory("SPAS12Ammo",32);
		GiveInventory("RPG-7",1);
		//GiveInventory("RPGAmmo",1);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",2);
    		
		if(COOPERATIVE){
			GiveInventory("Perk1_Scavenger",1);
			GiveInventory("Perk2_DangerClose",1);
			GiveInventory("Perk2_DangerCloseEffect",1);
			GiveInventory("Perk2_DangerClose_Pro",1);
		}
		else {
    		GiveInventory("Perk1_Scavenger_DM",1);
			GiveInventory("Perk2_DangerClose_Pro",1);
			GiveInventory("Backpack", 1);
    	}
		
		if(COOPERATIVE){
    		GiveInventory("Perk3_SitRep",1);
    		GiveInventory("Perk3_SitRepItem",1);
    		GiveInventory("Perk3_SitRepEffect",1);
    	}
    	else {
		    GiveInventory("Perk3_SitRep_PRO",1);
		}
		
    	ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Demolitions!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("SPAS-12");
	}
	else If(Which == 5)
	{
		//log(s:"Take4");
		TakeInventory("Menu",1);		
		GiveInventory("G18",1);		
		//GiveInventory("G18Ammo",66);
		//GiveInventory("G18Clip",33);
		GiveInventory("FAMAS",1);
		//GiveInventory("FAMASAmmo",2);
		GiveInventory("FAMAS M203",1);
		//GiveInventory("M203Ammo",1);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",2);
		
    	GiveInventory("Perk1_ExtremeConditioning",1);
		
    	if(COOPERATIVE){		
			GiveInventory("Perk1_ExtremeConditioning_Pro",1);
			GiveInventory("Perk2_DangerClose",1);
			GiveInventory("Perk2_DangerCloseEffect",1);			
		}
		else {		
			GiveInventory("Perk2_DangerClose_PRO",1);			
		}
		
		GiveInventory("Perk3_LastStand",1);
		GiveInventory("LastStandUrn",10000);
		
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Grenadier!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("FAMAS M203");		
	}
	else If(Which == 6)
	{
		TakeInventory("Menu",1);
		GiveInventory("M9 Tac Knife",1);
		GiveInventory("M9Knife",1);
		//GiveInventory("M9Ammo",30);
		GiveInventory("FN P90",1);
		//GiveInventory("P90Ammo",60);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory("MaxWeaponsFilled_ARSMG",1);
		GiveInventory("MaxWeaponsFilled",2);
		GiveInventory("Perk1_SOH",1);
		
		if(COOPERATIVE){
    		GiveInventory("Perk2_ColdBlooded",1);
		}
		
		GiveInventory("Perk2_ColdBlooded_Pro",1);
		
  		GiveInventory("Perk3_Commando",1);
  		GiveInventory("Perk3_CommandoEffect",1);
  	
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Ninja!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("FN P90");
	}
	else If(Which == 7)
	{
		//log(s:"Take4");
		TakeInventory("Menu",1);		
		GiveInventory("USP .45",1);
    	//GiveInventory("USP45Ammo",12);
		GiveInventory("MaxWeaponsFilled_Handgun",1);		
		GiveInventory("MaxWeaponsFilled",1);
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		SetFont("BIGFONT");
		HudMessage(s:"\cdYou are Daredevil!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_Green, 0.5, 0.49, 2.0, 1.0);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon("USP .45");		
	}
	else if(Which == 9)
	{
		//log(s:"Take9");
		TakeInventory("Menu",1);
		GiveInventory(Handgun[PlayerNumber()+1],1);
		//GiveInventory(HandgunAmmo[PlayerNumber()+1],HandgunAmmoAmount[PlayerNumber()+1]);
		GiveInventory("MaxWeaponsFilled_Handgun",1);
		GiveInventory(Primary[PlayerNumber()+1],1);
		//GiveInventory(PrimaryAmmo[PlayerNumber()+1],PrimaryAmmoAmount[PlayerNumber()+1]);
		GiveInventory(PrimaryType[PlayerNumber()+1],1);
		GiveInventory("MaxWeaponsFilled",2);
		if(Primary[PlayerNumber()+1] == "FAMAS")
		{
			GiveInventory("FAMAS M203",1);
			//GiveInventory("M203Ammo",1);
		}
		if(COOPERATIVE){
			GiveInventory(Perk1[PlayerNumber()+1],1);
			if(Perk1[PlayerNumber()+1] == "Perk1_OneManArmy")
			{
				ACS_ExecuteAlways(629,0,0,0,0);
			}	
			
			GiveInventory(Perk2[PlayerNumber()+1],1);			
			
			If(Perk2[PlayerNumber()+1] == "Perk2_Juggernaut")
			{
				GiveInventory("Perk2_JuggernautEffect",1);
			}
			If(Perk2[PlayerNumber()+1] == "Perk2_DangerClose")
			{
				GiveInventory("Perk2_DangerCloseEffect",1);
			}
			If(Perk2[PlayerNumber()+1] == "Perk2_StoppingPower")
			{
				GiveInventory("Perk2_StoppingPowerEffect",1);
			}

			
			GiveInventory(Perk3[PlayerNumber()+1],1);
			If(Perk3[PlayerNumber()+1] == "Perk3_Commando")
			{
				GiveInventory("Perk3_CommandoEffect",1);
			}
			if(Perk3[PlayerNumber()+1] == "Perk3_LastStand")
			{
				GiveInventory("LastStandUrn",10000);
			}
		
			
			If(Perk3[PlayerNumber()+1] == "Perk3_SitRep")
			{
				GiveInventory("Perk3_SitRepEffect",1);
				GiveInventory("Perk3_SitRepItem",1);
			}
			
			GiveInventory("RewardsToPick",1);
			drawChooseAward();
						
			//ACS_ExecuteAlways(623,0,0,0,0);
		}
		else {  // Deathmatch
		    if(Perk1[PlayerNumber()+1] == "Perk1_OneManArmy")
				GiveInventory("Perk1_OneManArmy_PRO", 1);
			else if(Perk1[PlayerNumber()+1] == "Perk1_Scavenger_DM"){
				GiveInventory("Perk1_Scavenger_DM", 1);
				GiveInventory("Backpack", 1);
			}
			else {
				GiveInventory(Perk1[PlayerNumber()+1],1);			    
			}
			
			if(Perk2[PlayerNumber()+1] == "Perk2_DangerClose")
				GiveInventory("Perk2_DangerClose_PRO", 1);
			else if(Perk2[PlayerNumber()+1] == "Perk2_ColdBlooded"){
				GiveInventory("Perk2_ColdBlooded_PRO", 1);
			}
			else {
				If(Perk2[PlayerNumber()+1] == "Perk2_Juggernaut")
				{
					GiveInventory("Perk2_JuggernautEffect",1);
				}
				If(Perk2[PlayerNumber()+1] == "Perk2_StoppingPower")
				{
					GiveInventory("Perk2_StoppingPowerEffect",1);
				}
			
				GiveInventory(Perk2[PlayerNumber()+1],1);			    
			}
			
			
			
			if(Perk3[PlayerNumber()+1] == "Perk3_LastStand")
			{
				GiveInventory("LastStandUrn",10000);
			}
			If(Perk3[PlayerNumber()+1] == "Perk3_Commando")
			{
				GiveInventory("Perk3_CommandoEffect",1);
			}
			
			If(Perk3[PlayerNumber()+1] == "Perk3_SitRep")
			{
				GiveInventory("Perk3_SitRep_PRO", 1);
			}
			else {
				GiveInventory(Perk3[PlayerNumber()+1],1);
			}
			
			GiveInventory(Attachment[PlayerNumber()+1],1);
			GiveInventory("RewardsToPick", 1);
		}
		
		ACS_ExecuteAlways(634,0,0,0,0);
		LocalAmbientSound("game/challenge",90);
		delay(1);
		GiveInventory("SetPickupPickup",1);
		GotClass[PlayerNumber()+1] = True;
		SetWeapon(Primary[PlayerNumber()+1]);
	}
	else{
		HudMessage(s:"NO NUMBER"; HUDMSG_FADEOUT, 1, CR_RED, 0.5, 0.69, 2.0, 1.0);
	}
	
    GiveInventory("Spawned", 1);
	
	int MaxGunCount = GameSkill();
	if(COMPETITIVE){
		MaxGunCount = 2;
	}
	
	If(CheckInventory("Perk1_OneManArmy_Pro") == 1){
		MaxGunCount++;
	}
	
	GiveInventory("Backpack", 1);
	
	SetAmmoCapacity("MaxWeaponsFilled",MaxGunCount);
	TakeInventory("InCombat", 5);
	
	delay(1);
	ACS_ExecuteAlways(500,0,0,0,0); // setup killcam and tid
}

script 639 (void)
{
	int Randomiser;
	
	Delay(5);
	TakeInventory("USP .45",1);

	Randomiser = random(0,2);
		if(Randomiser == 0)		//Set USP .45
		{
			Handgun[PlayerNumber()+1] = "USP .45";
			HandgunAmmo[PlayerNumber()+1] = "USP45Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 24;
		}
		else if(Randomiser == 1)	//Set M9
		{
			Handgun[PlayerNumber()+1] = "M9";
			HandgunAmmo[PlayerNumber()+1] = "M9Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 30;
		}
		else if(Randomiser == 2)	//Set PP2000
		{
			Handgun[PlayerNumber()+1] = "PP2000";
			HandgunAmmo[PlayerNumber()+1] = "PP2000Ammo";
			HandgunAmmoAmount[PlayerNumber()+1] = 40;
		}

	Randomiser = random(0,10);
		if(Randomiser == 0)			//M4A1
		{
			Primary[PlayerNumber()+1] = "M4A1";
			PrimaryAmmo[PlayerNumber()+1] = "M4A1Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 60;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 1)		//FAMAS
		{
			Primary[PlayerNumber()+1] = "FAMAS";
			Primary2[PlayerNumber()+1] = "FAMAS M203";
			PrimaryAmmo[PlayerNumber()+1] = "FAMASAmmo";
			PrimaryAmmo2[PlayerNumber()+1] = "M203Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 60;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 2)		//SCAR-H
		{
			Primary[PlayerNumber()+1] = "SCAR-H";
			PrimaryAmmo[PlayerNumber()+1] = "SCARHAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 50;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 3)		//FAL
		{
			Primary[PlayerNumber()+1] = "FAL";
			PrimaryAmmo[PlayerNumber()+1] = "FALAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 50;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 4)		//SPAS-12
		{
			Primary[PlayerNumber()+1] = "SPAS-12";
			PrimaryAmmo[PlayerNumber()+1] = "SPAS12Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 16;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_Shotgun";
		}
		else if(Randomiser == 5)		//Ranger
		{
			Primary[PlayerNumber()+1] = "Ranger";
			PrimaryAmmo[PlayerNumber()+1] = "RangerAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 10;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_Shotgun";
		}
		else if(Randomiser == 6)		//Striker
		{
			Primary[PlayerNumber()+1] = "Striker";
			PrimaryAmmo[PlayerNumber()+1] = "StrikerAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 16;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_Shotgun";
		}
		else if(Randomiser == 7)		//MP5K
		{
			Primary[PlayerNumber()+1] = "MP5K";
			PrimaryAmmo[PlayerNumber()+1] = "MP5Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 60;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 8)		//UMP45
		{
			Primary[PlayerNumber()+1] = "UMP45";
			PrimaryAmmo[PlayerNumber()+1] = "UMP45Ammo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 64;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 9)		//Vector
		{
			Primary[PlayerNumber()+1] = "TDI Vector";
			PrimaryAmmo[PlayerNumber()+1] = "VectorAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 60;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_ARSMG";
		}
		else if(Randomiser == 10)		//Intervention
		{
			Primary[PlayerNumber()+1] = "Intervention";
			PrimaryAmmo[PlayerNumber()+1] = "InterventionAmmo";
			PrimaryAmmoAmount[PlayerNumber()+1] = 10;
			PrimaryType[PlayerNumber()+1] = "MaxWeaponsFilled_LMG";
		}

	Randomiser = random(0,2);
		if(Randomiser == 0)			//Sleight of Hand
			Perk1[PlayerNumber()+1] = "Perk1_SOH";
		else if(Randomiser == 1)		//Extreme Conditioning
			Perk1[PlayerNumber()+1] = "Perk1_ExtremeConditioning";
		else if(Randomiser == 2)		//One Man Army
			Perk1[PlayerNumber()+1] = "Perk1_OneManArmy";

	Randomiser = random(0,3);
		if(Randomiser == 0)			//Stopping Power
			Perk2[PlayerNumber()+1] = "Perk2_StoppingPower";
		else if(Randomiser == 1)		//Danger Close
			Perk2[PlayerNumber()+1] = "Perk2_DangerClose";
		else if(Randomiser == 2)		//Juggernaut
			Perk2[PlayerNumber()+1] = "Perk2_Juggernaut";
        else if(Randomiser == 3)		//ColdBlooded
			Perk2[PlayerNumber()+1] = "Perk2_ColdBlooded";

	Randomiser = random(0,3);
		if(Randomiser == 0)			//Steady Aim
			Perk3[PlayerNumber()+1] = "Perk3_SteadyAim";
		else if(Randomiser == 1)		//Commando
			Perk3[PlayerNumber()+1] = "Perk3_Commando";
		else if(Randomiser == 2)		//Last Stand
			Perk3[PlayerNumber()+1] = "Perk3_LastStand";
		else if(Randomiser == 3)		//Last Stand
			Perk3[PlayerNumber()+1] = "Perk3_SitRep";
		TakeInventory("MenuCursor",15);

	Randomiser = random(0,5);
		if(Randomiser == 0)			//Akimbo
			Attachment[PlayerNumber()+1] = "AkimboAttachment";
		else if(Randomiser == 1)		//Knife
			Attachment[PlayerNumber()+1] = "KnifeAttachment";
		else if(Randomiser == 2)		//Ex Mags
			Attachment[PlayerNumber()+1] = "ExtendedMagsAttachment";
		else if(Randomiser == 3)		//Rapid Fire
			Attachment[PlayerNumber()+1] = "RapidFireAttachment";
		else if(Randomiser == 4)		//Thermal
			Attachment[PlayerNumber()+1] = "ThermalAttachment";
		else if(Randomiser == 5)		//Grip
			Attachment[PlayerNumber()+1] = "GripAttachment";

	ACS_ExecuteAlways(638,0,9,0,0);
}


// ColdBlooded pro invisibility
script 640 (void)
{
	//if(InvisibilityRunning[PlayerNumber()] == 0){
	//	InvisibilityRunning[PlayerNumber()] = 1;

		while(true){	
			if(CheckInventory("Perk2_ColdBlooded_PRO") == 1){
				if(CheckInventory("InCombat") == 0 && CheckInventory("PowerEMP") == 0){
					GiveInventory("Perk2_ColdBloodedProEffect", 1);
				}
				else {				
					TakeInventory("InCombat",1);
				}
			}

			delay(35);
			
			//log(s:"invis", i: timer());
		}
	//}
}

// Infinite ammo for bots
script 641 (void) {
	if(ClassifyActor(0) & ACTOR_BOT){
		GiveInventory("Backpack", 1);		
	}
}

// Move viewport a little bit when scoping to prevent quickscoping
script 642 (void) {
	SetActorAngle(0,GetActorAngle(0)+random(-700,700));
	SetActorPitch(0,GetActorPitch(0)+random(-700,700));
}

// Perform ASYNCHRONOUS health check for Last Stand (the Urn won't restore HP fast enough for the check to be successful), triggered in player pain state 
script 643 (void) {
	delay(1);
	if(GetActorProperty(0,APROP_Health) == 1){
		ACS_ExecuteAlways(625,0,0,0,0); // Transform into Last Stand
	}
}

// erase the "press X to change class" message
script 644 RESPAWN{
	// call the clientside script (the message is only clientside)
	// it must go through serverside script, since clientside respawn script wouldn't get PlayerNumber set correctly
	ACS_ExecuteAlways(645,0,PlayerNumber(),0,0);
}

script 645 (int p) CLIENTSIDE { // helper for 644
	HudMessage(s:""; HUDMSG_PLAIN, 2700+p, CR_WHITE, 400.0, 60.0, 2.0);
}

// script for "give level"
script 646 (void) {
	GiveInventory("Experience", ExperienceNeed[PlayerNumber()+1] - CheckInventory("Experience"));
	
	ACS_ExecuteAlways(616,0,0,0,0); // refresh level counter
}

// clientside blood screen drawing script
script 647 (void) CLIENTSIDE {
	if(GetActorProperty(0,APROP_Health) < 60){
		if(CheckInventory("InLastStand") > 0){
	        SetFont("LSSCRN");
		}
	    else if(GetActorProperty(0,APROP_Health) > 40)
			SetFont("DAMSCRN1");
		else if(GetActorProperty(0,APROP_Health) > 20)
			SetFont("DAMSCRN2");
		else
			SetFont("DAMSCRN3");
		
        drawStretchedImage(50+PlayerNumber(), 1280, 800, 0.5, 1.0);
	}
}

int expTidCounter = 1000000;

script 648 (void) {
	if(arcade){
		int exp = CheckInventory("XPAmount");
		
		exp = exp / 6;
	
	  if(GetCVAR("rgh_xprate") > 0){
      exp = exp * GetCVAR("rgh_xprate");
    }
    else if(GetCVAR("rgh_xprate") < 0){
      exp = exp / GetCVAR("rgh_xprate");
    }
	
		while(exp >= 10)
		{
			expTidCounter++;
			
			Spawn("ArcadeXP10", GetActorX(0), GetActorY(0), GetActorZ(0), expTidCounter);
			ThrustThing(random(0, 255), random(2, 6), 0, expTidCounter);
			ThrustThingZ(expTidCounter, random(20, 50), 0, 0);
			
			exp = exp - 10;
		}
		
		while(exp >= 1)
		{
			expTidCounter++;
			
			Spawn("ArcadeXP1", GetActorX(0), GetActorY(0), GetActorZ(0), expTidCounter);
			ThrustThing(random(0, 255), random(2, 6), 0, expTidCounter);
			ThrustThingZ(expTidCounter, random(20, 50), 0, 1);
			
			exp = exp - 1;
		}
	}
}

script 649 (int mClassic, int mArcade) {
	if(mClassic){
		GiveInventory("Classic", 1);
		GiveInventory("ClassicDamage", 1);
		GiveInventory("ClassicDurability", 1);
		GiveInventory("Crosshair", 1);
		log(s:"Classic mode is ON");
	}
	else
	{
		TakeInventory("Classic", 1);
		TakeInventory("PowerClassicDamage", 99);
		TakeInventory("PowerClassicDurability", 99);
		GiveInventory("Crosshair", 1);
		log(s:"Classic mode is OFF");
	}
	
	if(mArcade){
		GiveInventory("Arcade", 1);
		arcade = true;
		log(s:"Arcade mode is ON");
	}
	else
	{
		TakeInventory("Arcade", 1);
		arcade = false;
		log(s:"Arcade mode is OFF");
	}
}

function int getCurrentWeaponSpread(bool hold){
	int Spread = 0.0;

	// Low spread handguns
	if(
		CheckWeapon("USP .45") || 
		CheckWeapon("USP .45 Ex Mags") || 
		CheckWeapon("USP .45 Akimbo") || 
		CheckWeapon("USP .45 Tac Knife") || 
		CheckWeapon("USP .45 LastStand") || 
		CheckWeapon("M9") ||
		CheckWeapon("M9 Ex Mags") ||
		CheckWeapon("M9 Akimbo") ||
		CheckWeapon("M9 Tac Knife") ||
		CheckWeapon(".44 Magnum") || 
		CheckWeapon(".44 Magnum Akimbo") || 
		CheckWeapon(".44 Magnum Tac Knife") ||		  
		CheckWeapon("M93 Raffica") || 
		CheckWeapon("M93 Raffica Ex Mags")
	)
	{
		Spread = 10.0;
		if(hold)
			Spread = 20.0;
	}

	// Deagle
	else if(
		CheckWeapon("Desert Eagle") || 
		CheckWeapon("Deagle Special") || 
		CheckWeapon("Desert Eagle Akimbo") || 
		CheckWeapon("Desert Eagle Tac Knife")
	)
	{
		Spread = 15.0;
		if(hold)
			Spread = 30.0;
	}

	// Machine pistols
	else if(
	 	CheckWeapon("G18") || 
		CheckWeapon("G18 Ex Mags") ||
		CheckWeapon("G18 Akimbo") || 
		CheckWeapon("PP2000") || 
		CheckWeapon("PP2000 Ex Mags") ||
		CheckWeapon("PP2000 Akimbo")
	)
	{
		Spread = 10.0;
		if(hold)
			Spread = 20.0;
	}

	// Low spread shotguns
	else if(
		CheckWeapon("SPAS-12") || 
		CheckWeapon("SPAS-12 Ex Mags") || 
		CheckWeapon("SPAS-12 Grip") || 
		CheckWeapon("M1014") ||
		CheckWeapon("M1014 Ex Mags") ||
		CheckWeapon("M1014 Grip") 
	)
	{
		Spread = 6.0;
		if(hold)
			Spread = 12.0;
	}

	// Lower-medium spread shotguns
	else if(
		CheckWeapon("AA-12") || 
		CheckWeapon("AA-12 Ex Mags") || 
		CheckWeapon("AA-12 Grip") 
	)
	{
		Spread = 7.0;
		if(hold)
			Spread = 14.0;
	}

	// Higher-medium spread shotguns
	else if(
		CheckWeapon("Model 1887") ||
		CheckWeapon("Striker Grip")|| 
		CheckWeapon("Striker") || 
		CheckWeapon("Striker Ex Mags")
	)
	{
		Spread = 8.0;
		if(hold)
			Spread = 16.0;
	}
	
	// High spread shotguns
	else if(
		CheckWeapon("Ranger")
	)
	{
		Spread = 10.0;
		if(hold)
			Spread = 20.0;
	}

	// low spread SMGs
	else if(
		CheckWeapon("Mini-UZI") ||
		CheckWeapon("Mini-UZI Ex Mags") || 
		CheckWeapon("Mini-UZI Akimbo") ||
		CheckWeapon("MP5K") || 
		CheckWeapon("MP5K Ex Mags") ||
		CheckWeapon("MP5K Rapid Fire") ||
		CheckWeapon("FN P90") || 
		CheckWeapon("FN P90 Ex Mags") || 		
		CheckWeapon("FN P90 Rapid Fire") 
	)
	{
		Spread = 8.0;
		if(hold)
			Spread = 12.0;
	}	
	
	// high spread SMGs
	else if(
		CheckWeapon("TDI Vector") || 
		CheckWeapon("TDI Vector Ex Mags") ||
		CheckWeapon("UMP45") || 
		CheckWeapon("UMP45 Ex Mags") || 
		CheckWeapon("UMP45 Rapid Fire")
	)
	{
		Spread = 9.0;
		if(hold)
			Spread = 13.5;
	}
	
	// low spread ARs and LMGs
	else if(
		CheckWeapon("FAL") || 
		CheckWeapon("FAL Ex Mags") ||
		CheckWeapon("ACR") || 
		CheckWeapon("ACR Ex Mags") || 
		CheckWeapon("SCAR-H") || 
		CheckWeapon("SCAR-H Ex Mags") || 
		CheckWeapon("M4A1") || 
		CheckWeapon("M4A1 Ex Mags") || 
		CheckWeapon("FAMAS") || 
		CheckWeapon("FAMAS Ex Mags") ||
        CheckWeapon("F2000") || 
		CheckWeapon("F2000 Ex Mags") ||
		CheckWeapon("M16A4") || 
		CheckWeapon("M16A4 Ex Mags") ||
		CheckWeapon("L86") || 
		CheckWeapon("L86 Ex Mags") ||
		CheckWeapon("L86 Grip") ||
		CheckWeapon("AUG HBAR") ||
		CheckWeapon("AUG HBAR Ex Mags") ||
		CheckWeapon("AUG HBAR Grip")	
	)
	{
		Spread = 7.0;
		if(hold)
			Spread = 10.5;
	}
	
	// high spread ARs and LMGs
	else if(
		CheckWeapon("AK-47") || 
		CheckWeapon("AK-47 Ex Mags") ||
		CheckWeapon("M240") ||
		CheckWeapon("M240 Ex Mags") ||
		CheckWeapon("M240 Grip") ||
		CheckWeapon("MG4") || 
		CheckWeapon("MG4 Ex Mags") ||
		CheckWeapon("MG4 Grip") 
	)
	{
		Spread = 8.0;
		if(hold)
			Spread = 12.0;
	}

	// high spread ARs and LMGs
	else if(
		CheckWeapon("AK-47") || 
		CheckWeapon("AK-47 Ex Mags") ||
		CheckWeapon("M240") ||
		CheckWeapon("M240 Ex Mags") ||
		CheckWeapon("M240 Grip") ||
		CheckWeapon("MG4") || 
		CheckWeapon("MG4 Ex Mags") ||
		CheckWeapon("MG4 Grip") 
	)
	{
		Spread = 8.0;
		if(hold)
			Spread = 12.0;
	}
	
	// high spread ARs and LMGs
	else if(
		CheckWeapon("Intervention") || CheckWeapon("Intervention Thermal") || CheckWeapon("Intervention Ex Mags") ||
		CheckWeapon("Barrett 50cal") || CheckWeapon("Barrett 50cal Thermal") || CheckWeapon("Barrett 50cal Ex Mags") ||
		CheckWeapon("WA2000") || CheckWeapon("WA2000 Thermal") || CheckWeapon("WA2000 Ex Mags") ||
		CheckWeapon("M14 EBR") || CheckWeapon("M14 EBR Thermal") || CheckWeapon("M14 EBR Ex Mags")
	)
	{
		Spread = 15.0;
		if(hold)
			Spread = 30.0;
	}	

	if(CheckInventory("Perk3_SteadyAim"))
	{
		Spread = Spread * 2 / 3;
	}
	
	return Spread;
}

// Shout "Reloading!"
script 652 (void) {
	GiveInventory("Reloading", 1); // hide the crosshair

#ifdef SKULLTAG
	bool isRed = PlayerTeam() == TEAM_RED;		
	bool isBlue = PlayerTeam() == TEAM_BLUE;
	bool isThree = PlayerTeam() == 2;
	bool isFour = PlayerTeam() == 3;
#else
	bool isRed = false;
	bool isBlue = false;
	bool isThree = false;
	bool isFour = false;
#endif    	

	bool noTeam = (!(isRed || isBlue || isThree || isFour) || COOPERATIVE);

	if((!noTeam && isRed) || (noTeam && CheckInventory("Voice") == 1))
		ActivatorSound("russian/reload",127);
	else if((!noTeam && isBlue) || (noTeam && CheckInventory("Voice") == 0))
		ActivatorSound("us/reload",127);	
	else if((!noTeam && isThree) || (noTeam && CheckInventory("Voice") == 2))
		ActivatorSound("brazil/reload",127);
	else if((!noTeam && isFour) || (noTeam && CheckInventory("Voice") == 3))
		ActivatorSound("opfor/reload",127);
	else if(noTeam && CheckInventory("Voice") == 4)
		ActivatorSound("seal/reload",127);
	else if(noTeam && CheckInventory("Voice") == 5)
		ActivatorSound("tf141/reload",127);
}



// plays hit sound, if it is enabled on the client
script 655 (void) CLIENTSIDE
{
	if(GetCVAR("rgh_hitsound") == 1){
		LocalAmbientSound("generic/fleshhit", 127);
		LocalAmbientSound("generic/fleshhit", 127);
		LocalAmbientSound("generic/fleshhit", 127);
		LocalAmbientSound("generic/fleshhit", 127);
	}
}

// enters class selection menu
script 657 (void)
{
	GiveInventory("GoToMenu", 1);	
}

function int abs (int x)
{
    if (x < 0)
        return -x;

    return x;
}

function void eraseMenu(int p){
	// main menu item band
	HudMessage(s:""; HUDMSG_PLAIN, 300+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 350+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 400+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 450+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 500+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 550+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 600+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 650+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 700+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 750+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 800+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 850+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 900+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 950+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1000+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1050+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1100+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1150+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1200+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1250+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1300+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1350+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1400+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1450+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1500+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1550+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1600+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1650+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1700+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1750+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1800+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1850+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1900+p, CR_WHITE, 100.1, 100.0, 0.0);
	HudMessage(s:""; HUDMSG_PLAIN, 1950+p, CR_WHITE, 100.1, 100.0, 0.0);
	
	// press X to scroll...
	HudMessage(s:""; HUDMSG_PLAIN, 2050+p, CR_WHITE, 100.1, 100.0, 0.0);
	
	// perk table
	HudMessage(s:""; HUDMSG_PLAIN, 2150+p, CR_WHITE, 100.1, 100.0, 0.0);
}

str AwardMenuWeapon[40];

// award menu
script 659 (void) NET
{
	// preconditions
	if(
		COMPETITIVE ||
		GetActorProperty(0,APROP_Health) <= 0 ||
		CheckInventory("Menu") > 0 ||
		CheckInventory("AwardMenu") > 0 ||
		CheckInventory("PowerEMP") > 0 ||
		CheckInventory("InLastStand") > 0
	){
		terminate;
	}
	
	if(CheckInventory("RewardsToPick") == 0){
		SetFont("BIGFONT");
		HudMessage(s:"You don't have any award points!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_RED, 0.5, 0.5, 2.0, 1.0);
		terminate;
	}

    SetPlayerProperty(0, 1, PROP_FROZEN); 

    TakeInventory("MenuCursor", 20);	

	AwardMenuWeapon[PlayerNumber()] = GetWeapon();

    GiveInventory("AwardMenu", 1);
	SetWeapon("AwardMenu");
}

function void drawChooseAward(void){
	SetFont("CONFONT");
	HudMessage(s:"\ccPress \cf", k:"award", s:"\cc to choose your level-up award"; HUDMSG_PLAIN, 2300+PlayerNumber(), CR_RED, 0.5, 0.85, 0.0);
}

function void eraseChooseAward(void){	
	HudMessage(s:""; HUDMSG_PLAIN, 2300+PlayerNumber(), CR_RED, 0.5, 0.80, 0.0);
}

function void closeAwardMenu(void)
{
	eraseMenu(PlayerNumber());
	
	SetPlayerProperty(0, 0, PROP_FROZEN);

	SetWeapon(AwardMenuWeapon[PlayerNumber()]);
	TakeInventory("AwardMenu", 1);
	TakeInventory("PowerMenuTimeFreezer", 1);
	GiveInventory("SetPickupPickup", 1);
}

// redraw award menu
script 660 (void)
{
	eraseMenu(PlayerNumber());
	
	eraseChooseAward();
		
	SetHudSize(800,600,1);
	
	SetFont("BIGFONT");
	HudMessage(s:"Choose award"; HUDMSG_PLAIN, 300+PlayerNumber(), CR_WHITE, 400.0, 30.0, 0.0);
	
	SetFont("CONFONT");
	HudMessage(s:"Press \cffire \ccto scroll      Press \cfalt-fire \ccto select"; HUDMSG_PLAIN, 2050+PlayerNumber(), CR_WHITE, 400.0, 60.0, 0);	
	
	HudMessage(s:"  Close"; HUDMSG_PLAIN, 350+PlayerNumber(), CR_WHITE, 60.1, 100.0, 0.0);
	
	if(CheckInventory("MenuCursor") == 0){
		HudMessage(s:"> Close"; HUDMSG_PLAIN, 350+PlayerNumber(), CR_YELLOW, 60.1, 100.0, 0.0);
	}		

	int currentVerticalCoord = 160.0;
	int currentId = 400;
	int currentIndex = 2;
	
	// add the perk headline
	SetFont("BIGFONT");
	HudMessage(s:"LEARN OR UPGRADE PERK"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, 135.0, 0.0);
	currentId += 50;		
	
	SetFont("CONFONT");
	
	// Blue perks
	if(
		CheckInventory("Perk1_SOH") == 0 && 
		CheckInventory("Perk1_ExtremeConditioning") == 0 &&
		CheckInventory("Perk1_OneManArmy") == 0 &&
		CheckInventory("Perk1_Scavenger") == 0
	){		
		HudMessage(s:"  \cvSleight of Hand\cc:          Faster reloading"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvSleight of Hand\cc:          Faster reloading"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	
		HudMessage(s:"  \cvExtreme Conditioning\cc:     +15% movement speed"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvExtreme Conditioning\cc:     +15% movement speed"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	
		HudMessage(s:"  \cvOne Man Army\cc:             Carry extra ammo"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvOne Man Army\cc:             Carry extra ammo"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	
		HudMessage(s:"  \cvScavenger\cc:                +100% ammo in pickups"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);

        if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvScavenger\cc:                +100% ammo in pickups"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}

		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;	
	}
	
	// Blue perks PRO	
	if(CheckInventory("Perk1_SOH") == 1 && CheckInventory("Perk1_SOH_Pro") == 0){
	    HudMessage(s:"  \cvSleight of Hand PRO\cc:      Faster knifing and grenade throwing"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvSleight of Hand PRO\cc:      Faster knifing and grenade throwing"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(CheckInventory("Perk1_ExtremeConditioning") == 1 && CheckInventory("Perk1_ExtremeConditioning_Pro") == 0)
	{
		HudMessage(s:"  \cvExtreme Conditioning PRO\cc: Regenerate 100% faster and 40% sooner"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvExtreme Conditioning PRO\cc: Regenerate 100% faster and 40% sooner"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}

	if(CheckInventory("Perk1_OneManArmy") == 1 && CheckInventory("Perk1_OneManArmy_Pro") == 0){
		HudMessage(s:"  \cvOne Man Army PRO\cc:         Carry extra gun"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvOne Man Army PRO\cc:         Carry extra gun"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(CheckInventory("Perk1_Scavenger") == 1 && CheckInventory("Perk1_Scavenger_Pro") == 0)
	{
		HudMessage(s:"  \cvScavenger PRO\cc:            +100% powerup duration"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	

	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cvScavenger PRO\cc:            +100% powerup duration"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	// Red perks	
	if(
	    CheckInventory("Perk2_StoppingPower") == 0 &&
	    CheckInventory("Perk2_DangerClose") == 0 &&
	    CheckInventory("Perk2_Juggernaut") == 0 &&
	    CheckInventory("Perk2_ColdBlooded") == 0
	) {
		HudMessage(s:"  \cgStopping Power\cc:           +25% bullet damage"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgStopping Power\cc:           +25% bullet damage"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
		
		HudMessage(s:"  \cgJuggernaut\cc:               +40% damage resistance"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgJuggernaut\cc:               +40% damage resistance"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
		
		HudMessage(s:"  \cgDanger Close\cc:             +100% explosive damage"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgDanger Close\cc:             +100% explosive damage"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
		
		HudMessage(s:"  \cgCold Blooded\cc:             Invisibility to seeker missiles"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgCold Blooded\cc:             Invisibility to seeker missiles"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	// Red perks PRO
	if(CheckInventory("Perk2_StoppingPower") == 1 && CheckInventory("Perk2_StoppingPower_Pro") == 0)
	{
  		HudMessage(s:"  \c
		
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgStopping Power PRO\cc:       Sniper bullets penetrate multiple enemies"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(CheckInventory("Perk2_Juggernaut") == 1 && CheckInventory("Perk2_Juggernaut_Pro") == 0)
	{
  		HudMessage(s:"  \cgJuggernaut PRO\cc:           Double bonuses from health/armor pickups"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgJuggernaut PRO\cc:           Double bonuses from health/armor pickups"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
		
	if(CheckInventory("Perk2_DangerClose") == 1 && CheckInventory("Perk2_DangerClose_Pro") == 0)
	{
  		HudMessage(s:"  \cgDanger Close PRO\cc:         +50% explosive blast radius"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgDanger Close PRO\cc:         +50% explosive blast radius"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(CheckInventory("Perk2_ColdBlooded") == 1 && CheckInventory("Perk2_ColdBlooded_Pro") == 0)
	{
  		HudMessage(s:"  \cgCold Blooded PRO\cc:         Partial invisibility while out of combat"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cgCold Blooded PRO\cc:         Partial invisibility while out of combat"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}

	// Yellow perks
	if(
		CheckInventory("Perk3_SteadyAim") == 0 &&
		CheckInventory("Perk3_Commando") == 0 &&
		CheckInventory("Perk3_LastStand") == 0 &&
		CheckInventory("Perk3_SitRep") == 0
	){
  		HudMessage(s:"  \cdSteady Aim\cc:               +33% hip-fire accuracy"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdSteady Aim\cc:               +33% hip-fire accuracy"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
		
		HudMessage(s:"  \cdCommando\cc:                 +100% knife damage and range"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdCommando\cc:                 +100% knife damage and range"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
		
		HudMessage(s:"  \cdLast Stand\cc:               Pull out your handgun before dying"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdLast Stand\cc:               Pull out your handgun before dying"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
		
		HudMessage(s:"  \cdSit-Rep\cc:                  Full automap with monsters' positions"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdSit-Rep\cc:                  Full automap with monsters' positions"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
  	// Yellow perks PRO	
	if(CheckInventory("Perk3_SteadyAim") == 1 && CheckInventory("Perk3_SteadyAim_Pro") == 0)
	{
		HudMessage(s:"  \cdSteady Aim PRO\cc:           No sniper rifle accuracy penalty while moving"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdSteady Aim PRO\cc:           No sniper rifle accuracy penalty while moving"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(CheckInventory("Perk3_Commando") == 1 && CheckInventory("Perk3_Commando_Pro") == 0)
	{
		HudMessage(s:"  \cdCommando PRO\cc:             Attacking doesn't block regeneration"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdCommando PRO\cc:             Attacking doesn't block regeneration"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(CheckInventory("Perk3_LastStand") == 1 && CheckInventory("Perk3_LastStand_Pro") == 0)
	{
		HudMessage(s:"  \cdLast Stand PRO\cc:           Get 30 health in last stand"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdLast Stand PRO\cc:           Get 30 health in last stand"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
		
	if(CheckInventory("Perk3_SitRep") == 1 && CheckInventory("Perk3_SitRep_Pro") == 0)
	{
		HudMessage(s:"  \cdSit-Rep PRO\cc:              See enemies through walls"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> \cdSit-Rep PRO\cc:              See enemies through walls"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;	
	}
	
	if(currentIndex == 2){
		HudMessage(s:"  All perks are already upgraded to maximum"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);
		currentId += 50;
		currentVerticalCoord += 20.0;
	}
		
	// add the attachment headline
	SetFont("BIGFONT");
	HudMessage(s:"ADD ATTACHMENT TO \ck", s: AwardMenuWeapon[PlayerNumber()]; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord + 15.0, 0.0);
	currentId += 50;
	currentVerticalCoord += 40.0;	
	
	SetFont("CONFONT");
	
	log(s:AwardMenuWeapon[PlayerNumber()]);
	log(s:"===");
	
	if(
		AwardMenuWeapon[PlayerNumber()] == "USP .45" ||
		AwardMenuWeapon[PlayerNumber()] == "Desert Eagle" ||
		AwardMenuWeapon[PlayerNumber()] == ".44 Magnum" ||
		AwardMenuWeapon[PlayerNumber()] == "G18" ||
		AwardMenuWeapon[PlayerNumber()] == "PP2000" ||
		AwardMenuWeapon[PlayerNumber()] == "M9" ||
		AwardMenuWeapon[PlayerNumber()] == "Mini-UZI"
	)
	{
	    HudMessage(s:"  Akimbo:                   Dual wield weapon"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> Akimbo:                   Dual wield weapon"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(
		AwardMenuWeapon[PlayerNumber()] == "USP .45" ||
		AwardMenuWeapon[PlayerNumber()] == "M9" ||
		AwardMenuWeapon[PlayerNumber()] == "PP2000" ||
		AwardMenuWeapon[PlayerNumber()] == "G18" ||
		AwardMenuWeapon[PlayerNumber()] == "M93 Raffica" ||
		AwardMenuWeapon[PlayerNumber()] == "SPAS-12" ||
		AwardMenuWeapon[PlayerNumber()] == "AA-12" ||
		AwardMenuWeapon[PlayerNumber()] == "Striker" ||
		AwardMenuWeapon[PlayerNumber()] == "M1014" ||
		AwardMenuWeapon[PlayerNumber()] == "MP5K" ||
		AwardMenuWeapon[PlayerNumber()] == "UMP45" ||
		AwardMenuWeapon[PlayerNumber()] == "TDI Vector" ||
		AwardMenuWeapon[PlayerNumber()] == "Mini-UZI" ||
		AwardMenuWeapon[PlayerNumber()] == "FN P90" ||
		AwardMenuWeapon[PlayerNumber()] == "M4A1" ||
		AwardMenuWeapon[PlayerNumber()] == "FAMAS" ||
		AwardMenuWeapon[PlayerNumber()] == "SCAR-H" ||
		AwardMenuWeapon[PlayerNumber()] == "FAL" ||
		AwardMenuWeapon[PlayerNumber()] == "M16A4" ||
		AwardMenuWeapon[PlayerNumber()] == "ACR" ||
		AwardMenuWeapon[PlayerNumber()] == "F2000" ||
		AwardMenuWeapon[PlayerNumber()] == "AK-47" ||
		AwardMenuWeapon[PlayerNumber()] == "Intervention" ||
		AwardMenuWeapon[PlayerNumber()] == "Barrett 50cal" ||
		AwardMenuWeapon[PlayerNumber()] == "WA2000" ||
		AwardMenuWeapon[PlayerNumber()] == "M14 EBR" ||
		AwardMenuWeapon[PlayerNumber()] == "L86" ||
		AwardMenuWeapon[PlayerNumber()] == "MG4" ||
		AwardMenuWeapon[PlayerNumber()] == "AUG HBAR" ||
		AwardMenuWeapon[PlayerNumber()] == "M240"
	)
	{
	    HudMessage(s:"  Extended Mags:            +50% increased magazine size"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> Extended Mags:            +50% increased magazine size"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(
		AwardMenuWeapon[PlayerNumber()] == "SPAS-12" ||
		AwardMenuWeapon[PlayerNumber()] == "AA-12" ||
		AwardMenuWeapon[PlayerNumber()] == "Striker" ||
		AwardMenuWeapon[PlayerNumber()] == "M1014" ||
		AwardMenuWeapon[PlayerNumber()] == "L86" ||
		AwardMenuWeapon[PlayerNumber()] == "MG4" ||
		AwardMenuWeapon[PlayerNumber()] == "AUG HBAR" ||
		AwardMenuWeapon[PlayerNumber()] == "M240"
	)
	{
	    HudMessage(s:"  Grip:                     -50% vertical recoil"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> Grip:                     -50% vertical recoil"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(
		AwardMenuWeapon[PlayerNumber()] == "MP5K" ||
		AwardMenuWeapon[PlayerNumber()] == "UMP45" ||
		AwardMenuWeapon[PlayerNumber()] == "FN P90"
	)
	{
	    HudMessage(s:"  Rapid Fire:               Increased rate of fire"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> Rapid Fire:               Increased rate of fire"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;
	}
	
	if(
		AwardMenuWeapon[PlayerNumber()] == "USP .45" ||
		AwardMenuWeapon[PlayerNumber()] == "Desert Eagle" ||
		AwardMenuWeapon[PlayerNumber()] == ".44 Magnum" ||
		AwardMenuWeapon[PlayerNumber()] == "M9"
	)
	{
		HudMessage(s:"  Tactical Knife:           Faster knifing"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> Tactical Knife:           Faster knifing"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;	
	}
	
	if(
		AwardMenuWeapon[PlayerNumber()] == "Intervention" ||
		AwardMenuWeapon[PlayerNumber()] == "Barrett 50cal" ||
		AwardMenuWeapon[PlayerNumber()] == "WA2000" ||
		AwardMenuWeapon[PlayerNumber()] == "M14 EBR"
	)
	{
		HudMessage(s:"  Thermal Scope:            See through scope in darkness"; HUDMSG_PLAIN, currentId, CR_WHITE, 60.1, currentVerticalCoord, 0.0);	
	    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			HudMessage(s:"> Thermal Scope:            See through scope in darkness"; HUDMSG_PLAIN, currentId, CR_YELLOW, 60.1, currentVerticalCoord, 0.0);	
		}
	    
		currentId += 50;
		currentIndex += 1;
		currentVerticalCoord += 20.0;		
	}
	
	// no award are available
	if(currentIndex == 2){
		SetHudSize(0,0,1);
		SetFont("BIGFONT");
		HudMessage(s:"No upgradeable perks or attachments for \ck", s:AwardMenuWeapon[PlayerNumber()], s:" \cgare available!"; HUDMSG_FADEOUT, 2200+PlayerNumber(), CR_RED, 0.5, 0.5, 2.0, 1.0);
		closeAwardMenu();
		terminate;
	}
	
	if(currentIndex - 1 <= CheckInventory("MenuCursor")){
		TakeInventory("MenuCursor", 40);
		ACS_ExecuteAlways(660,0,0,0,0);
	}
}

script 661 (void)
{
	closeAwardMenu();
	
	int currentIndex = 2;
	
	// Blue perks
	if(
		CheckInventory("Perk1_SOH") == 0 && 
		CheckInventory("Perk1_ExtremeConditioning") == 0 &&
		CheckInventory("Perk1_OneManArmy") == 0 &&
		CheckInventory("Perk1_Scavenger") == 0
	){	
		// SOH	
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,0,0,0);	
		}
	
		currentIndex += 1;
	
		// Ex Cond.
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,1,0,0);	
		}
	    
		currentIndex += 1;
	
		// OMA
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,2,0,0);	
		}
	
		currentIndex += 1;
	
		// Scavenger
        if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,21,0,0);	
		}

		currentIndex += 1;
	}
	
	// Blue perks PRO	
	if(CheckInventory("Perk1_SOH") == 1 && CheckInventory("Perk1_SOH_Pro") == 0){
	    // SOH PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,9,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	if(CheckInventory("Perk1_ExtremeConditioning") == 1 && CheckInventory("Perk1_ExtremeConditioning_Pro") == 0)
	{
		// Ex Cond PRO
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,10,0,0);	
		}
	    
		currentIndex += 1;
	}

	if(CheckInventory("Perk1_OneManArmy") == 1 && CheckInventory("Perk1_OneManArmy_Pro") == 0){
		// OMA PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,11,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	if(CheckInventory("Perk1_Scavenger") == 1 && CheckInventory("Perk1_Scavenger_Pro") == 0)
	{
		// Scavenger PRO
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,20,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	// Red perks	
	if(
	    CheckInventory("Perk2_StoppingPower") == 0 &&
	    CheckInventory("Perk2_DangerClose") == 0 &&
	    CheckInventory("Perk2_Juggernaut") == 0 &&
	    CheckInventory("Perk2_ColdBlooded") == 0
	) {
		// Stopping Power
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,3,0,0);	
		}
	    
		currentIndex += 1;
		
		// Juggernaut
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,5,0,0);	
		}
	    
		currentIndex += 1;
		
		// Danger Close
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,4,0,0);	
		}
	    
		currentIndex += 1;
		
		// Cold Blooded
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,22,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	// Red perks PRO
	if(CheckInventory("Perk2_StoppingPower") == 1 && CheckInventory("Perk2_StoppingPower_Pro") == 0)
	{
  		// Stopping Power PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,12,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	if(CheckInventory("Perk2_Juggernaut") == 1 && CheckInventory("Perk2_Juggernaut_Pro") == 0)
	{
  		// Juggernaut PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,14,0,0);	
		}
	    
		currentIndex += 1;
	}
		
	if(CheckInventory("Perk2_DangerClose") == 1 && CheckInventory("Perk2_DangerClose_Pro") == 0)
	{
        // Danger Close PRO			    
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,13,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	if(CheckInventory("Perk2_ColdBlooded") == 1 && CheckInventory("Perk2_ColdBlooded_Pro") == 0)
	{
  		// Cold Blooded PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,18,0,0);	
		}
	    
		currentIndex += 1;		
	}

	// Yellow perks
	if(
		CheckInventory("Perk3_SteadyAim") == 0 &&
		CheckInventory("Perk3_Commando") == 0 &&
		CheckInventory("Perk3_LastStand") == 0 &&
		CheckInventory("Perk3_SitRep") == 0
	){
  		// Steady Aim
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,6,0,0);	
		}
	    
		currentIndex += 1;
		
		// Commando
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,7,0,0);	
		}
		
	    currentIndex += 1;
	    
		// Last Stand
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,8,0,0);	
		}
	    		
		currentIndex += 1;
		
		// Sit Rep
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,23,0,0);	
		}
	    
		currentIndex += 1;
	}
	
  	// Yellow perks PRO	
	if(CheckInventory("Perk3_SteadyAim") == 1 && CheckInventory("Perk3_SteadyAim_Pro") == 0)
	{
		// Steady Aim PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,15,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	if(CheckInventory("Perk3_Commando") == 1 && CheckInventory("Perk3_Commando_Pro") == 0)
	{
		// Commando PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,17,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	if(CheckInventory("Perk3_LastStand") == 1 && CheckInventory("Perk3_LastStand_Pro") == 0)
	{
		// Last Stand PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,16,0,0);	
		}
	    
		currentIndex += 1;
	}
		
	if(CheckInventory("Perk3_SitRep") == 1 && CheckInventory("Perk3_SitRep_Pro") == 0)
	{
		// Sit Rep PRO
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(624,0,24,0,0);	
		}
	    
		currentIndex += 1;	
	}

	// Attachments
	
	// Akimbo	
	if(
		AwardMenuWeapon[PlayerNumber()] == "USP .45" ||
		AwardMenuWeapon[PlayerNumber()] == "Desert Eagle" ||
		AwardMenuWeapon[PlayerNumber()] == ".44 Magnum" ||
		AwardMenuWeapon[PlayerNumber()] == "G18" ||
		AwardMenuWeapon[PlayerNumber()] == "PP2000" ||
		AwardMenuWeapon[PlayerNumber()] == "M9" ||
		AwardMenuWeapon[PlayerNumber()] == "Mini-UZI"
	)
	{   
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(619,0,4,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	// Ex Mags
	if(
		AwardMenuWeapon[PlayerNumber()] == "USP .45" ||
		AwardMenuWeapon[PlayerNumber()] == "M9" ||
		AwardMenuWeapon[PlayerNumber()] == "PP2000" ||
		AwardMenuWeapon[PlayerNumber()] == "G18" ||
		AwardMenuWeapon[PlayerNumber()] == "M93 Raffica" ||
		AwardMenuWeapon[PlayerNumber()] == "SPAS-12" ||
		AwardMenuWeapon[PlayerNumber()] == "AA-12" ||
		AwardMenuWeapon[PlayerNumber()] == "Striker" ||
		AwardMenuWeapon[PlayerNumber()] == "M1014" ||
		AwardMenuWeapon[PlayerNumber()] == "MP5K" ||
		AwardMenuWeapon[PlayerNumber()] == "UMP45" ||
		AwardMenuWeapon[PlayerNumber()] == "TDI Vector" ||
		AwardMenuWeapon[PlayerNumber()] == "Mini-UZI" ||
		AwardMenuWeapon[PlayerNumber()] == "FN P90" ||
		AwardMenuWeapon[PlayerNumber()] == "M4A1" ||
		AwardMenuWeapon[PlayerNumber()] == "FAMAS" ||
		AwardMenuWeapon[PlayerNumber()] == "SCAR-H" ||
		AwardMenuWeapon[PlayerNumber()] == "FAL" ||
		AwardMenuWeapon[PlayerNumber()] == "M16A4" ||
		AwardMenuWeapon[PlayerNumber()] == "ACR" ||
		AwardMenuWeapon[PlayerNumber()] == "F2000" ||
		AwardMenuWeapon[PlayerNumber()] == "AK-47" ||
		AwardMenuWeapon[PlayerNumber()] == "Intervention" ||
		AwardMenuWeapon[PlayerNumber()] == "Barrett 50cal" ||
		AwardMenuWeapon[PlayerNumber()] == "WA2000" ||
		AwardMenuWeapon[PlayerNumber()] == "M14 EBR" ||
		AwardMenuWeapon[PlayerNumber()] == "L86" ||
		AwardMenuWeapon[PlayerNumber()] == "MG4" ||
		AwardMenuWeapon[PlayerNumber()] == "AUG HBAR" ||
		AwardMenuWeapon[PlayerNumber()] == "M240"
	)
	{
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(619,0,2,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	// Grip
	if(
		AwardMenuWeapon[PlayerNumber()] == "SPAS-12" ||
		AwardMenuWeapon[PlayerNumber()] == "AA-12" ||
		AwardMenuWeapon[PlayerNumber()] == "Striker" ||
		AwardMenuWeapon[PlayerNumber()] == "M1014" ||
		AwardMenuWeapon[PlayerNumber()] == "L86" ||
		AwardMenuWeapon[PlayerNumber()] == "MG4" ||
		AwardMenuWeapon[PlayerNumber()] == "AUG HBAR" ||
		AwardMenuWeapon[PlayerNumber()] == "M240"
	)
	{
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(619,0,0,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	// Rapid Fire
	if(
		AwardMenuWeapon[PlayerNumber()] == "MP5K" ||
		AwardMenuWeapon[PlayerNumber()] == "UMP45" ||
		AwardMenuWeapon[PlayerNumber()] == "FN P90"
	)
	{
	    if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(619,0,1,0,0);	
		}
	    
		currentIndex += 1;
	}
	
	// Tac Knife
	if(
		AwardMenuWeapon[PlayerNumber()] == "USP .45" ||
		AwardMenuWeapon[PlayerNumber()] == "Desert Eagle" ||
		AwardMenuWeapon[PlayerNumber()] == ".44 Magnum" ||
		AwardMenuWeapon[PlayerNumber()] == "M9"
	)
	{
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(619,0,5,0,0);	
		}
	    
		currentIndex += 1;	
	}
	
	// Thermal Scope
	if(
		AwardMenuWeapon[PlayerNumber()] == "Intervention" ||
		AwardMenuWeapon[PlayerNumber()] == "Barrett 50cal" ||
		AwardMenuWeapon[PlayerNumber()] == "WA2000" ||
		AwardMenuWeapon[PlayerNumber()] == "M14 EBR"
	)
	{
		if(currentIndex - 1 == CheckInventory("MenuCursor")){
			ACS_ExecuteAlways(619,0,3,0,0);	
		}
	                             
		currentIndex += 1;		
	}
	
	delay(1);
	if(CheckInventory("RewardsToPick") > 0){		
		drawChooseAward();
	}
	else {
		eraseChooseAward();
	}
}

// clean up after player disconnects
script 662 (int i) DISCONNECT
{	
	GotClass[i + 1] = 0;
	ExperienceNeed[i + 1] = 500;
	TacticalInsertion[i + 1] = 0;
	
	for(int j = 0; j < 7; j++){
		Entered[i][j] = 0;
	}
}

// returns 1 if actor is above floor (used to stop playing step sound while flying)
script 665 (void)
{

  int notOnFloor = 0;
  
  if(GetActorZ (0) - GetActorFloorZ (0) > 0 << 16){
    notOnFloor = 1;
  }
  
	SetResultValue(notOnFloor);
} 